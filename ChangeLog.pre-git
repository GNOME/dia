2009-04-21  Steffen Macke <sdteffen@sdteffen.de>

	* makefile.msc: Adjustments for libart.dll, deploye diaw.exe
	* installer/win32/dia.nsi: Remove drs.dll for the time being, re-add
	libart.dll, adjust for current libart 2.3.20 DLL from ftp.gnome.org
	
2009-04-17  Steffen Macke <sdteffen@sdteffen.de>

	* app/commands.c: Updated copyright date

2009-04-15  Steffen Macke <sdteffen@sdteffen.de>

	* makefile.msc: cairo, drs, locale build fixes
	* dia.nsi: Various updates for 0.97-pre3
	
2009-04-13  Hans Breuer  <hans@breuer.org>

	* NEWS config.h.win32 configure.in : updated for dia-0.97-pre3

	* plug-ins/python/python.c : found and fixed the immediate crash
	when loading the Python plug-in under win32 with Python version newer
	than 2.3. Still did not get prebuilt pygtk running with it, so the
	requirement of Python 2.3 (on win32) remains the same.

	* data/integrated-ui.xml app/menus.c : removed Layers/Layers... from
	the integrated UI menu and assigned <control>L also to ShowLayers
	(the two menu entries are never available together, so no conflict)
	Fixes bug #576879.

	* app/preferences.[ch] :removed "Integrated UI" option here ...
	(together with the annoying change-needs-restart message)
	* app/app_procs.c : ... and made it a start-up option, aka. command
	line switch. If the UI type some day can be switch at runtime the
	prefernce setting may be added again.

2009-04-11  Hans Breuer  <hans@breuer.org>

	* lib/propdialogs.c : derive initial scrolling area of properties
	dialog from screen size, only use hardcoded values as fallback

	* app/app_procs.c :  patch from Arunan Balasubramaniam, bug #573921 to
	to reduce wakeups prefer g_timeout_add_seconds() over g_timeout_add()

	* app/modify_tool.c(modify_button_press) : don't got to single handle 
	movement if there is more than one object selected, bug #525011
	* app/handle_ops.c : consider the selection state in choosing the
	handle color, to give some feedback on the handles behavior change

2009-04-06  Hans Breuer  <hans@breuer.org>

	* app/display.c : something called ddisplay_flush() while we were
	already in ddisplay_destroy() - moved removing the idle handler to
	ddisplay_really_destroy(), the last possible moment - bug #578173

2009-04-05  Hans Breuer  <hans@breuer.org>

	* objects/AADL/aadlbox.c : one const too much, build error with gcc

	* plug-ins/python/wdeps.py : intended tinting on win32, too.
	* plug-ins/python/dot2dia.py : don't let a single unknown color make
	the whole import fail

	* objects/AADL/aadlbox.c(aadlbox_destroy) : free ports after calling
	element_destroy(), which needs valid handles, should fix bug #575224
	Replaced some leaking, superfluous heap allocations with stack allocs.

	* lib/diarenderer.c(get_text_width) : complain if the derived renderer
	does not implement the method and does not maintian DiaRenderer::font.
	* plug-ins/cairo/diacairo-renderer.c : actually maintain the font field
	to make text cursor position calculation work, part of bug #576548

	* app/display.c : make the tab use the short name again and adjust the
	(integrated UI) application title HIC compliant, fixing bug #527288

	* objects/network/basestation.c : don't move non-movable handles,
	fixing bug #574637

	* objects/UML/association.c : force an internal state update after 
	changing properties, fixes bug #576843

	* lib/persistence.c : instead of trying to manage the open state of our
	windows 'by hand' just use GTK_WIDGET_MAPPED(window), fixes bug #574388

2009-04-04  Hans Breuer  <hans@breuer.org>

	* app/interface.c : don't translate g_warning
	* lib/sheet.c : fix typo in translatebale string

2009-03-31  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/wdeps.py : tinting of nodes now working as intended
	(also on windows)
	* samples/Self/dia-win32-2.dot samples/Self/dia-win32-2.dia : sample
	dependency graph with instructions

2009-03-30  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/wdeps.py : implement another coloring theme, fix
	the previous tinting; allow to leave out C-Runtime on Linux, too
	* plug-ins/python/dot2dia.py : the assumption of every node name being
	in quotes broke with dia-linux.dot; now fixed and ...
	* samples/Self/dia-linux-2.dia : ... updated the diagram also with new
	colors and passing --remove-crt to wdeps.py
	

	* app/find.and-replace.c : ensure visibility of the object found
	* app/display.[ch](ddisp_present_object) : new function to move
	an object into view with minimum scrolling

2009-03-29  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : slightly hacked version to avoid double request
	of "Exit without save" for integrated UI case, bug #573635

	* app/display.c : the interactive cairo renderer has highlighting 
	issues (bug #576548). For now default to the libart renderer for
	the antialiased display renderer (only fall back to cairo if the
	libart plug-in is not loaded)
	* plug-ins/libart/dialibartrenderer : initialize 
	DiaRenderer::is_interactive to allow entering text edit mode

	* app/display.h : increased the arbitrary zoom limits to make my 
	current stress test diagram fit

	* plug-ins/python/wdeps.py : my dependency analysis script is finally 
	running on Linux and together with dot can produce pretty nice images
	(last change was the introduction of tinting by layer)
	* samples/Self/dia-linux-2.dia : dependency graph of Dia
	* samples/Self/dia-linux-2.dot : dot file produced by wdeps.py and
	preocessed by dot

2009-03-28  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo-renderer.c : apparently I've found a 
	workaround for pango bug #341481. Or maybe bug #573261 always we mine.

	* lib/prop_text.c : for 'multistring' connect to the 'change' signal
	of the TextBuffer rather than to the unreliable 'insert-at-cursor' of
	the TextView -> "Chronogram - line" works again, bug #576905
	* lib/propinternals.h  lib/prop_attr.c lib/prop_geomtypes.c 
	  lib/prop_inttypes.c lib/prop_text.c lib/prop_widgets.c 
	  lib/propdialogs.c : make prophandler_connect() take a GObject* to
	do the above without warnings

2009-03-27  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/dot2dia.py plug-ins/python/Makefile.am : initial 
	version of dot (http://www.graphviz.org) import for Dia

2009-03-26  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/pydia-property.c : check for a correct number of
	bezier points before assigning them. So evem a broken PyDia script
	can not crash the core (this way)

2009-03-25  Hans Breuer  <hans@breuer.org>

	* plug-ins/diapsrenderer.c : dont't throw away alignment information
	an don't scale text arbitrary, we can't predict the Latin-1 font size
	exactly enough. Fiyes bug #575186.
	* lib/textline.[ch] : more const correct, avoids warning above

2009-03-24  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/diastddia.py : almost finished, a bug left in Arc's 
	curve_distance calculation. Implemented the insane load/save property
	name mapping - bug #576468, implemented draw_text and draw_arc. Some 
	comments on bezier related file format weakness.
	Write some paper info; convert strings before writing to avoid 
	invalid XML (text and filename)

	* plug-ins/python/otypes.py : 'meta' is part of every object type 

	* samples/Self/dia-standard-objects.dia : new file documenting the
	structure of Dia's "Standard - *" objects, see also bug #576468

2009-03-23  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/diastddia.py : a new renderer implementation which 
	outputs Dia's native format, but restricted to "Standard - *"-objects.
	Initial version: buggy and incomplete (e.g. bug #576468).
	* plug-ins/python/Makefile.am : added to EXTRA_DIST
	* plug-ins/python/pydia-render.c : if the PyDia renderer does not
	implement an optional method just fall back to the base classes
	render implementation. Also (try to) warn about missing, not optional
	methods with PyErr_Warn(), but can't find these messages yet.

	* plug-ins/python/diasvg.py : self.line_width was not initialized

	* samples/UML-demo.dia : converted to be readable, not a single line
	of uncpompresed XML.

2009-03-22  Hans Breuer  <hans@breuer.org>

	* plug-ins/UML/class_dialog.c : some more NULL pointer checks to avoid
	crash bug #576247 

2009-03-15  Hans Breuer  <hans@breuer.org>

	* doc/en/usage-objects-basic.xml : removed old workaround for DEL, we
	have put quite some work to make it behave as expected. Still it would
	be nice to have described the new text edit mode in more detail ...
	* doc/en/usage-customization.xml doc/en/graphics/file-preferences-*.png
	  doc/en/graphics/preferences-gridlines.png : updated to show the new 
	layout, also initial description of the Favorites pane. 
	Whitespace changes to have it more readable with tab width 8.
	* doc/en/graphics/preferences-fig.png : unused -> deleted
	* doc/en/Makefile.am : reflect above changes

	* doc/en/usage-objects-basic.xml en/graphics/toolbox-basic.png : 
	reflect the recent addition of the twelves basic object - Outline
	* en/usage-quickstart.xml : add more appeal(ees)

	* plug-ins/cairo/diacairo-renderer.c : some unused test-code attempting
	to work around bug #573261 but no luck.

	* plug-ins/python/allprops.py : alpha-numeric sorting by type; after 
	by number of users
	* plug-ins/python/aobjects.py : to make the resulting diagram more 
	interesting we set every sting property with it's name
	* plug-ins/python/bbox.py : create annotated bounding boxes
	* plug-ins/python/diagx.py : handling more tags/types like Ellipsis,
	EnumValue and Function, some other are silently ignored
	* plug-ins/python/doxrev.py : try to arrange before inserting the
	classes into the diagram
	* plug-ins/python/arrange.py : added for the above
	* plug-ins/python/otypes.py : a better fix for running standalone or
	from the toolbox menu
	* plug-ins/python/pydiadoc.py : work better from toolbox and filter out
	the SWIG noise when running from the other bindings, some more objects

	* plug-ins/python/pydia-paperinfo.c : fixed typo in docu
	
	* samples/Self/PyDiaObjects.dia : updated to 0.97 interface (e.g. PaperInfo
	and fixed the same typo)

	* objects/Database/compound.c : now there is no DiaObject any longer which
	does not deliver at least OBJECT_COMMON_PROPERTIES

	* bindings/test.py : make it work again (on win32)

2009-03-13  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo.c : rather than using broken ellipse 
	approximation convert to translate/scale/arc dance, fixes bug #574868

2009-03-09  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/codegen.py : PascalRenderer by Johann Glaser and
	some adjustments to (Cxx/Py/Java)Renderer to almost get on par
	(now really commited)

2009-03-08  Hans Breuer  <hans@breuer.org>

	* lib/filter.c(filter_guess_*_filter) : make the no-guess flag work
	as intended, i.e. when there is just one filter per extension it's
	no guess

	* plug-ins/python/pydia-property.c : implement PyDia_set_Arrow() to
	allow modification of line ends from python scripts, like:
		o.properties["start_arrow"] = (17, .5, .5)

	* app/filedlg.c : drop using GTK_WIN_POS_MOUSE on the file dialogs. 
	Nowadays that almost inevitable would lead to a partial off-screen
	dialog, see e.g. bug #314084 and bug #512580

	* lib/dia_xml_libxml.h lib/dia_xml.[ch] lib/prop_geomtypes.h
	  plug-ins/shape/shape-export.c : removed some cruft from lixml1 
	days while investigating bug #570592
	* config.h.win32 : insignificant changes slightly related bug #570592

	* app/menus.c : don't pass diagram and filename to plug-ins called from
	the toolbox-menu, otherwise the pydia help series could unintentinally
	modify unrelated open diagrams

2009-03-07  Hans Breuer  <hans@breuer.org>

	* app/menus.c(create_or_ref_display_actions) :  only create the action
	group once, not per display, so the right actions are sensitive for the
	"Use menu bar", too. Fixes bug #574472
	
	* app/layer_dialog.[ch] : implement "Add Layer" and "Rename Layer" also
	without the indirection Layer dialog
	* app/menus.c : activate both commands
	* lib/diagramdata.[ch] lib/libdia.def : implement and export
	data_layer_get_index() used for the above

	* data/display-ui.xml data/integrated-ui.xml data/popup-ui.xml
	  app/menus.c : move "Edit/Properties" to "File/Diagram Properties" as
	suggested by bug #573259, also create a Layers submenu to hold formerly
	"Edit/Layers", "Objects/Move (selection) to layer [...]"
	* app/pixmaps/objects-layer-above.png app/pixmaps/layer-add.png
	  app/pixmaps/objects-layer-below.png app/pixmaps/layers.png
	  app/pixmaps/layer-rename.png : stock icons stolen from Inkscape for 
	the new Layers menu
	* app/Makefile.am app/makefile.msc : generate inline icons
	* app/commands.[ch] : new callbacks for layer add/rename (not enabled)

	* app/preferences.c(prefs_set_value_in_widget) : don't choke on 
	val==NULL and have a matching default initialization for units, 
	both fixing bug #573625
	(prefs_get_value_from_widget) : only call the props update function if
	something has changed, get rid of spurious restart message, bug #574387

	* lib/persistence.c : updating/serializing window positions had issues,
	now hopefully fixed, bug #574388

	* app/textedit_tool.c : ensure the action sensitivity is updated after
	entering textedit mode. No tool activation by entering text, bug #572307

	* app/menus.c : unique accelerators again, bug #573257

2009-03-01  Steffen Macke <sdteffen@sdteffen.de>

	* makefile.msc: Fixed typo (dia.exe was copied to dia-app.dll when doing
	"make full")
	* installer/win32/dia.nsi: Don't install Desktop shortcut. Patch from Niels
	Martin Hansen
	
2009-02-26  Steffen Macke <sdteffen@sdteffen.de>

	* po/POTFILES.in:
	* configure.in:
	* installer/win32/Makefile.am:
	* installer/win32/gennsh.c:
	* Makefile.am: Add gennsh.c, a dummy C program to create NSIS
	installer locale files. Bugzilla bug #572202

2009-02-25  Steffen Macke <sdteffen@sdteffen.de>

	* app/sheets_dialog_callbacks.c:
	* lib/libdia.def:
	* lib/sheet.c:
	* lib/dia_dirs.[ch]: Save relative path for icons in user created
	sheets; allow icon loader to fall back to system directoy if icon
	is not found in config directory; fixes bug #573027

2009-02-24  Steffen Macke <sdteffen@sdteffen.de>

	* app/sheets_dialog_callbacks.c: Write <icon> to <object> instead of
	<description>, fixes part of bug #573027

2009-02-20  Steffen Macke <sdteffen@sdteffen.de>

	* doc/en/dia.xml: Bumped revisions and dates to indicate progress
	for 0.97 release.

2009-02-19  Steffen Macke <sdteffen@sdteffen.de>

	* installer/win32/dia.nsi: Include missing SISSI icons

2009-02-16  Steffen Macke <sdteffen@sdteffen.de>

	* installer/win32/dia.nsi: Various small updates
	* installer/win32/locale/*.nsh: Use Python 2.3 instead of 2.2 
	* makefile.msc: Consequent use of build/win32

2009-02-15  Hans Breuer  <hans@breuer.org>

	* configure.in config.h.win32 NEWS : dia-0.97-pre2

	* plug-ins/python/Makefile.am : every script to be installed for
	--with-python must be available with EXTRA_DIST, bug #571862
	(pyplugin_SCRIPTS_TO_INSTALL) : one variable to be used for both
	cases, removed group_props.py there, the built-in dialog works better

	* configure.in config.h.win32 : release of dia-0.97-pre1, finally;)
	* INSTALL NEWS : updated

	* tests/test-objects.c : g_assert(o->ops->get_object_menu == NULL || 
	o->ops->get_object_menu(o, &point) != NULL); see below

	* plug-ins/dxf/dxf-import.c : no localization of debug messages

	* app/interface.c : don't add "Standard - Outline" when !HAVE_CAIRO
	* app/create_tool.c : the error message for failing to create an object
	was assuming the typename to be valid (crashing during message)

	* objects/standard/outline.c objects/standard/standard.c : pollute with
	#ifdef HAVE_CAIRO, otherwise Dia won't start when built --without-cairo
	( Couldn't find standard objects ... )

	[warningectomy - not sure where I've counted the 30;) ]
	* lib/diarenderer.c : fix constness to produce no warnings anymore
	* lib/diagdkrenderer.c : pointer targets ... differ in signedness
	* objects/chronogram/chronoline_event.c : dereferencing type-punned 
	pointer will break strict-aliasing rules
	* objects/Misc/measure.c : object_menu() now returning NULL, see below
	* objects/Database/table_dialog.c : use GPOINTER_TO_UINT to avoid
	warning: cast from pointer to integer of different size
	* lib/object_defaults.c objects/FS/flow.c : use GPOINTER_TO_INT()
	* lib/sheet.c : use GINT_TO_POINTER()
	* lib/object.c : use GPOINTER_TO_UINT()
	* plug-ins/wmf/wmf.cpp : explicit accept int precision for margins
	* plug-ins/xslt.c : pointer targets ... differ in signedness

	* app/disp_callbacks.c : allow obj->ops->get_object_menu() return NULL
	  objects/standard/outline.c : use it for outline_get_object_menu

	* app/disp_callbacks.c : make empty_menu a really empty DiaMenu with
	menu_items==0 to avoid superfluous separators (bug #532534)
	(ddisplay_canvas_events) : warning - integral size mismatch in argument

2009-02-14  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/scascale.py : check input feasibility, bug #440884

	* app/preferences.[ch] app/display.c : allow to configure the initial
	mainpoint magnetism, aka. "Snap to Object", bug #571724

	* app/diagram.c(diagram_load_into) : cleanup to remember the original
	path of an import file (bug #570862) and also avoid to not simply save
	the newly created diagram without asking for confirmation of the 
	filename. Also reflect the filename in the window title.

	* plug-ins/wmf/wmf_gdi.h : define LPCWSTR type, bug #571125

2009-02-08  Hans Breuer  <hans@breuer.org>

	[warningectomy - about 30 left]
	* configure.in : disable -Wunused, add a lot more useful, see:
	http://blogs.gnome.org/otte/2008/12/22/warning-options/
	* lib/dia_xml.c plug-ins/svg/render_svg.c : pointers differ in signedness
	* lib/diagramdata.c : declared static but never defined
	* lib/prop_dict.c lib/plug-ins.c : unused variable
	* plug-ins/python/diamodule.c : dereferencing type-punned pointer will
	break strict-aliasing rules, unused variables
	* plug-ins/custom_line/line_info.c : mostly pointer targets differ in 
	signedness, but also some superfluous allocations
	* lib/prop_sdarray.c lib/prefs.c objects/standard/line.c 
	  plug-ins/libart/dialibartrenderer.[ch] plug-ins/libart/render_libart.c
	  objects/AADL/aadl.c app/layer_dialog.c : no previous prototype 
	(aka: should be static, prototyped or deleted)
	* plug-ins/dxf/autocad_pal.c : maybe used uninitialized
	* app/confirm.c : format not a string literal and no format arguments
	* plug-ins/postscript/paginate_psprint.c : use g_object_(g|s)et_data()
	* (diagram_print_ps) : format not a string literal and no format arguments
	  and g_free(g_get_home_dir()) - agood reason for crashing later on
	* app/load_save.c(diagram_data_save) : may be used uninitialized
	* objects/UML/association.c : removed unused functions
	* app/exit_dialog.c : unused variable, format not a string literal and 
	no format arguments
	* app/menus.c : format not a string literal and no format arguments
	* persistence.c : defined but not used
	* objects/SISSI/*.[ch] : from around 100 warnings down to 2 ...
	* objects/standard/arc.c : removed unused function
	* lib/message.c : assignment discards qualifiers from pointer target type

	* app/pixmaps/magnify.xpm app/pixmaps/scroll.xpm app/pixmaps.h : removed
	* app/Makefile.am : adapted
	* app/interfaces.c : added remaining XPMs directly

	* lib/diagramdata.c : signed/unsigned mismatch
	* lib/diagdkrenderer.c : different 'const' qualifiers
	* lib/persistence.[ch] lib/message.c : constness
	* app/autosave.c : doe not take a GCallback, but a GSourseFunc
	* app/layer_dialog.c : gtk_button_set_image() takes a GtkWidget*
	* app/textedit.c : s/ObjectChangeApplyFunc/UndoApplyFunc/ etc.
	* plug-ins/wmf/wmf.cpp : explicit cast 'gunichar2 *' to 'W32::LPCWSTR'

	* lib/makefile.msc : add -DG_DISABLE_DEPRECATED
	* lib/filter.c lib/font.c lib/paper.c lib/widgets.c : 
	s/g_strcasecmp/g_ascii_strcasecmp/

2009-02-07  Hans Breuer  <hans@breuer.org>

	* lib/dia_svg.c : map special svg font name "sanserif" to special 
	dia font name "sans"
	
	* lib/dia_image.c(dia_image_get_broken) : was broken
	* plug-ins/svg/svg-import.c : don't try to create_standard_image() with
	fileanme==NULL, rather set an invalid name. Better than crashing on
	<svg:image data="..."/>
	* lib/libdia.def : s/dia_image_release/dia_image_unref/

	[two less leaks - thanks valgrind]
	* lib/dia_image.c : free filename
	* plug-ins/svg/svg-import.c(read_poly_svg) : free points

	* plug-ins/xslt/xsltdialog.c : add #undef GTK_DISABLE_DEPRECATED to 
	fix bug #570850 - should be ported some day

	* lib/dia_image.c : turn DiaImage into a GObject, plugs memory leak
	fixing bug #570850

	* plug-ins/svg/svg-import.c : actually implement read_image_svg(),
	part of bug #570863 (strange this was not reporeted before)
	(read_text_svg) : was creating two much whitespace for <tspan/>

	* lib/diatypes.h : typedef _DiaImage DiaImage, i.e. make DiaImage 
	follow the naming pattern of every other struct in Dia's source ...
	* lib/dia_image.[ch] : ... and also sprinkled const and rename
	dia_image_release to dia_image_unref (too seldom used!)
	* objects/SISSI/sissi.h objects/SISSI/sissi.c objects/KAOS/metabinrel.c
	  objects/standard/image.c objects/custom/shape_info.h
	  lib/diarenderer.[ch] lib/diasvgrenderer.c lib/diagdkrenderer.c
	  plug-ins/python/pydia-render.c plug-ins/python/pydia-image.[ch]
	  plug-ins/dxf/dxf-export.c plug-ins/drs/dia-render-script-renderer.c
	  plug-ins/hpgl/hpgl.c plug-ins/metapost/render_metapost.c
	  plug-ins/cairo/diacairo-renderer.c plug-ins/pgf/render_pgf.c
	  plug-ins/pstricks/render_pstricks.c plug-ins/cgm/cgm.c
	  plug-ins/postscript/diapsrenderer.c plug-ins/wpg/wpg.c
	  plug-ins/libart/dialibartrenderer.c plug-ins/wmf/wmf.cpp
	  plug-ins/xfig/xfig-export.c plug-ins/vdx/vdx-export.c : adapted 
	accordingly in prepartion to fix bug #570850
	* objects/SISSI/sissi.c : don't leak ObjectSISSI::image

2009-02-06  Hans Breuer  <hans@breuer.org>

	* lib/beziershape.c(beziershape_update_data): remove stray semicolon 
	leading to leaking all connections on num_points change and the attempt
	to free memory which was not allocated; fixes bug #570808.

	* objects/standard/textobj.c : optionally draw the bounding box of text
	with the given fill_color (Enrico Minack, bug #436560)

	* app/disp_callbacks.c app/tool.h app/modify_tool.c : also allow
	TextEdit entry via Button Press and Hold - patch from  Robert Young
	fixing bug #570304

	* plug-ins/python/diasvg_import.py : remove exception for error output

2009-02-01  Hans Breuer  <hans@breuer.org>

	* plug-ins/svg/svg-import.c : reset_arrows() to not create standard
	objects with toolbox defaults during svg import, fixes bug #537103
	(if the effect is desired it is still available with diasvg_import.py)

	* lib/persitence.c : use g_hash_table_new_full() to get rid of a lot of
	g_warnings for double allocations, the better fix for bug #564890

	* lib/prop_dict.c(dictprop_load) : make it work, too.

	* lib/dia_dirs.c(dia_get_canonical_path) : shortcut for pathes not 
	including ".." or "./" to keep UNC pathes intact; bug #362397

	* po/POTFILES.in : +objects/Misc/grid_object.c

	* plug-ins/drs/dia-render-script-renderer.c 
	  plug-ins/drs/dia-render-script.c : wrap <render>calls</render>, 
	save <properties/> by default
	
	* plug-ins/drs/dia-render-script-import.c : more code, still unused

	* app/menus.c : stop complains during plug-in callback menu 
	registration for the integrated UI case

	* lib/object.[ch] lib/dia_xml.[ch] lib/prop_dict.[ch] 
	  lib/properties.[ch] lib/propinternals.h lib/Makefile.am 
	  lib/libdia.def po/POTFILES.in : allow to serialize meta info with 
	every DiaObject - no UI to modify it yet
	* lib/plug-ins.h : bump api version because object size has changed
	* plug-ins/python/pydia-property.c : handle translation between Python
	and Dia dictionary to make accesible. Also s/g_warning/g_debug/
	* plug-ins/python/diasvg_import.c : generate object meta info to test
	the above. Also fixes regarding text color.

	* objects/makefile.msc : Grid object on win32, too

2009-01-31  Hans Breuer  <hans@breuer.org>

	* lib/dia_xml.[ch] lib/libdia.def : implement data_(add_)bezpoint to 
	serialize bezier points
	* lib/prop_geomtypes.c : use it instead of g_error() for an attempt to
	save a bezpoint array (not used by any object implementation yet)

	* plug-ins/python/diasvg_import.py : fixed typo

	* objects/Misc/grid_object.c : give ranges to rows/columns properties
	to avoid crashing on negative numbers, similar for line_width

	* objects/Misc/pixmaps/grid_object.xpm objects/Misc/grid_object.c
	  objects/Misc/libmisc.c objects/Misc/Makefile.am sheets/Misc.sheet.in:
	patch from Don Blaheta adding a Grid object, bug #534118

	* doc/en/intro.xml doc/en/usage-quickstart.xml : moved "try Dia" 
	flowchart to introduction.

	* configure.in : configure failed to locate libpython when building GARNOME, 
	bug #338368 (Hans de Goede)

	* omf.make : bug #306737 - installation fails in install-data-hook-omf
	if omffile variable is empty (patch from Thomas Harding)

	* doc/en/*.xml : remove undefined entity  '.&pngfile'
	* po/POTFILES.in lib/sheetc : more strings to translate ;)
	* doc/en/Makefile.am : added new images ('make distcheck' passes)

	[
	  Huge documentation update from Mark Dexter, bug #455400, 
	  hope I didn't break anything during merge.
	]
	* doc/en/*.xml doc/en/graphics/*.png : 
	1. major edits to the following XML files: usage-quickstart.xml,
	usage-canvas.xml, usage-objects.xml, usage-objects-basic.xml,
	usage-objects-special.xml, usage-objects-selecting.xml. 
	Added documentation for items not previously documented (e.g., 
	Diagram Tree, Sheets and Objects, etc.) and expanded other 
	documentation.
	2. Added 78 screenshots (for a total of 82).
	3. Minor edit to authors.xml. (Still need to fix broken links and
	bad e-mails).
	4. Updated images. These changes obsolete the following bugs:
	#347209, #439974, #144128.

	* app/display.[ch] app/diagram.[ch] app/menus.[ch] : get rid of nearly
	unmaintainable UpdatableMenuItems and a lot of ui-variant-specific code
	by dynamic action lookup when updating sensitivity. This not only fixes
	bug #527565 but also bug #322190 and allows ...
	* app/interface.c : make Tool accelerator single key strokes - e.g. no
	more <alt><shift>L to draw a line but just "L" - another benefit of the
	dedicated test edit mode ;) - bug #439854.

2009-01-30  Hans Breuer  <hans@breuer.org>

	* app/object_ops.[ch] : implement object_list_nudge() ...
	* app/disp_callbacks.c : ... use it to move selected objects by 
	keyboard keys (arrow/shift-arrow for small/bigger step), bug #137433
	(The viewable area can still be moved as before if nothing is selected)
	Make PageUp, Ctrl-PageUp, PageDown, Ctrl-PageDown scroll selected
	view by one page up/left/down/right, bug #94015
	Home/End to align the top-left/bottom-right corner of the diagram with
	the viewable area

	[ "a minor maintenance update" from Ian Redfern, bug #477679 ]
	* plug-ins/vdx/vdx-import.c : it replaces the g_assert() calls with 
	attempts to handle errors, and adds a bit more sanity checking - this
	should make it more robust with unusual or malformed files, 
	particularly those exported from applications other than Visio 
	(thank you OmniGraffle).
	It also fixes assorted small bugs that people have raised with nested 
	shapes, disconnected polygons, font handling and layers, but there's 
	no new features such as embedded EMF or even rounded rectangles, and 
	it makes no attempt to handle new Visio 2007 features.

	* objects/SISSI/area.c objects/SISSI/faraday.c objects/SISSI/room.c
	  objects/SISSI/sissi_object.c objects/SISSI/site.c : quite some 
	allocation/deallocation mismatch removed, fixes bug #569725

	* objects/Jackson/domain.c : remove superfluous allocation to avoid
	leaking it, fixes bug #569720

	* app/load_save.c : do not complain about missing object types per 
	layer but just once per diagram

	* app/confirm.c : there is no glib-3.16 yet

2009-02-27  Steffen Macke <sdteffen@sdteffen.de>

	* doc/en/usage-objects.xml: Finished incomplete sentence. Fixes
	bug #569369

2009-01-24  Hans Breuer  <hans@breuer.org>

	* lib/message.[ch] lib/libdia.def : new function dia_log_message() 
	which prints the given string together with a time-stamp, but only 
	if logging is enabled
	* app/app_procs.c lib/dialib.[ch] : when given --verbose enable logging
	* lib/plug-ins.c lib/sheet.c : sprinkled some dia_log_message() to get
	a grip on Dia's start-up performance (4 secs for python plug-in, 5 secs
	for custom plug-in - when started from cold caches)
	
	* app/confirm.[ch] : new function confirm_export_size() which let's the
	user confirm an unusal diagram size (conditionalized glib-2-16 function)
	* app/Makefile.am app/makefile.msc po/POTFILES.in : add new files
	* app/commands.c app/filedlg.c : use it before export and print to avoid
	possibly unintended numbers of pages printed or memory used for export.
	(Bug #540477, Martin Wegner)

	app/preferences.[ch] : removed obsolete print preference

	* objects/SISSI/area.c objects/SISSI/faraday.c objects/SISSI/room.c
	  objects/SISSI/sissi.[ch] objects/SISSI/sissi_dialog.c
	  objects/SISSI/sissi_object.c objects/SISSI/site.c : fixed object
	method DiaObject::apply_props_from_dialog() for the last known issue
	with changing multiple objects properties, bug #60331
	(It did not crash because the SISSI object don't contribute anything
	to the property list.)
	* objects/SISSI/sissi_object.c(280) : local variable 'filename' used
	without having been initialized
	* objects/SISSI/sissi_dialog.c(380) : incompatible types - from 
	'struct _GtkWidget *' to 'struct _GtkScrolledWindow *'

	[
	  One menu entry File/Print is enough. The not any longer experimental
	  cairo plug-in together with GtkPrint from gtk+-2-12 and cairo-1- or 
	  above superseds both former print facilities. 
	]
	* app/menus.[ch] : introduce /InvisibleMenu as target for known actions
	registered from plug-ins supposed to be available only once. Currently
	there is just one of these actions "FilePrint" which gets routed to
	FilePrintGTK, FilePrintGDI or FilePrintPS in that order, i.e. depending
	on the plug-ins being loaded
	* plug-ins/cairo/diacairo.c plug-ins/postscript/postscript.c
	  plug-ins/wmf/wmf.cpp : register print actions to invisible menu

	* shapes/Civil/civil_basin.shape shapes/Civil/civil_motor.shape : 
	foreground for stroke

	* objects/UML/class_dialog.c(umlclass_dialog_free) : avoid double free
	of the dialog struct. Is is already destroyed by destroy-signal
	Fixes bug #569013

	* objects/UML/fork.c : fix property get/set by using the right
	methods, not object_return_void/object_return_null, bug #568524
	* lib/object.[ch] lib/libdia.def : remove object_return_* helpers.
	They are not used anymore now and were causing more harm than good.

	* lib/diarenderer.h : moved draw_rounded_polyline to the high-level
	methods of DiaRenderer, which are seldom implemented by "normal" 
	renderers
	* lib/diarenderer.c : just coding style
	
	* lib/plug-ins.h : bump DIA_PLUGIN_API_VERSION for all of the above

	[
	  Start of plug-in implementation around idea "DiaRenderScript", an
	  XML-dialect modelled after the DiaRenderer API. Currently it is
	  only useful for debugging other parts of Dia or itsef ;)
	]
	* plug-ins/drs/dia-render-script.dtd : to verify the xml files
	* plug-ins/drs/dia-render-script-renderer.c : implementing allmost all
	required and medium-level methods a renderer should have
	* plug-ins/drs/dia-render-script.[ch] : registration of the exporter
	and some dedicated diagram/layer render functions to preserve invisble
	layers when writing .drs
	* plug-ins/drs/dia-render-script-import.c : unfinished (some helpers
	to parse back .drs, but far away from real import)
	* plug-ins/drs/dia-render-script-object.c : mostly empty (should later
	include the implementation of a DiaObject capable to render .drs
	* plug-ins/makefile.msc : build it
	* configure.in plug-ins/Makefile.am plug-ins/drs/Makefile.am : build
	drs on *NIX, too. But do not install it.
	plug-ins/drs/*.[hc] : no warnings with gcc except defined but not used
	* po/POTFILES.in : not much to translate, just silence 'make distcheck'

2009-01-20  Hans Breuer  <hans@breuer.org>

	* lib/persistence.c : use g_warning() instead of printf() for 
	pathological cases, also don't leak memory than; bug #564890.	

	* app/app_procs.c : cosmetical change when dumping pango version

	* app/undo.[ch] app/commands.[ch] app/menus.c app/diagram.c 
	  data/*-ui. : implement "Objects/Move to layer above/below" 
	(maintaining connections between layers). Fixes bug #59105.
	* samples/undo-check.dia a diagram to play with the above

	* app/load_save.c doc/diagram.dtd : load, save and document 
	<layer active="true"/>, fixes bug #568497

2009-01-18  Hans Breuer  <hans@breuer.org>

	* app/app_procs.[ch] : implement command line switches -I and -O to give
	input and output directories independent of filenames, bug #438842
	* plug-ins/postscript/diapsrenderer.c : don't unref the postscript renderer 
	font twice, fixing a crash spotted while testing the above

	* lib/dia_image.c : oops, commited before compiling - now it uses for
	message_warning() for invalid pathes _and_ includes "message"

	* app/load_save.c(read_connections) : while playing with "All Objects"
	I've got "connection point %d does not exists", now I get the more
	useful "connection point 14 does not exist on 'SISSI - area'"
	Also there was some flaw with the wants_update calculation.

	* makefile.msc lib/libdia.def : build the unit test on win32, too.

	* lib/diagramdata.c lib/layer.c : split the latter from the former to
	have more manageable pieces (one class per file)
	* lib/Makefile.am lib/makefile.msc po/POTFILES.in : updated accordingly

	* objects/custom/shape_info.c(load_shape_info) : default-(width|height)
	was still in points. Now it is cm fixing bug #568099

	[xmllint --dtdvalid doc/shape.dtd shapes/**/*.shape >/dev/null]
	* shapes/Contact/c_ifnot.shape shapes/RDP/t_transition.shape
	  shapes/RDP/transition.shape shapes/SDL/comment.shape 
	  shapes/SDL/function.shape shapes/SDL/macro.shape 
	  shapes/SDL/return.shape shapes/SDL/stop.shape : removed superfluous
	'svg:' prefix on style attribute
	* shapes/RDP/place_marquee.shape : removed attribute 'color' from 
	svg:circle element; it would be ambiguous and did not validate.
	Both foreground and background color are set in the style attribute.
	* docs/shape.dtd : changed circle attribute cy to be IMPLIED only
	Together this reduces the complaints of xmllint down to zero. Given
	the recent updates on 
	http://svn.gnome.org/viewvc/dia/trunk/doc/custom-shapes?view=log
	IMO enough to close bug #86402

2009-01-17  Hans Breuer  <hans@breuer.org>

	* app/defaults.c app/gtkvwrapbox.c app/gtkwrapbox.c 
	  app/properties-dialog.c app/gtkhwrapbox.c lib/dialinechooser.c :
	patch from Robert Young to build again with GLib 2.8, bug #567558

	* tests/test-objects.c : now passes for all objects ...
	(_test_movement) : ... due to an ugly long list of shapes skipped due
	to probable bounding box miscalculation for bezier pathes, bug #568115
	(_test_change) : some test of ObjectChange creation/destruction

	* objects/UML/node.c objects/UML/object.c : text tinting was missing
	for string or underline (bug #568009)

	* lib/text.c : improved algorithm for bounding box calculation with 
	better understanding of the ascent/descent/font-height relation.
	Fixes bug #567556 without reopening bug #528642.

	* objects/standard/image.c : #include <time.h> to fix part of the issue
	with building with GLib < 2.10 (bug #567559,  Robert Young)

	* app/app_procs.c : don't dump built-with-cairo twice, instead
	inform about pangocairo, too.
	
	* INSTALL : improved consistency between configure.in and this file.
	Also remove trace of CVS.
	
	* lib/prop_geomtypes.c(fontsizeprop_set_from_offsets,
	  fontsizeprop_load) : implement clipping to min/max values to protect
	the Dia core against plug-ins playing havoc (see e.g. bug #488935)

	* plug-ins/cgm/cgm.c(CgmRenderer::set_font) : a second call with an 
	already set font (with refcount 1) would have destroyed the font before
	referencing it.

	* plug-ins/vdx/vdx-import.c : one instruction per line to allow putting
	a breakpoint on the g_debug() line

	* RELEASE-PROCESS : updated from CVS to SVN usage, also clarify the
	difference between tag and branch creation

	* objects/UML/classicon.c objects/UML/implements.c 
	  objects/UML/message.c objects/UML/node.c
	  objects/AADL/aadlbox.c objects/Jackson/phenomenon.c
	  objects/KAOS/metaandorrel.c : reverted part of revision 3958 
	"same name, same type", nowadays I'm weighting forward-compatibility 
	higher than following unwritten rules

2009-01-14  Steffen Macke <sdteffen@sdteffen.de>

	* installer/win32/dia.nsi: Some updates for GTK 2.14.7
	* app/interface.c: Include gtkhwrapbox.h in order to compile with MSVC

2009-01-12  Hans Breuer  <hans@breuer.org>

	* app/sheets_dialog_callbacks.c : don't leak a superfluous SheetObject
	fixes bug #564677

2009-01-11  Hans Breuer  <hans@breuer.org>

	[make "./configure ---enable-gnome=yes" work again]
	* app/interface.h : was including too much e.g. itself and gnome.h. 
	The latter gave compiling errors for --enable-gnome=yes
	* app/interface.c app/commands.c app/recent_files.c app/display.c
	  app/app_procs.c app/disp_callbacks.c : updated accordingly, basically
	adding #undef GTK_DISABLE_DEPRECATED before inclusing gnome.h but also
	adjusting include order (gnome before gtk) to make it have an effect

	[make "make distcheck" work again]
	* objects/FS/flow-poly.c : obsolete, finally removed
	* po/POTFILES.in : added app/create_object.c
	* po/POTFILES.skip : added some *.py to stop complains
	* configure.in : default is no doc creation ...
	* hardcopies.make : ... and thus not touching read-only directories.
	Lowers the priority of bug #567385

	* lib/dia_svg.c(read_text_svg) : support for text alignment, less 
	warnings and text colors corrected even for DIA_SVG_COLOUR_NONE
	(read_items) : switched from if-continue to a more common if-else-if
	* plug-ins/svg/svg-import.c : use DIA_SVG_COLOUR_NONE instead of (-1)

	* plug-ins/svg/svg-import.c(read_text_svg) : the text style was not
	properly intialize leading e.g. to random text colors.
	Also it now supports multi-line text elements "<tspan/>". Both can
	be booked under bug #108502 - but that bug will never get fixed;)

	* plug-ins/render_svg.c(draw_text) : implementation supporting 
	multi-line text via <tspan/>

2009-01-10  Hans Breuer  <hans@breuer.org>

	* objects/standard/arc.c(arc_move_handle) : maintain a minimum 
	distance between the three arc handles. Two or even all three 
	handles in at the same position did produce unstable results.
	As a side-effect this is fixing bug #501696
	* objects/standard/outline.c(outline_move_handle) : maintain
	minimum distance between the two handles here as well. 
	Otherwise a meaningless font-size of zero could occur.

2009-01-09  Hans Breuer  <hans@breuer.org>

	* plug-ins/xslt/Makefile.am : if !HAVE_XSLT prevent installation 
	bug #566842

	* lib/propobject.c(object_list_get_propdescriptions) : for single 
	object in the list use the "intersection" because otherwise props
	with PROP_FLAG_DONT_MERGE would not be accessible anymore, e.g. 
	for "Standard - Outline" there was no way to change the text anymore
	(hopefully final regression introduced by fixing bug #60331)

	* samples/render-test.dia : adapt font size check to concrete font
	names commonly available on X and win32

	* plug-ins/svg/render_svg.c : must use DIA_SVG_RENDERER_GET_CLASS
	to cast from instance, otherwise it is crashing with GLib debug support

	* lib/font.h : declare dia_font_get_size()
	* lib/libdia.def : export it
	* lib/font.c : use pango_font_description_set_absolute_size() - the 
	magic factor which tried to compensate for fontmap resolution issues 
	_and_ the difference between Dia's intention of "font_height" and 
	Pango's "font size" is gone. 
	There is a much less magic factor just compensating the second issue. 
	Dia's font-height always meant something like line height, i.e. a 
	good difference between two consecutive lines baselines (Pango itself 
	is using line_height=ascent+descent).
	Instead of searching the right size for a given height a new factor 
	got introduced, which unfortunately changes the font-size on win32 
	and X, but all this finally fixes bug the OS dependent part of 
	bug #108293

	* plug-ins/cairo/diacairo-renderer.c : use dia_font_get_size() and 
	pango_font_description_set_absolute_size instead of magic number 0.7
	fixing bug #538499
	* plug-ins/wmf/wmf.cpp : same here 

	* lib/diasvgrenderer.c(draw_string): moved #if-0-ed original ...
	* plug-ins/svg/render_svg.c : ... implementation to be used in SVG
	export but not for shape export. For SVG export we apparently want 
	the font-size instead of it's line-height - although my interpretation
	of the specs differs ... should fix bug #345538

	* lib/font-height.c : test program evaluating font size relations
	* lib/makefile.msc : build it

	[bugs found along the way]
	* lib/text.c : don't use font_ref when a copy is needed
	
	* lib/textline.c : removed superfluous g_warning

2009-01-06  Hans Breuer  <hans@breuer.org>

	* app/menus.c : bind "EditReplace" to "<control>H" (rather than ^F)

	* plug-ins/wmf/Makefile.am : remove -lstdc++ from LIBADD line 
	(Matt Keenan, bug #558263); install the plug-in in case of 
	libEMF being available
	* plug-ins/wmf/wmf.cpp : avoid double close of 'ofile'

	* bindings/Makefile.am : tweaked once more to not break 'make distcheck'

	* plug-ins/cairo/diacairo-renderer.c : compiles without warnings ...
	* plug-ins/cairo/diacairo-interactive.c : ... intialize parent_class
	and actually use cairo_interactive_renderer_finalize

2009-01-05  Hans Breuer  <hans@breuer.org>

	* app/diagram.c(diagram_save) : for links resolve to the real filename 
	before calculating the backup filename and actually overwriting the
	file. Fixes bug #501777

2009-01-03  Hans Breuer  <hans@breuer.org>

	* lib/font.c : style changes to increase readability, behaviour change 
	in the next commit ;)

	* lib/textline.c : remove obsolete 'renderer_cache' and superfuous g_warning()

	* objects/standard/outline.c : don't use dia_font_ref in outline_copy

	* plug-ins/cairo/diacairo-interactive.c 
	  plug-ins/cairo/diacairo-renderer.c : Dia's implicit fill-rule is
	even-odd, make it explicit with cairo
	
	* plug-ins/makefile.msc : updated 

2009-01-02  Hans Breuer  <hans@breuer.org>

	Patch from  Takao Fujiwara fixing bug #564850  – dia crashes on none UTF-8
	* app/diagram.c : don't initialize unused filename (with the wrong locale)
	* app/filedlg.c : gtk_file_chooser_set_current_name() wants utf-8, not 
	filename encoding
	* plug-ins/cairo/diacairo.c : export_data() first filename already is in 
	the GLib's filename encoding - but on win32 this is always utf-8, i.e. not 
	appropriate to be used with cairo

	* app/preferences.c : don't try to set transient without shell
	
	* lib/prop_text.c : don't leak prop->attr.font
	* object/standard/textobj.c : fixed accordingly
	
	* objects/UML/class.c(umlclass_copy) : don't use a font reference 
	where a copy is needed
	
	* plug-ins/cairo/diacairo.c : fix scaling for clipboard use

	* plug-ins/python/diamodule.c : whitespace changes

	* plug-ins/python/group_props.py : better error message for missing 
	pygtk (bug #563094)

	Patch from Sameer D. Sahasrabuddhe fixing bug #565720
	En passant fixing bug #564799 and bug #564916
	* objects/SISSI/sissi.[ch] : introduced a new local function that 
	returns the correct sheets directory for SISSI
	* objects/SISSI/site.c objects/SISSI/faraday.c objects/SISSI/area.c
	  objects/SISSI/room.c objects/SISSI/sissi_object.c : use it
	* sheets/SISSI/*.xml : relative path removed from 
	<sissi:attribute name="file_image"/>

	* app/create_object.c : don't crash if object creation fails
	(bug #565567,  Sameer D. Sahasrabuddhe)

	* bindings objects/custom_lines objects/Database plug-ins/postscript 
	plug-ins/libart : updated svn:ignore property

	* Makefile.am bindings/Makefile.am data/icons/48x48/apps/Makefile.am :
	get rid of "variable `*' is used but `*' is undefied" warnings
	
	* configure.in : remove traces of gnome print here as well

2008-12-19  Hans Breuer  <hans@breuer.org>

	* app/preferences.c : fixed compiler errors with gcc without 
	introducing warnings again with msvc
	* lib/filter.c : removed debug spew
	* po/POTFILES.in : reflect file renaming

2008-12-18  Hans Breuer  <hans@breuer.org>

	* app/properties.[ch] : renamed to properties-dialog.* to have unique
	filenames (avoids debugger confusion)
	* app/Makefile.am app/makefile.msc app/makefile.mingw
	  app/commands.c app/defaults.c app/diagram.c app/diagram_tree.c
	  app/modify_tool.c : adapted accordingly

	* app/properties-dialog.c : restored nullification of the static 
	'object_part' on dialog destroy to avoid double destruction

2008-12-14  Hans Breuer  <hans@breuer.org>

	* lib/textline.[ch] : removed obsolete RenderCache stuff while 
	investigating bug #562574

	* app/preferences.[ch] lib/filter.[ch] lib/libdia.def : allow to select
	a preferred export filter used when selecting exporter by extension
	(Bug #535179 - export to png does not use AntiAliasing, now up to user)

	* lib/persistence.c : don't use g_ascii_strncasecmp as GCompareFunc,
	fixing crashes introduced by patch from bug #559671
	
	* app/diagram.[ch] app/display.c : replace Diagram::display_count with
	g_slist_count(diagram->displays), no benefit in keeping both in sync.

2008-12-09  Hans Breuer  <hans@breuer.org>

	* lib/diasvgrenderer.c lib/persistence.c lib/prop_basic.c : reduced
	use of long time deprecated functions ( Kjartan Maraas, bug #559671)

	* objects/Database/table.c app/preferences.c : fixed the fix and a
	comment about it (Sameer Sahasrabuddhe, bug #60331)

2008-12-08  Hans Breuer  <hans@breuer.org>

	* objects/UML/class.c : don't crash when 
	umlclass_apply_props_from_dialog() get callesd without 
	umlclass_get_properties(), instead fall back to 
	object_apply_props_from_dialog() than
	* objects/Database/table.c : same here
	
	* app/properties.c : for a single object let Object::get_properties()
	create the "object part" of the property dialog

	* plug-ins/makefile.msc : remove obsolete plug-ins from build

2008-12-07  Hans Breuer  <hans@breuer.org>

	* app/commands.c app/diagram_tree.c app/modify_tool.c app/properties.c
	  app/properties.h lib/group.c lib/object.h lib/propdesc.c 
	  lib/propdialogs.c lib/properties.h lib/propinternals.h
	  lib/propobject.c : : patch from Sameer Sahasrabuddhe almost fixing
	Dia's oldest bug #60331 - Object properties should handle multiple 
	objects (but it breaks with UM - Class)
	* lib/libdia.def : updated

2008-12-03  Hans Breuer  <hans@breuer.org>

	* app/menus.c : map help to "F1", patch Matt Keenan, bug #563110

	* app//diapagelayout.c : one gtk_adjustment_new call was not adjusted.
	Patch from Matt Keenan fixing bug #563106.

2008-11-30  Steffen Macke <sdteffen@sdteffen.de>

	* makefile.msc: Create *.mo files in build/win32
	* installer/win32/dia.nsi: Reflect documentation updates

2008-11-22  Hans Breuer  <hans@breuer.org>

	* objects/Database/table.c objects/UML/class.c : less warnings, patch by
	Sameer Sahasrabuddhe

2008-11-21  Hans Breuer  <hans@breuer.org>

	* objects/custom_lines/custom_linetypes.c objects/Database/compound.c
	  objects/Database/reference.c objects/Database/table.c
	  objects/UML/actor.c objects/UML/class.c objects/UML/large_package.c
	  objects/UML/note.c objects/UML/object.c objects/UML/small_package.c
	  objects/UML/usecase.c : consitent use PROP_STDNAME_LINE_WIDTH instead
	of "line_width", patch from Sameer Sahasrabuddhe

2008-11-18  Steffen Macke <sdteffen@sdteffen.de>

	* doc/en/dia.xml:
	* doc/eu/dia.xml:
	* doc/fr/dia.xml:
	* doc/pl/dia.xml: Consistently use DocBook 4.5 DTD from oasis-open.org
	
2008-11-16  Hans Breuer  <hans@breuer.org>

	* plug-ins/gprint/* : back to the attic
	* plug-ins/Makefile.am po/POTFILES.in configure.in : adjusted

	* plug-ins/cairo/diacairo.c : register "Edit/Copy Diagram" to copy
	the whole diagram into the clipboard (currently win32 only)

	* app/dia-props.c app/diapagelayout.c app/preferences.c
	  lib/dialogs.c lib/prop_geomtypes.c lib/prop_inttypes.c lib/widgets.c
	  objects/Database/table_dialog.c objects/SISSI/sissi_dialog.c
	  objects/UML/class_dialog.c : stop newer gtk+ complaining about 
	non-zero page size for spin buttons

2008-11-15  Steffen Macke <sdteffen@sdteffen.de>

	* makefile.msc:
	* installer/win32/dia.nsi:
	* installer/win32/wikifaq2installerfaq.sed: Small script to generate the
	installer FAQ file from the Wiki
	
2008-11-02  Hans Breuer  <hans@breuer.org>

	* objects/Istar/link.c objects/GRAFCET/vergent.c 
	  objects/Database/reference.c objects/Database/table_dialog.c
	  objects/UML/class_dialog.c : spelling fixes, bug #554233 and
	bug #554238 - Duarte Loreto

	* app/find-and-replace.c : no C++ comment and not other warnings

	* lib/text.c : ignore single carriage return, work around for bug #547173

	* lib/lib_dia. : removed (should never have been added)

	* plug-ins/UML/class_dialog.c : don't crash if the selection callbacks
	get called after dialog destruction. Fixes bug #558650
	
2008-10-17  Hans Breuer  <hans@breuer.org>

	* lib/libdia.def : export prop_list_add_list for ...
	* app/find-and-replace.c : patch from Johann Tienhaara adding the
	ability to find and/or replace (almost) any text content of the objects

	* plug-ins/dxf/dxf-import.c : dxfcode now calculated as inside the read 
	function, reduces code lines and en passant fixes load error of #321539

	* plug-ins/dxf/dxf-import.c : bulge was calculated against the wrong
	vertices, now it at least does not produce huge errors. See bug #556547

2008-10-17  Steffen Macke <sdteffen@sdteffen.de>

	* installer/win32/dia.nsi: Don't include the AADL sheet any more

2008-10-16  Steffen Macke <sdteffen@sdteffen.de>

	* installer/win32/dia.nsi: Small updates for the new build system
	
2008-10-15  Hans Breuer  <hans@breuer.org>

	* INSTALL : updated minimal version requirements (the real thing still
	in configure.in

	* app/find-and-replace.c : consistent line ends

2008-10-12  Steffen Macke <sdteffen@sdteffen.de>

	* makefile.msc: Small updates to sync makefile with compilation guide

2008-10-12  Hans Breuer  <hans@breuer.org>

	* objects/UML/actor.c objects/UML/class.[ch]
	  objects/UML/class_dialog.c objects/UML/large_package.c
	  objects/UML/note.c objects/UML/object.c
	  objects/UML/small_package.c objects/UML/usecase.c : configurable
	line-width for UML elements, patch from Pablo Gra\~na

2008-09-20  Hans Breuer  <hans@breuer.org>

	* app/filedlg.c : global usage of GTK_DISABLE_DEPRECATED broke
	this file with gtk+-2-14

	* app/prefernces.c : avoid setting uninitialized (NULL) units, 
	fixes a crash when starting with an old configuation file

	* lib/text.c : also accept GDK_KP_Enter to ccreate a new line. 
	Fixes bug #539476

	* lib/makefile.msc : reflect renaming of libdia.c to dialib.c

	* NEWS : mention Find&Replace feature

	* plug-ins/python/autolayoutforce.py : more comment

	* samples/render-test.dia samples/Self/PyDiaObjects.dia : update

2008-08-10  Hans Breuer  <hans@breuer.org>

	* app/prefernces.c : don't call pref_set_*_unit with NULL

	* objects/custom/custom_object.c : add user configurable text padding
	and properly consider it during bounding box calculation. Additionally
	<svg:text/> elements (fixed text parts) are finally tinted and scaled 
	with the rest of the shape
	
	* configure.in : one more step to build bindings on Linux
	* lib/libdia.[hc] : renamed to dialib.[hc] to avoid confusion with 
	libdia.la (libdia.lo)
	* lib/Makefile.am app/app_procs.c bindings/dia-extra.cpp
	  plug-ins/python/diamodule.c tests/test-objects.c
	  tests/test-boundingbox.c : adapted to name change

	* objects/UML/Makefile.am plug-ins/cairo/Makefile.am : add
	$(module)_la_LIBADD = $(OTHER_LIBS) $(top_builddir)/lib/libdia.la

	* bindings/dia.swig : don't crash on passing None to do_export()
	* bindings/Makefile.am bindings/test.py : now work start to work
	on Linux, too.

	* plug-ins/python/pydiadoc.py plug-ins/python/otypes.py : don't 
	assume there is always a display. In the bindings non-interactive
	test case there is not
	
	* app/layer_dialog.c : don't access layer_dialog while not initialized
	* objects/standard/outline.c : conditionalize on CAIRO_HAS_SVG_SURFACE
	* tests/test-objects.c tests/test-boundingbox.c : conditionalize on
	GLIB_CHECK_VERSION(2,16,0) - together this make Dia compile an run on 
	a standard Dapper Drake (gtk+-2.8, glib-2.10, cairo-1.0.4)

	* objects/custom/shape_info.[hc] objects/custom/custom_object.c : 
	don't normalize ShapeInfo::default_(width|height) to points; everything
	else is in cm. Also some formatting/coding style issues.
	
2008-08-09  Hans Breuer  <hans@breuer.org>

	* app/Makefile.am plug-ins/xslt/xslt.c : finally stop complaing about
	missing XSLT configuration files when running app/run_dia.sh

	* tests/Makefile.am : start of unit test usage on *NIX

	* lib/Makefile.am : add libdia_la_LIBADD = $(GTK_LIBS)
	fixing bug #545450
	* lib/newgroup.c : disable call to diagram_unselect_objects() on *NIX
	as well, it collides with --no-undefined and libdia use in unit-test

	* tests/test-boundingbox.c : some bounding box unit test
	  tests/test-object.c tests/makefile.msc : updated

	* app/display.[hc] app/dia.def : factor out ddisplay_show_all() from
	* app/commands.c : ... view_show_all_callback ...
	to make the functions signature more appropriate to be called by 
	a plug-in

	* plug-ins/python/autolayoutforce.py : my playground for Fred Morcos'
	'force based autolayout' algorithm, see:
	http://mail.gnome.org/archives/dia-list/2008-August/msg00030.html
	* plug-ins/python/Makefile.am : to EXTRA_DIST (not to be installed)

	* lib/bezier_conn.c lib/bezier_shape.c : use g_new0 for Handle 
	allocation to ensure they pointers are not referencing random objects
	
	* lib/connectionpoint.c(connpoint_is_autogap): an unconnected 
	ConnectionPoint can not matter for autogap
	* lib/bezier.c : allows to remove the hack to disable the bounding box
	calculation in bezier_load()

	* lib/connectionpoint.h : turned ConnectionPoint(Flags|Dir) to enums,
	helps documentation and graphical debuggers
	
	* lib/geometry.h(Rectangle): swap top/left and bottom/right to a more 
	usual order (after debugging quite some bounding box code) finally 
	because of it's use in bezierline_update_data()
	* lib/plug-ins.h : increment DIA_PLUGIN_API_VERSION

	* lib/libdia.def : rectangle_in_rectangle export

	* object/SISSI/sissi.c : don't try to load an image file from NULL 
	filename; some formatting near that.

2008-08-02  Hans Breuer  <hans@breuer.org>

	* lib/libdia.def : updated exports
	* lib/libdia.h : C++ guards
	* bindings/dia-extra.cpp : simplification by use of libdia_init()

	* bindings/dia-object.h bindings/dia-properties.h : mark binding 
	internal helpers as such

	* lib/orth_conn.h : small docu update
	
	* objects/makefile.msc : remove bondgraph here as well
	
	* objects/standard/bezier.c objects/standard/polyline.c
	  objects/standard/zigzagline.c objects/UML/actor.c : correct
	bounding box calculation
	
	* tests/test-objects.c tests/makefile.msc : start of unit tests

2008-07-27  Hans Breuer  <hans@breuer.org>

	[Patch from Thomas Harding updating documentation, bug #544222]
	* doc/en/dia.xml: docbook version => 4.5 (use of docbook elements not 
	disponible in 1.2. book valids now against db dtd 4.5) 
	* doc/en/custom-shapes.xml: updated to reflect changes in 
	doc/custom-shapes file

2008-07-26  Hans Breuer  <hans@breuer.org>

	* doc-custom-shapes : shapes svg path can contain arc elements as well

	* doc/shape.dtd : fixed so that most of the shapes delivered with Dia
	pass 'xmllint --dtdvalid shape.dtd'. Remaining are some shapes having
	<svg:circle cx="0" r="1.5"/> e.g. place.shape:22: element circle: 
	validity error : Element circle does not carry attribute cy
	and the use of dublin core in some of Assorted
	* shape/(Contact|Electric|Pneumatic)/*.shape : remove the superfluous 
	'svg:' prefix from style attribute

	* sanples/Self/dia-renderer.dia : added the idea of renderer decorator

	* app/display.c(ddisplay_zoom) : reverted changes from bug #540210,
	it broke the other use cases, mainly zoom all (ctrl^e)
	
2008-07-25  Hans Breuer  <hans@breuer.org>

	* app/display.c(ddisplay_zoom) : improved zoom behavior when using 
	ctrl+mouse wheel around the cursor position, based on code by 
	Ithai Levi, bug #540210 

	* app/mavigation.c : don't divide by zero when using the navigation
	window with an empty diagram

2008-07-20  Hans Breuer  <hans@breuer.org>

	* objects/custom/custom_object.c(custom_copy): use object_copy_props()
	instead of memcpy to support extended attribues where copy by reference
	is not enough, e.g. <ext_attribute name="Something" type="string">
	Simplifies the code and fixes bug #543874
	
	* doc/custom-shapes doc/shapes.dtd : some documentation for subshapes,
	ext_attributes and some usefull atrributes on <textbox/>

2008-07-19  Hans Breuer  <hans@breuer.org>

	* configure.in : when building debug also define GTK_DISABLE_DEPRECATED

	* lib/prop_inttypes.c : removed #undef GTK_DISABLE_DEPRECATED

	* objects/UML/Makefile.am : use $(DEBUG_FLAGS)
	* objects/UML/class.[ch] objects/UML/class_dialog.c : moved some stuff
	to restrict the #undef GTK_DISABLE_DEPRECATED to class_dialog.c

	* objects/bondgraph/* : removed, it was empty from the beginning
	* objects/sybase/* : removed, unused since 2002
	* objects/Makefile.am configure.in po/POTFILES.in : adapted

	* objects/chronogram/Makefile.am objects/ER/Makefile.am
	  objects/flowchart/Makefile.am objects/GRAFCET/Makefile.am 
	  objects/Istar/Makefile.am  objects/Jackson/Makefile.am 
	  objects/KAOS/Makefile.am objects/network/Makefile.am 
	  objects/SADT/Makefile.am : add $(DEBUG_FLAGS)

	* objects/custom/Makefile.am : add $(DEBUG_FLAGS)
	* objects/custom/custom_object.c objects/custom/shape_info.c
	  objects/custom/shape_typeinfo.c : warningectomy 

	* objects/Database/Makefile.am : use $(DEBUG_FLAGS)
	* objects/Database/table.[ch] objects/Database/table_dialog.c : moved 
	some stuff to restrict the #undef GTK_DISABLE_DEPRECATED to 
	table_dialog.c

	* objects/FS/flow-ortho.c : warningectomy 

	* objects/SISSI/Makefile.am : add $(DEBUG_FLAGS)
	* objects/SISSI/sissi_dialog.c : #undef GTK_DISABLE_DEPRECATED

	* objects/standard/Makefile.am : add $(DEBUG_FLAGS)
	* objects/standard/outline.c : warningectomy

	* plug-ins/*/Makefile.am : propagate $(DEBUG_FLAGS)

	* doc/*/Makefile.am : add html.xsl to EXTRA_DIST

2008-07-18  Hans Breuer  <hans@breuer.org>

	[ on the way to compile dia with GTK_DISABLE_DEPRECATED ]
	* app/makefile.msc lib/makefile.msc : -DGTK_DISABLE_DEPRECATED
	* app/app_procs.c : s/gtk_timeout_add/g_timeout_add/
	* app/autosave.c : g(tk)_idle_remove_by_data ()
	* app/color_area.c : remove gtk_color_selection_set_update_policy () -
	it does not have any effect anymore
	* app/defaults.c : use g_object_ref_sink()
	* app/diagram_tree.c app/diagram_tree_menu.c : 
	#undef GTK_DISABLE_DEPRECATED for GtkCList
	* app/diapagelayout.[ch] : information hiding to not pollute all users
	with deprecated stuff
	* app/disp_callbacks.c : remove gtk_menu_item_set_show_toggle (), it's
	deprecated and doesn't have any effect anymore, use g_signal_connect ()
	* app/display.c : replace gtk_idle_*() and gtk_object_get_user_data ()
	* app/dynamic_refresh.c : port away from gtk_timeout_*()
	* app/filedlg.c : not gtk_object_get_user_data () anymore
	* app/gtkhwrapbox.[ch] app/gtkvwrapbox.[ch] app/gtkwrapbox.[ch] : 
	copied already ported version from The GIMP
	* app/interface.c : away from gtk_object_get_user_data ()
	* app/interface.h app/sheets.h : #ifdefed GtkTooltips
	* app/layer_dialog.[ch] : information hiding of deprecated stuff
	* app/linewidth_area.c app/navigation.c : 
	s/gtk_drawing_area_size/gtk_widget_set_size_request/
	* app/menus.c : #undef GTK_DISABLE_DEPRECATED for GtkTooltips
	* app/pagesetup.c : replace gtk_object_set_data_full () and adapt to
	DiaPageLayout information hiding
	* app/preferences.c : GtkComboBox instead of GtkOptionMenu
	* app/properties.c : g_object_ref_sink ()

	[ #undef GTK_DISABLE_DEPRECATED ...]
	* app/splash.c : ... for GtkPixmap
	* lib/diaarrowchooser.[ch] :  ... for GtkTooltips
	* app/sheets.c app/sheets_dialog.c app/sheets_dialog_callbacks.c : ...
	for GtkOptionMenu and GtkTooltips
	
	* lib/dialinechooser.c : use g_object_ref_sink()
	* lib/dialogs.c : replace gtk_box_pack_start_defaults()
	* lib/messages.c : removed #undef GTK_DISABLE_DEPRECATED
	* lib/prop_inttypes.c : use gtk_combo_box_new_text () instead of 
	deprecated gtk_option_menu_new(), also g_signal_*()
	* lib/prop_sdarray.c : use g_signal_connect()
	* lib/propdialogs.c : g_object_set_data (), g_signal_connect ()
	* lib/widgets.[ch] : moved struct _DiaDynamicMenu to implemention
	to hide _deprecated_ internals (GtkOptionMenu

	* objects/UML/class_dialog.c(umlclass_update_connectionpoints) : dont
	crash when called without having used the properties dialog before

2008-07-14  Hans Breuer  <hans@breuer.org>
	[
	 Patch from Patrick Hallinan integrating the layers dialog into the
	 integrated UI
	]
	* app/app_procs.[ch] : only register the dialog for not integrated ui
	* app/interface.[ch] : creation of the new widget and ...
	* app/commands.[ch] : ... menu callbacks
	* app/layer_dialog.[ch] : conditionalized to resue most of the code in 
	the integrated UI context
	* app/menus.[ch] data/integrated-ui.xml : move layer visibility toggle 
	to View/Layers

2008-07-13  Hans Breuer  <hans@breuer.org>

	* app/modify_tool.c : mouse position and bounding box on statusbar
	when resizing objects

	* NEWS : mention wmf plug-in and libEMF

	* shapes/Cybernetics/*.png shapes/Gane_and_Sarson/*.png 
	  shapes/Logic/*.png shapes/Map/Isometric/*.png
	  shapes/Misc/*.png shapes/MSE/*.png : some icons were smaller than 
	the usual 22x22, now they are expanded by an empty border

2008-07-06  Hans Breuer  <hans@breuer.org>

	* lib/font.[hc] : some cleanup and test code to get on the real reason
	for Dia's notorious font-size mismatch, see e.g. bug #108293, #345538,
	#538499, ... not supposed to change behaviour yet
	* samples/font-sizes.dia : new test file using concrete fonts

2008-07-06  Hans Breuer  <hans@breuer.org>

	[Patch from Thomas Harding fixing help finally fixing bug #536334]
	* doc/Makefile.am hardcopies.make :
	- documentation uninstall was not complete
	- symlinks are done on $(helpdocdir)
	instead of $(DESTDIR)$(helpdocdir) to make packagers life easier
	(this results in dangling symlinks while $(DESTDIR) != "",
	then symlinks are correct while the package is installed from
	$(DESTDIR) to "/")

2008-06-29  Hans Breuer  <hans@breuer.org>

	[Patch from Thomas Harding fixing help generation for non-gnome case]
	* xmldocs.make : without gnome install to $(helpdocdir)
	* configure.in : initialize HAVE_XSLTPROC
	* hardcopies.make : conditionalize on HAVE_GNOME

	[Third iteration on patch from Thomas Harding improving the 
	 documentation generation, closing bug #465460]
	* doc/en/Makefile.am doc/fr/Makefile.am doc/eu/Makefile.am
	  doc/pl/Makefile.am : deleting $(xmlsources)
	* hardcopies.make : corrected paths to fit --psdir --pdfdir --htmldir
	./configure switches; corrected targets $(progname)(.pdf|.ps|_html) 
	and .jw: to depend on $(xml_files) instead of (duplicate of xml_files)

	* doc/fr/dia-cmdline.xml doc/eu/dia-1.xml : added, bug #465460
	* doc/eu/dia.1 : updated

	* configure.in bindings/Makefile.am : some more autotools trial and 
	error not fixing bug #540694 - help appreciated

2008-06-27  Hans Breuer  <hans@breuer.org>

	[Second iteration on patch from Thomas Harding improving the 
	 documentation generation, now 'make distcheck' succeeds again.
	 fixing bug #539848]
	* doc/html/images/*.png doc/html/images/callouts/*.png : added
	the missing png images and callouts
	* doc/fr/dia-cmdline.xml : updated 
	* doc/eu/dia-1.xml : added (data out from dia.dbk)
	NOTE: don't know why an English man page is in "eu". 
	* doc/eu/dia.xml : added entities placeholders (commenteds out)
	for commandline/manpage content
	* hardcopies.make :
	- added $(DESTDIR) to $(sysdoc) path.
	- html: deleted insane ;) dependency on $(progname)-cmdline.xml, as 
	$(xmlsources) will list it in individual languages; rewritten 
	file-to-compile as 'first target' == $(progname).xml
	- pdf: deleted insane dependency on $(progname)-cmdline.xml
	- ps: the same...
	- pdf and ps dependencies,"jw" build way: the same...
	* omf.make : solved inconsistency in omf files path between
	install/uninstall [$(DESTDIR)]

2008-06-22  Hans Breuer  <hans@breuer.org>

	* doc/(en|fr)/Makefile.am : remove $(progname).$(progfiles_extension) 
	from examples
	* hardcopies.make : resurrect example installation

2008-06-22  Hans Breuer  <hans@breuer.org>

	[Patch from Thomas Harding improving the documentation generation]
	* doc/*/hardcopies.makefile : moved to $(top) directory
	* hardcopies.make : now uses dblatex or fallback on jw 
	  (jade/openjade wrapper).
	* doc/*/README.hardcopies : removed, now handled by configure
	* configure.in : check for and do documentation generation when 
	  given --with-hardbooks
	* doc/**/*.xml : dropping HTML entities, making dia-1.xml
	  independent from dia-cmdline.xml, dropping file extension from
	  graphics
	* doc/*dia-dbk-to-chapter.sed: removed leftovers from previous 
	  doc patch (was too fragile)
	* doc/html/images/caution.svg
	  doc/html/images/important.svg
	  doc/html/images/note.svg
	  doc/html/images/tip.svg
	  doc/html/images/prev.svg
	  doc/html/images/home.svg
	  doc/html/images/next.svg
	  doc/html/images/warning.svg
	  doc/html/images/up.svg
	  doc/html/css/dia.css: new files - images for admonitions and 
	  callouts (for html version)
	* doc/fr/dia.xml: switched encoding to utf8 (more versatile for
	  inexperienced maintainers (needs no entities for specific 
	  glyphs such as ISO entity "oelig" or "laquo"...)
	* doc/pl/*.xml: updated some from *.sgml, corrected encoding to 
	  iso-8859-2.  Corrected graphics "filetype" attribute to 
	  uppercase "PNG".
	* Adding Changelog-tmp, which may be dropped at any time.
	* doc/*/dia-*.omf: make indexation really works with
	  scrollkeeper (which extends omf format). Now yelp shows
	  dia manual in its TOC/whatever.

	* doc/(en|fr)/dia-cmdline.xml : added from my working copy, not sure 
	where it came from ;) The 'fr' version needs translation.
	* doc/Makefile.am : temporary disabled due to build problems
	* doc/*/*.dia : svn mv doc/en/dia.dia ../samples/Self/
	  svn rm fr/dia.dia - there is no relation to the rest of docs
	* doc/hardcopies.make : don't (un)install-examples

2008-06-07  Steffen Macke <sdteffen@sdteffen.de>

	* shapes/Cisco/telecommuter_house_router.png:
	* shapes/Cisco/layer3_switch.png:
	* shapes/Cisco/gigabit_switch_router_atm_tag.png:
	* shapes/Cisco/dpt.png:
	* shapes/Cisco/svx.png:
	* shapes/Cisco/dot_dot.png:
	* shapes/Cisco/man_woman.png:
	* shapes/Cisco/workstation.png:
	* shapes/Cisco/communications_server.png: Standard icon size 22x22

2008-06-07  Hans Breuer  <hans@breuer.org>

	* app/makefile.msc : need to link cairo for getting it's version
	* lib/libdia.def : color_init still used outside of libdia

	* plug-ins/svg/svg-import.c : if the drawing size was giving in points
	the scaling was going in the wrong direction leading to huge diagrams

2008-06-01  Hans Breuer  <hans@breuer.org>

	* app/display.c : get rid of HAVE_LIBART, there is antialiased 
	rendering with cairo, too. Update menu by plug-ins types 
	being available.
	* lib/font.c : now that I can look at the cairo renderer interactively
	the renderers font-size mismatch raised it's ugly head again. Some 
	code in	comment which does not solve the issue

	* app/app_procs.c : updated version dump for cairo and pango
	* configure.in : updated pango version required (to the same 
	already dragged in by gkt+ (still 2.6 as minimum)
	

2008-05-31  Hans Breuer  <hans@breuer.org>

	* lib/libdia.[ch] : new files containing the initialization code ...
	* app/app_procs.c : ... removed here ...
	* plug-ins/python/diamodule.c : ... to be useable from here
	* lib/Makefile.am lib/makefile.msc lib/libdia.def : adapted
	
	* app/diagram.c : there is no diagram_tree to update when not 
	running interactively, also no display to update

	[warningectomy]
	* lib/diaarrowchooser.c lib/persistence.[ch] : constness
	* lib/diagramdata.c : signedness
	* lib/font.c : initialization

	* objects/UML/association.c : moved calculation of the direction 
	triangle into it's own function and use it for bounding box 
	calculation and drawing. Fixes bug #158265

	* lib/diagtkfontsel.[ch] : not used for quite some time -> removed
	* lib/widgets.c lib/Makefile.am po/POTFILES.in : adapted/updated

2008-05-30  Hans Breuer  <hans@breuer.org>

	[ 
	  Moved libart rendering and it's PNG export to a plug-in.
	  So it can be switched off before being deprecated in favour of cairo. 
	]
	* plug-ins/libart/dialibartrenderer.[hc] : from lib/*
	* plug-ins/libart/export_png.c : moved from app/*
	* plug-ins/libart/render_libart.[hc] : moved from app/*
	* lib/dialogs.[hc] : moved from app/*
	* app/app_procs.[hc] : parse_size moved to plug-in
	* app/display.c : dynamically create the aa renderer like it is done 
	for the cairo renderer

	* app/Makefile.am app/makefile.msc plug-ins/makefile.msc
	  lib/libdia.def lib/Makefile.am lib/makefile.msc
	  plug-ins/Makefile.am configure.in po/POTFILES: adapted
	* plug-ins/libart/Makefile.am : build it on Linux (untested)

	app/menus.c : View/Antialiased currently always enabled

	* lib/filter.h plug-ins/cairo/diacairo.c plug-ins/libart/dialibart.c :
	put the renderer tpye in the export filter struct, at least it avoids
	optimizing away it's side effect

	* plug-ins/libart/dialibartrenderer.c plug-ins/libart/render_libart.c :
	now the libart renderer has always the interactive interface which
	make it work as display renderer again

2008-05-26  Hans Breuer  <hans@breuer.org>

	* lib/diagdkrenderer.c : don't rely on shortcut evaluation working
	with the preprocessor, fixes bug #534801 

	* sheets/checktrans.py : gracefully fail on missing dependencies.
	The translation report is not crucial for building. Fixes bug #391965

	data/popup-ui.xml : get rid of Diagram menu here as well

2008-05-25  Hans Breuer  <hans@breuer.org>

	* app/commands.c(file_print_callback) : implement by querying for 
	print plug-ins in order of preference for different platforms
	
	* app/display.c(ddisplay_set_cursor) : don't try to set a cursor on a 
	window not yet created
	* app/interface.c(use_integrated_ui_for_display_shell) : pass the
	renderer preference when ddisplay_set_renderer() - too early
	* app/render_gdk.c(set_size): handle being called without a window 
	gracefully. Together this allows to start the Integrated UI without
	g_warning().
	
	* app/menu.[ch] : make add_plugin_actions() work for all GUI variants,
	get rid of add_toolbox_plugin_actions(). Fixes bug #526146
	
	* plug-ins/cairo/diacairo.c plug-ins/postscript/postscript.c
	  plug-ins/wmf/wmf.cpp : don't crash on data being NULL (integrated UI
	does not yet properly disable menu items)

	* data/display-ui.xml : get rid of the "<Display>/Diagram" by moving
	the *two* entries to the Edit menu (like with Integrated UI)
	* data/integrated-ui.xml : add Find & Replace

	* app/interface.c : use fallback window icon code for Integrated UI,
	too. Fixes bug #526147

	[
	  Patch from Thomas Harding:
	  Bug 534656 - French manual update + addressing bug #510537
	]
	* doc/en/dia-1.xml doc/fr/dia-1.xml doc/en/dia.dbk 
	  doc/en/dia.xml doc/en/Makefile.am doc/fr/custom-shapes.xml
	  doc/fr/dia.dbk doc/fr/dia.xml doc/fr/Makefile.am
	  doc/fr/ps/graphics/preferences-fig.eps
	  doc/fr/ps/graphics/preferences_fig.eps
	  doc/fr/usage-customization.xml
	  doc/fr/usage-objects-basic.xml :
	- rename /doc/fr/ps/graphics/preferences-fig.ps ->
	..../preferences_fig.ps
	- fix typo in usage-customization.xml about above (png).
	- Makefile.am: 
	  - re-enable above png file
	  - disable sed-script (Bug #510537), superceded by inclusion of
	  dia-1.xml as SYSTEM ENTITY in dia-cmdline.xml and dia.dbk (for en/fr) 
	- usage-objects-basic.xml: add the tricks about text entries cut and paste
	- dia.xml: delete attribute lang from <?xml ... first line
	- custom-shapes.xml: add para about default-(width|height)
	* doc/fr/Makefile.am : remove '#dia-dbk-to-chapter.sed \' instead of
	doc/fr/Makefile.am:41: `#' comment at start of rule is unportable

	* doc/en/dia.1 : regenerated

	* lib/beziershape.c(beziershape_remove_segment): did not store
	all information for undo. s/PointChange/BezPointChange/ to help
	my debugger.

	* lib/object_defaults.c(dia_object_default_create) : the standard
	(toolbox visible) properties were overwritten although not set
	
	* plug-ins/cairo/diacairo-interactive.c : draw_pixel_line and 
	draw_pixel_rect implemented with cairo rather than GDK makes the
	line style of the grid visible again

	* app/menus.c(plugin_callback) : was using ddisp unconditionally 
	causing a crash without active display, fixed remaining warnings 
	while there
	
	* plug-ins/cairo/diacairo.c : register printing with cairo near
	to the original print menu item
	* plug-ins/postscript/postscript.c : don't register the postscript renderer
	for printing on win32

	Attempts to fix bug #534275
	* lib/diagdkrenderer.c(draw_fill_rounded_rect) : attempt to make
	arc drawing for radius<line_width less backend specific. 
	* objects/standard/box.c objects/standard/polyline.c 
	  objects/standard/zigzagline.c : 
	set LINEJOIN_ROUND when rendering "rounded" (with radius>0)

2008-05-24  Steffen Macke <sdteffen@sdteffen.de>

	* sheets/SISSI/analyse.png:
	* sheets/SISSI/personne.png:
	* sheets/SISSI/pda_icon.png:
	* sheets/SISSI/sauvegarde.png:
	* sheets/SISSI/logiciel.png:
	* sheets/SISSI/barriere_icon.png:
	* sheets/SISSI/meuble.png:
	* sheets/SISSI/camera_interphone_icon.png:
	* sheets/SISSI/safe_icon.png:
	* sheets/SISSI/si.png:
	* sheets/SISSI/info.png:
	* sheets/SISSI.sheet.in: Standard icon size 22x22

2008-05-23  Steffen Macke <sdteffen@sdteffen.de>

	* sheets/SISSI/capteur_brise_glace_icon.png:
	* sheets/SISSI/detecteur_fumee_icon.png:
	* sheets/SISSI/capteur_faisceau_icon.png:
	* sheets/SISSI/detecteur_enthalpie_icon.png:
	* sheets/SISSI/condensateur_icon.png:
	* sheets/SISSI/detecteur_mouvement_icon.png:
	* sheets/SISSI.sheet.in: Standard icon size 22x22

2008-05-22  Steffen Macke <sdteffen@sdteffen.de>

	* sheets/SISSI/46.xml: Fixed XML problem that prevented the object 
	from being used
	* sheets/SISSI/detecteur_vibration_icon.png:
	* sheets/SISSI/detecteur_mouvement_video_icon.png:
	* sheets/SISSI/detecteur_vehicule_icon.png:
	* sheets/SISSI.sheet.in: Standard icon size 22x22

2008-05-21  Steffen Macke <sdteffen@sdteffen.de>

	* sheets/SISSI/digi_code_icon.png:
	* sheets/SISSI/filtre_air_icon.png:
	* sheets/SISSI/lecteur_badge_icon.png:
	* sheets/SISSI.sheet.in: Standard icon size 22x22

2008-05-19  Steffen Macke <sdteffen@sdteffen.de>

	* sheets/SISSI/pompe_icon.png:
	* sheets/SISSI/pompe_rotative_icon.png:
	* sheets/SISSI/lecteur_biometrique_icon.png:
	* sheets/SISSI/ventilateur_axial_icon.png:
	* sheets/SISSI/porte_tambour_icon.png:
	* sheets/SISSI.sheet.in: Standard icon size 22x22

2008-05-18  Steffen Macke <sdteffen@sdteffen.de>

	* sheets/SISSI/extincteur_icon.png:
	* sheets/SISSI/onduleur_icon.png:
	* sheets/SISSI/extracteur_humidite_icon.png:
	* sheets/SISSI/aircooler_icon.png:
	* sheets/SISSI.sheet.in: Standard icon size 22x22

2008-05-18  Hans Breuer  <hans@breuer.org>

	* app/properties.c : work around the disability of Gtk on win32 to 
	shrink the property dialog when it is hidden (by destroying instead)
	Fixes bug #333751.

	* lib/diagdkrenderer.c lib/diarenderer.c
	  plug-ins/cairo/diacairo-renderer.c (*_rounded_rect) : fall back to
	(draw|fill}_rect if the radius is so small (smaller than one device 
	unit) it will only produce artifacts. Fixes bug #446854

	[finally use dia_object_get_enclosing_box() to ... ]
	* app/commands.c : ... have bezier control points in field of view 
	when "show all" with selected bezier objects
	* app/object_ops.c ... get rid of bezier control line traces, because
	they are not included with the bounding box. Fixes bug #300055
	* objects/standard/bezier.c objects/standard/beziergon.c : calculate
	the enclosing box as control points plus bounding box

	* objects/Database/table.c : don't use dia_object_get_enclosing_box()
	where dia_object_get_bounding_box() was meant

	* lib/libdia.def lib/bounding_box.[hc] : export some bezier helper
	functions instead of copy and pasting them to ...
	* objects/Istar/link.c : ... other users

	* lib/bounding_box.c : added some API documentation for the helpers
	(bicubicbezier_extrema) : special casing for quadratic curves to avoid
	division by (almost) zero and improve/fix bounding box calculation for
	symmetric bezier curves

2008-05-18  Steffen Macke <sdteffen@sdteffen.de>

	* SISSI/lecteur_badge_clavier_icon.png:
	* SISSI/detecteur_alimentation_icon.png:
	* SISSI/ventilateur_centrifuge_icon.png:
	* SISSI/detecteur_courant_icon.png:
	* SISSI/detecteur_tension_icon.png:
	* SISSI/detecteur_humidite_icon.png:
	* SISSI/detecteur_qualite_air_icon.png:
	* SISSI/detecteur_pression_icon.png:
	* SISSI/detecteur_lumiere_icon.png:
	* SISSI.sheet.in: Standard icon size 22x22
	* app/disp_callbacks.c: Return NULL from ddisplay_drop_object() if
	no object could be created instead of segfaulting; fixes bug #533679

2008-05-17  Hans Breuer  <hans@breuer.org>

	* app/Makefile.am : no paginate_*.* here, removed from EXTRA_DIST
	* plug-ins/wmf/Makefile.am : updated EXTRA_DIST
	* plug-ins/postscript/Makefile.am : updated EXTRA_DIST


2008-05-17  Steffen Macke <sdteffen@sdteffen.de>

	* shapes/Lights/*.png: Standard icon size 22x22

2008-05-16  Steffen Macke <sdteffen@sdteffen.de>

	* lib/propobject.c: prevent crash when shapes could not be parsed
	correctly. Fixes bug #533459

2008-05-12  Hans Breuer  <hans@breuer.org>

	* shapes/BPMN/*.png : cropped/scaled to 22x22

	* app/sheets.c : attempt to add some robustness
	* app/sheets_dialog_callbacks.c : g_new0() to catch mis-initialization
	(on_sheet_new_dialog_button_ok_clicked) : a newly created sheet was 
	not selected after creation
	(on_sheets_dialog_button_move_clicked) : a move was not considered a
	modification of the source sheet
	(on_sheets_dialog_button_apply_clicked) : when finally registering the
	a new sheet the struct was not properly passed, same for new object
	Together this should fix bug #393526

	* app/find-and-replace.c : replace (all) part is working, too.
	
2008-05-11  Hans Breuer  <hans@breuer.org>

	* lib/filer.h app/menus.c : changed signature of DiaCallbackFunc to
	additionally take an optional file name
	* plug-ins/cairo/diacairo-print.[ch] plug-ins/python/diamodule.c : 
	adapted to the new signature

	* app/paginate_gdiprint.(h|cpp) : move to ...
	  plug-ins/wmf/paginate_gdiprint.(h|cpp) plug-ins/wmf/wmf.cpp : ... 
	and make it work as a plug-in, temporary registered as "Print (GDI)"
	
	* plug-ins/postscript/* copied mainly from app/* :
	* plug-ins/postscript/postscript.c : register Dia's formerly built-in
	PS filters as plug-in, so they can be switched off when obsoleted by
	cairo or the user does not want them, printing temporary registered as
	"Print (PS)"

	* postscript/paginate_psprint.c(diagram_print_ps) : filename handling
	* configure.in plug-ins/Makefile.am plug-ins/postscript/Makefile.am
	  plug-ins/postscript/postscript.c : build the plug-in and ...
	* app/diapsft2renderer.[ch] app/diapsrenderer.[ch] app/render_eps.[ch] 
	  app/paginate_psprint.[ch] app/win32print.[ch] : ... remove ...
	  app/app_procs.c app/commands.c app/Makefile.am app/makefile.msc : 
	... postscript handling from core
	* app/diagram.c app/app_procs.c : removed dangling includes
	* po/POTFILES.in : reflect movement of files

	* lib/ps-utf8.[ch] : moved to plug-ins/postscript/ps-utf8.[ch]
	* lib/Makefile.am lib/makefile.msc plug-ins/makefile.msc 
	  plug-ins/postscript/Makefile.am lib/libdia.def : updated accordingly

	* objects/standard/outline.c : don't try to render a bezier with 0 points

2008-05-10  Hans Breuer  <hans@breuer.org>

	* objects/standard/outline.c(move_handle) : initial implementation
	* objects/Misc/measure.c : object position should be start point

	* lib/widget.c(DiaSizeSelector): initialize static variable, avoid
	division by zero, don't compare floating points for identiy; together
	fixing bug #479591

	* lib/font.c(dia_font_get_sizes) : use the maximum width of logical-
	and ink-rect to make the always glyphs fit the bounding box. Probably
	fixes bug #455651 but needs checking with DiaRenderer using Freetype.

	* lib/diagramdata.c(layer_update_extents) : don't consider empty 
	objects for the overall extents. Fixes bug #531687 and lowers
	priority of bug #99375.
	
	* plug-ins/wmf/wmf.cpp : don't assume pango_context_load_font() can not
	fail. It does for font descriptions pointing to fonts not available
	on the particular system.

	* lib/text.c(text_calc_boundingbox) : the bounding box did include one
	descent too much, which caused wrong placement for "Standard - Text"
	which calculates the vertical text positioning from the bounding box.
	Fixes bug #528642 but not bug #438020.

	* lib/grid.c(grid_draw_*_lines) : the major lines were sometimes off
	by one due to rounding problems. Fixes bug #382212.

	* objects/standard/outline.c : forgot to call update_data after copy

	* objects/Misc/measure.c objects/Misc/pixmaps/measure.xpm
	  objects/Misc/libmisc.c objects/Misc/Makefile.am objects/makefile.msc
	  sheets/Misc.sheet.in : a new object to measure and show the distance
	between two connection points.

	* plug-ins/python/select_empty.py : allows to find objects with empty
	bounding boxes like empty text. See bug #99375.
	* plug-ins/python/Makefile.am : install it
	* app/display.c(selection_changed) : update menu sensitivity in the
	signal handler for selection changed. Could replace a lot of explicit
	updates, but is needed when the selection is changed from a plug-in
	* app/diagram.c(diagram_update_menu_sensitivity) : maybe called with 
	ddisplay_active() returning NULL, don't crash on that.

2008-05-06  Steffen Macke <sdteffen@sdteffen.de>

	* installer/win32/dia.nsi:
	* installer/win32/locale/slovenian.nsh: Slovenian translations for the
	installer. Patch from Martin Srebotnjak <filmsi@users.sourceforge.net>

2008-05-04  Hans Breuer  <hans@breuer.org>

	* plug-ins/xfig/xfig-import.c(fig_read_arc): acccept pie-wedge 
	although not completely supported. Better than refusing the whole file
	(fig_read_text) : fixed probable typo 3.54/72.0

	* lib/geometry.[hc] lib/libdia.def: three_point_circle() calculate
	center point and radius given 3 points on a circle, fixed prototype and 
	implementation to ...
	* plug-ins/xfig/xfig-export.c : corrected arc export for both draw_arc 
	and fill_arc methods

	* plug-ins/xfig/xfig-import.c lib/create.h(create_standard_arc) : the 
	fifth parameter was named and treated as radius alsthough it set the
	"curve_distance"
	* lib/create.c(create_standard_arc) : also the second point passed in
	was simply ignored. Now it moves the second handle. Part of bug #436148
	
	* plug-ins/cairo/diacairo.c : more exporters marked as FILTER_DONT_GUESS
	Fixes writing of (old) WMF, but text is missing for both EMF and WMF.

	* samples/render-test.dia : fixed some alignments and colors

2008-05-03  Hans Breuer  <hans@breuer.org>

	* app/filedlg.c : adapt the "Supported Formats" filter so that the
	files shown are matching the extensions of the slected import filter.
	Fixes bug #503117

	* objects/UML/association.c : the transition to full StdProps broke
	the restoration of autorouting swicthed off in version 1 shapes
	* samples/Self/PyDiaObjects.dia : documentation of PyDia which
	showed the problem

	* plug-ins/xslt/xslt.c(xslt_ok) : the directory name passed into xslt
	needs to be an uri (*NIX being more tolerant). Fixes bug #472143.

	* samples/Self/dia-renderer.dia : updated one more

	* app/load_save.c : only update handle positions if the bounding box
	is empty after creation of the object

	* plug-ins/wmf/wmf.cpp : use Pango for loading the font but not for 
	rendering (taking the better part of my patch to fix bug #350726)
	* plug-ins/makefile.msc : link wmf with pangowin32.lib, clean-up

	* app/find-and-replace.c : reset last found if we start a new search

	* app/render_gdk.c(draw_pixel_rect, draw_pixel_line) : clip early to
	avoid passing out-of-range parameters to Gdk

2008-05-02  Hans Breuer  <hans@breuer.org>

	* objects/FS/flow-ortho.c objects/FS/flow-poly.c objects/FS/flow.c :
	objects/FS/flow.c : Object::copy() was not calling Object::update()
	resulting in uninitialized memory, crashing or corrupted diagrams.
	Not anymore, fixing bug #456270

	* plug-ins/dxf/dxf-import.c : either add the objects directly to
	a layer or use them in a group. Otherwise memory corruption will
	occur at the latest at diagram destruction time

	* app/diagram_tree.c : there was a pixmap and mask created for every
	object in the diagram; not only waste of cpu cycles but also a 
	resource problem making Gdk fail for a diagram with >7000 objects.
	Now the type specific pixmap and mask are hold in a hashtable and
	only ref'd for use in the GtkCTree. Also a pixbuf leak was plugged.

	* app/preferences.[hc] app/display.c : antialized view default
	selectable from prefernces, bug #338832

	* plug-ins/dxf/dxf-export.c : the TABLES section was missing the
	TABLE start, should fix bug #528741

	* lib/filter.[hc] : introduce the ability to influence guessing of
	import/export -filters. If one is marked as FILTER_DONT_GUESS it is 
	only selected by the guessing if it is the only one registering a 
	certain extension
	* lib/plug-in.h : increase DIA_PLUGIN_API_VERSION
	* plug-ins/python/diamodule.c : set FILTER_DONT_GUESS for all filters
	implemented in Python
	* plug-ins/pixbuf/pixbuf.c : set FILTER_DONT_GUESS for vector formats
	supported by GdkPixbuf. This way a Dia importer capable to process
	vectors gets preferred

2008-05-01  Hans Breuer  <hans@breuer.org>

	* app/find-and-replace.[hc] : inital version of find&replace - find
	already working, replace does nothing yet (to be continued)
	* app/Makefile.am app/makefile.msc : build find-and-replace.c
	* lib/diagramdata.[hc] : new function data_foreach_object() to simplify
	the iteration over objects
	* lib/libdia.def : export it
	* data/display-ui.xml data/popup-ui.xml app/menus.c : Find&Replace 
	in the menus

	* samples/Self/dia-renderer.dia : updated

2008-04-28  Hans Breuer  <hans@breuer.org>

	* lib/diagdkrenderer.c : another cheap optimization, clip the
	requested sub-pixbuf to the visible area

2008-04-28  Steffen Macke <sdteffen@sdteffen.de>

	* shapes/Cisco/router.png: Standard icon size 22x22; Thanks to
	Ian Redfern

2008-04-27  Hans Breuer  <hans@breuer.org>

	* shapes/Cisco/*.png shapes/RDP/*.png  shapes/Cisco/Makefile.am 
	  shapes/RDP/Makefile.am : removed unrefernced icons

	* lib/dia_image.h : include gdkpixbuf.h rather than forward declaring
	typedef struct _GdkPixbuf GdkPixbuf; gcc does not like the latter

	* objects/custom/custom_object.c : 'default_properties' were not
	initialized as intended, e.g. show_backgound was random data

	* shapes/Lights/ACL.png shapes/MSE/large_extension_node.png
	  shapes/Logic/and.png shapes/MSE/small_extension_node.png
	  shapes/ChemEng/*.png : desired icon size is 22x22

	* sheets/UML/aggregation.png : rotated/flipped to show the 
	usual direction

	[ 
	  finally restores the feature to have different defaults for the same
	  object by 'intdata' in sheet file, e.g. Class and Template in UML.
	  Strange that I can't find any bug report related to this ;) 
	]
	* app/defaults.[hc] lib/object.h lib/object_defaults.c : pass user_data
	to dia_object_default_get(), although not using it yet. Remove unused
	function dia_object_default_make().
	(dia_object_default_create) : direct hashtable access to avoid 
	creating a default object for every object used. Only the default
	dialog created from double-clicking the tools toolbox icon creates
	a new default object now.
	Also only copy ~PROP_FLAG_NO_DEFAULTS to preserve intdata initialized
	properties over stored ones
	* objects/GRAFCET/vergent.c objects/Istar/actor.c objects/Istar/goal.c
	  objects/Istar/link.c objects/Istar/other.c objects/Jackson/domain.c
	  objects/Jackson/phenomenon.c objects/KAOS/goal.c 
	  objects/KAOS/metaandorrel.c objects/KAOS/metabinrel.c
	  objects/UML/association.c objects/UML/component_feature.c : mark 
	properties modified by intdata/GPOINTER_TO_INT(user_data) as 
	PROP_FLAG_NO_DEFAULTS, thus they are no longer over-written by the
	object defauts system.
	* objects/UML/class.c : no default name anymore

	* doc/custom-shapes : mention <default-width/> and <default-height/>
	* shapes/circuit/(h|v)*.shape : use them to have more recognizable
	shapes. Fixes bug #493237.

	* lib/prop_widgets.c : set the unfoldbutton to insensitive when
	invisible to stop propagating key events to it. Fixes bug #491028
	* objects/standard/(bezier|line|polyline).c : added 
	PROP_OFFSET_FRAME_BEGIN("gaps"), PROP_OFFSET_FRAME_END("gaps")
	to get symmetry between PropDescriptions and PropOffsets
	
	* lib/widgets.c : no more singned/unsigned mismatch and get rid of
	incompatible types - from 'struct _GtkWidget *' to 
	'struct _GtkFileSelection *', the DiaFileSelector::dialog is a
	GtkFileChooser for quite a long time

2008-04-26  Hans Breuer  <hans@breuer.org>

	* objects/UML/association.c : one more selfmade dialog gone, 
	'UML - Association' now use StdProps, too.
	
	* objects/UML/transition.c : move text positions by same delta than
	the center handle, fixes bug #528738

	[ there is an unwritten rule for std-props: same name, same type ]
	* objects/AADL/aadlbox.c objects/Jackson/phenomenon.c 
	  objects/UML/message.c objects/UML/node.c : what is called text 
	should be of type text
	* objects/KAOS/metaandorrel.c objects/UML/implements.c : 'name' is
	of type string
	* objects/GRAFCET/step.c : font_size as fontsize not real
	* objects/standard/box.c : corner_radius as real
	* objects/UML/classicon.c : stereotype is a string
	
	* plug-ins/python/allprops.py : creates a diagram extracting common 
	properties from all registered objects, warns about name/type clashes
	* plug-ins/python/Makefile.am : add allprops.py, remove 
	diasvg_import.py from installed plug-ins
	* plug-ins/python/pydia-properties.c : exclude PROP_FLAG_LOAD_ONLY 
	(compatibility) properties from the property dictionary
	* bindings/test.py : added allprops test

	* lib/propdialogs.c : use &= ~PXP_NOTSET to reset the property 
	experience flag

2008-04-25  Hans Breuer  <hans@breuer.org>

	* lib/diagdkrenderer.c dia_image.[ch] : don't use dia_image_draw()
	for up-scaling of images to reduce memory consumption (bug #439885)

	* objects/custom/shape_info.c : don't mess with info->icon after
	preload (valgrind complained about invalid reads of free'd strings
	and sometimes there was a missing icon in the toolbox. Also fixed
	some type cast warnings

	* lib/diagdkrenderer.c lib/diasvgrenderer.c lib/dialibartrenderer.c 
	  app/diapsrenderer.c app/diapsft2renderer.c : all 
	DiaRenderer::draw_string() methods	were leaking their text_line
	* lib/textline.c(text_line_destroy) : use clear_layout_offset()
	instead of leaking cached values
	* lib/autoroute.c : othconn_set_points does not eat points
	* app/diagram.c : return of diagram_get_name() must be free'd
	* objects/standard/line.c : connpointline_create must be paired with
	connpointline_destroy()
	* objects/standard/outline.c : object_init() needs object_destroy()
	* objects/UML/state.c : don't miss to free action strings
	* objects/UML/transition.c : also leaking strings

	* plug-ins/vdx/vdx-import.c : minimal handling of vdx:PolylineTo
	to avoid an endless loop, fixes bug #529882

	* lib/propdialogs.c(property_signal_handler) : get rid of 
	signed/unsigned warning
	(prop_dialog_add_properties) : better guess on the required size 
	of the scrollable area. Never make it bigger than the full content.
	
	* lib/properties.h : remove defintions for PROP_STD_MULTICOL_*, these
	format helpers need to be unique in case of being combined in the
	group properties dialog across such objects
	* objects/chronogram/chronoref.c objects/Database/reference.c
	  objects/Database/table.c objects/UML/class.c : updated accordingly

	* objects/misc/misc.c : remove registration of newgroup here
	* app/app_procs.c : use USE_NEWGROUP to conditionally register 
	newgroup_type (default disabled, because it is unfinished) ...
	* lib/newgroup.h : ... make newgroup_type a DIAVAR to be useable 
	in principle on win32. Together fixes bug #505513 
	* lib/newgroup.c : #warning is a gcc extension, conditionalize
	* lib/makefile.msc : build newgroup.obj

2008-04-20  Hans Breuer  <hans@breuer.org>

	* objects/UML/object.c : also write 'name' in text_color
	* objects/UML/association.c : line_color and text_color
	* objects/UML/component_feature.c : added line_color
	* objects/UML/fork.c : added fill_color
	* objects/UML/state_term.c : fill_color and line_color
	* objects/UML/transition.c : fill_color and text_color
	=> all UML shapes can be tinted now, closing bug #169107

	* app/load_save.c : use 'obl->ops-move(obj,obj->position)'

2008-04-19  Hans Breuer  <hans@breuer.org>

	* app/diagram.c : put the modification mark ('*') in the window title
	like other programs do, ...
	* app/display : ... remove "Diagram modified" from the statusbar ...
	* app/create_object.c app/modify_tool.c : ... and clean out temporary 
	positions in button_release
	* app/interface.[ch] : removed specialized handling of modification for 
	integrated ui, it is not needed anymore
	
	* app/tool.h : remove unused struct _ToolInfo
	
	* lib/textline.c : an empyt text created bogus ascent/descent, it used 
	to mean the fonts ascent/descent. Fixes e.g. the positioning of 
	'UML - LargePackage' label, fixes bug #439862

	* objects/standard/textobj.c(textobj_load) : intialize TextObj::attrs 
	from TextObj::text (bug #528903, Leon Stringer)
	* objects/Istar/goal.c objects/Istar/other.c objects/Jackson/domain.c
	  objects/SADT/box.c : had a similar problem leaving attrs 
	 uninitialized in their create method

2008-04-15  Steffen Macke  <sdteffen@sdteffen.de>

	* shapes/Cisco/content_service_router.png:
	* shapes/Cisco/voice_switch2.png:
	* shapes/Cisco/router_in_building.png: Resized icons to standard size
	22x22; partial fix for #528251

2008-04-14  Steffen Macke  <sdteffen@sdteffen.de>

	* shapes/BPMN/compensation.shape: Further improvment of the shape,
	foreground color can now be choosen in Dia
	* shapes/BPMN/*.shape: Fill color can now be specified in Dia instead
	of hardcoded white fill; Patch from David Nguyen <pppswing@yahoo.fr>
	* bindings/dia-properties.cpp:
	* lib/diatypes.h: Patch from Stefan Husmann <stefan-husmann@t-online.de>
	to fix compiler errors

2008-04-14 Gabor Kelemen  <kelemeng@gnome.org>

	* app/menus.c: Corrected typo spotted while updating translation. 

2008-04-14  Gabor Kelemen  <kelemeng@gnome.org>

	* installer/win32/locale/hungarian.nsh: Updated translation.
	
2008-04-13  Hans Breuer  <hans@breuer.org>

	* lib/propdialogs.c : if there are more than a dozen properties
	make the dialog scrollable
	* lib/propdesc.c(prop_desc_lists_union) : even the union of properties
	must not contain properties maked by PROP_FLAG_DONT_MERGE
	* lib/prop_widgets.c : fixed long-standing bug of MULTICOL properties 
	not being in the expected order
	
	[more robustness for incomplete (i.e. usually generated) diagrams]
	* app/load_save.c : adjust the connections positions automatically,
	it is impossible to do so while generating
	* lib/element.h lib/object.h lib/orth_conn.h lib/properties.h
	  objects/UML/generalization.c : marked more properties optional - if
	they are properly initialized - to get rid of a lot of g_warnings()
	and one step further to fix #56233
	* samples/gobj-parse.c : a simple parser to generate a class diagram
	out of GObject using headers to test the above

	[currently unused: first step for property editor with GtkTreeView]
	* lib/diamarshal.list : add marshaler
	* lib/diacellrendererproperty.[hc] : boilerplate for CellRenderers
	* lib/makefile.msc lib/Makefile.am : build new files
	* lib/prop_sdarray.c : prepare to make the list editable

	* lib/diatypes.h lib/widgets.h : moved #include "units.h" to widgets.h
	diatypes.h is supposed to contain _only_ type forward declares 

	* plug-ins/python/diagx.py : importer for XML generated by gccxml

2008-04-12  Hans Breuer  <hans@breuer.org>

	* lib/plug-ins.c : not being able to load a plug-in is not a critical
	issue, get rid of message_error() for these. Fixes bug #402320
	On windows also use SetErrorMode() to to suppress the systems error 
	dialog. Finally we are rewriting the error reason if the plug-in file
	exists but can not be loaded.

2008-04-10  Steffen Macke <sdteffen@sdteffen.de>

	* installer/win32/locale/german.nsh: Fixed typo
	* installer/win32/locale/hungarian.nsh: Added Python texts
	* installer/win32/locale/slovak.nsh: Updated Slovak installer
	translations. Patch from Ivan Masar <helix84@users.sourceforge.net>
	* installer/win32/dia.nsi: Added splash image, updates for the 
	location of some translation files

2008-04-09  Steffen Macke <sdteffen@sdteffen.de>

	* installer/win32/dia.nsi: Updates for the location of some
	translation files

2008-04-08  Hans Breuer  <hans@breuer.org>

	* NEWS app/authors.h : updated

	* lib/object.c(object_copy_list) : if we can't find the object to
	to connect to ensure there is no dangling reference. Fixes bug #497070
	* lib/group.c(group_copy) : some comment
	
	* lib/font.c(dia_font_string_width) : no need to create multiple
	TextLines to calculate the length of an empty string.
	* lib/text.c(text_key_event) : no text change for modifiers

2008-04-08  Steffen Macke <sdteffen@sdteffen.de>

	* makefile.msc: Don't use the --use-fuzzy option with msgfmt,
	updated ALL_LINGUAS
	* installer/win32/dia.nsi: Updates for Dia, GTK+ and Installer
	locale files; Hungarian and Slovak translations are again available
	in the installer

2008-04-07  Steffen Macke <sdteffen@sdteffen.de>

	* installer/win32/dia.nsi: Various small updates; the sample files
	are now included in the installer build (fixes bug #518094)

2008-04-06  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/codegen.py : use a list for attributes rather than
	a dictionary to preserve the order of attributes. Fixes bug #519162

	* objects/UML/class.c : switching comment visibility via object menu 
	produced an invalid change object: bug #512848
	* lib/objchange.c(new_object_state_change): g_return_val_if_fail()
	on invalid arguments

	* objects/UML/class_dialog.c : a lot of stuff from the 'UML - Class'
	was not considered for undo

	* lib/newgroup.c : only avoid linking app/ for G_OS_WIN32 does _not_
	fix the crash from bug #505513

2008-04-05  Hans Breuer  <hans@breuer.org>

	* lib/widgets.c : setup pixbuf file formats filter for "Load Image"
	fixing bug #439847

	* objects/standard/image.c : not only check for a different filename
	but also for different modification time when setting changing 
	"Standard - Image". Fixes bug #439849

	* plug-ins/pixbuf/pixbuf.c : plug a memory leak

	* app/menus.c(ensure_menu_path) : allow plug-ins to create a menu 
	path again. Does not yet work fopr the integrated ui, see bug #526146
	(_ui_manager_connect_proxy) : resurrection of menuitem tooltips,
	especially for recent file menu. They were lost in trnaslation to
	the GtkAction framework: bug #340352
	
	* app/load_save.c : disable remaining g_access() for win32, otherwise we
	can not save to a preexisting file

	* app/app_procs.c(app_exit) : don't g_free() const strings, 
	dia_open_diagrams() returns a GList, not a GSList
	Also evaluate the return value of diagram_save() and don't simply 
	assume saving can't fail. Related to bug #501703
	(process_opts) : by accident I had removed the gtk options which broke
	also --help
	
	* app/display.c : removed "Key input ..." debug spew
	
	* app/interface.c app/sheets : enforce Dia's toolbox icon size by cropping
	icons which are too huge
	
	* lib/makefile.msc : cosmetic change
	
	* plug-ins/cairo/diacairo-print.c : with_alpha does not make sense in 
	conjunction with printing

2008-04-04  Steffen Macke  <sdteffen@sdteffen.de>

	* app/interface.c: Patch from Patrick Hallinan
	<patrick.j.hallinan@gmail.com>: Make the notebook scrollable.
 
2008-03-16  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo-renderer.c(_rounded_rect) : use cairo_arc()
	instead of approximating arcs with beziers

	* plug-ins/cairo/diacairo.c plug-ins/makefile.msc : resurrection of
	EMF via cairo (cairo-1.6 will support EMF creation via win32-printing
	surface so my own cairo patch is finally obsolete)

	* sheets/*/*.xpm shapes/**/*.xpm : removed all those obsolete XPM

2008-03-10  Hans Breuer  <hans@breuer.org>

	* app/display.c(are_you_sure_close_dialog_respond) : don't close the
	display when saving failed. Fixes bug #501703

2008-03-09  Hans Breuer  <hans@breuer.org>

	* app/load_save.c(diagram_data_save) : not using g_access() because
	'My Documents' is write protected by default on XP but still can 
	contain writable files. With extended security attributes becoming
	more common this change may even become necessary for *nix?
	Fixes bug #504469.

	* objects/standard/outline.c : don't make Dia crash by returning NULL
	from get_object_menu. Fixes bug #503899.
	
	* plug-ins/cairo/Makefile.am : forgot diacairo-print.h here as well

	* lib/persistence.c : listen again to the configure-event and remove
	debug spew (the fix for bug #501475 broke the size storing completely)
	
	* plug-ins/cairo/diacairo-print.c : fix reference counting for cairo_t

	* bindings/test.py : make it work on windoze again

	* plug-ins/cairo/diacairo-renderer.c : hairline support

2008-03-08  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo-print.c : use the cairo renderer for
	integration with the Gtk+ print framework
	* plug-ins/cairo/diacairo.c : gtk-print implementation for paginated 
	output of PDF (bug #513226) and register for printing, also ... 
	  plug-ins/cairo/diacairo-renderer.c : ... split off the renderer
	implementation in it's own file. Some tweaking for use in the
	print context.
	* plug-ins/cairo/diacairo.h : calback function to be registered
	in the menu (later to replace native printing?)
	* plug-ins/cairo/Makefile.am plug-ins/makefile.msc : adapted

	* data/display-ui.xml data/popup-ui.xml : more *ExtensionStart to 
	allow placement of plug-in function in all sub-menus. Above it is 
	used for "File/Print with Gtk+/cairo ..."

	* plug-ins/cairo/diacairo-interactive.c : also compile with Gtk+ < 2.8

2008-03-05  Hans Breuer  <hans@breuer.org>

	* lib/font.c lib/focus.c lib/diagdkrenderer.c
	  objects/standard/arc.c object/standard/outline.c : less warnings
	by (re)moving (dead|some) code
	  
	* objects/standard/Makefile.am : remove whitespace after '\'
	* po/POTFILES.in : now really removed app/diaconv.c

	* objects/standard/(bezier|polyline|zigzagline).c : reverted changes
	from revision 3878. Object plug-in internals must not be made public.
	Also the way it was done was not portable.
	* objects/standard/(bezier|polyline|zigzagline).h : deleted
	* objects/custom_lines/custom_linetypes.c : almost complete rewrite 
	using only public APIs
	* objects/custom_lines/custom_lines.c
	  objects/custom_lines/custom_linetypes.h : custom_linetypes_init();
	not any longer necessary.
	* objects/standard/Makefile.am objects/custom_lines/Makefile.am 
	  objects/makefile.msc : adapted (reverting the tricks to make
	'make distcheck' pass

2008-03-04  Hans Breuer  <hans@breuer.org>

	* objects/EML/* sheets/EML.sheet.in : removed
	* objects/Makefile.am : almost 7 years being disabled is enough
	* po/POTFILES.in sheets/Makefile.am : adapted

	* app/app_procs.c configure.in : removed obsolete POPT cruft

	* app/diaconv.c : removed - cruft must die
	* app/Makefile.am : adapted
	* configure.in : removed obsoltete check for dirent.h

	* objects/standard/Makefile.am : ooops, was not built anymore;)gedit 

	[autobreak trial and error - finally makes 'make distcheck' pass]
	* bindings/Makefile.am : dont try to install anything
	* data/Makefile.am : add dia-splash.png to EXTRA_DIST
	* doc/en/Makefile.am : add dia-dbk-to-chapter.sed to EXTRA_DIST
	* xmldocs.make : s/docdir/helpdocdir/
	* po/POTFILES.(in|skip) : updated

2008-03-03  Hans Breuer  <hans@breuer.org>

	* lib/makefile.msc : compile units.c and ensure definition of
	GLIB_GEN_MARSHAL

2008-03-01  Hans Breuer  <hans@breuer.org>

	* objects/Misc/analog_clock.c : move hour hand by the minute
	Patch from Paul McGuire fixing bug #516469

	* lib/font.c : dia_font_get_sizes() was wrongly assuming single
	line passed in. Patch inspired by Saurabh Nanda, fixes bug #482585

2008-03-01  Hans Breuer  <hans@breuer.org>

	* objects/custom_lines/custom_linetypes.c 
	  objects/custom_lines/Makefile.am : make the hack to include stuff
	from objects/standard pass 'make distcheck'. Looks very suspicous from 
	the design point of view. ObjectTypeOps are not meant to be reused.

	* objects/SISSI/Makefile.am objects/standard/Makefile.am
	  objects/Database/Makefile.am doc/fr/Makefile.am lib/newgroup.c :
	changes to make 'make distcheck' work ...
	* bindings/Makefile.am : ... almost ;)

2008-03-01  Hans Breuer  <hans@breuer.org>

	* bindings/* : make it compile again after DiaObject method renaming
	* lib/units.[ch] : gobal variables need to be explicit exported - or
	better avoided
	* objects/custom/custom_object.c objects/custom/shape_info.c : fix
	missing includes and gccisms (c99isms)

2008-02-20  Lars Clausen  <lars@raeder.dk>

	* objects/standard/line.c (line_adjust_for_absolute_gap): Fix
	compilation problem for MacOS by not redefining the same function.

2008-02-12  Lars Clausen  <lars@raeder.dk>

	* objects/custom/custom_object.c:
	* objects/custom/shape_info.h:
	* objects/custom/shape_info.c:
	* lib/widgets.c:
	* lib/widgets.h:
	* lib/diatypes.h:
	* lib/Makefile.am:
	* lib/geometry.c:
	* lib/units.c:
	* lib/units.h: Patch from Marcel Toele <dpy.dia@gmail.com>: Shapes
	can now have sub-shapes that can be scaled or not when the main
	shape is scaled.  Also, it is now possible to specify that shapes
	are created with their stated sizes.

2008-01-17  Lars Clausen  <lars@raeder.dk>

	* configure.in: 
	* objects/custom_lines/*:
	* objects/standard/zigzagline.[ch]:
	* objects/standard/polyline.[ch]:
	* objects/standard/bezier.[ch]: Patch from Marcel Toele
	<dpy.dia@gmail.com>: Custom line objects -- sorta like shapes, but
	for lines.  Limited to a way to preset attributes on the standard
	lines.
	
	* lib/widgets.[ch]: 
	* lib/geometry.c (units): 
	* lib/geometry.h: 
	* lib/diatypes.h: Moved units array to be generally accessible.

2008-01-10  Hans Breuer  <hans@breuer.org>

	* app/create_object.c(create_object_button_release) : don't crash on
	tool->obj being NULL, just do nothing than.

	* app/undo.c(310) : error C4033: 'undo_remove_to' must return a value
	  app/undo.c(312) : error C4047: '!=' : '
	void (__cdecl *)(struct _Change *,struct _Diagram *)' 
	differs in levels of indirection from 
	'void (__cdecl ** )(struct _Change *,struct _Diagram *)'

	* lib/libdia.def : reflect recent libdia API changes

2007-12-11  Lars Clausen  <lars@raeder.dk>

	* plug-ins/shape/shape-export.c (export_shape): Fix crash of
	non-.shape export by disallowing it.

2007-12-09  Lars Clausen  <lars@raeder.dk>

	* lib/persistence.c: Fixed window update events such that show/hide
	and map/unmap are symmetrical and gets the right info stored.
	Fixes bug #501475.

2007-12-03  Lars Clausen  <lars@raeder.dk>

	* app/undo.[ch]: New function undo_remove_to removes items from the
	undo stack until hitting a specific kind of undo item.  Needed for
	text edit undo collapsing, but not used yet.

	* app/modify_tool.c: 
	* app/diagram.c: 
	* app/disp_callbacks.c: 
	* app/textedit_tool.c: 
	* app/layer_dialog.c: 
	* app/display.[ch]:
	* app/commands.c: 
	* lib/diagramdata.[ch]: 
	* lib/text.c: 
	* lib/focus.[ch]: Focus list and active focus now per-diagram.
	Selection kept when switching between diagrams.

2007-12-01  Lars Clausen  <lars@raeder.dk>

	* po/LINGUAS: Added Punjabi (pa), as pointed out by
	http://l10n.gnome.org/module/dia. Closes bug #500745.

	* po/POTFILES.in: Added diacairo-interactive.c, tree.c and
	outline.c, as suggested on http://l10n.gnome.org/module/dia.
	Closes bug #500739.

2007-11-20  Lars Clausen  <lars@raeder.dk>

	* shapes/Cisco/Makefile.am: Fixed wrong numbering of shape list.

2007-11-11  Hans Breuer  <hans@breuer.org>

	* objects/standard/outline.c : avoid drawing invalid number of bezier 
	points (and thus crashing)

	[
	  Much decreased start-up time and memory usage by delay loading
	  custom shapes. Closing bug #491142
	]
	* objects/custom/shape_typeinfo.c : (new file) extracting the type
	information of the custom shape by reading the first 512 bytes
	using libxml SAX. Instead of DOM it does not load the whole file
	into memory.
	* objects/custom/custom.c : implement and use custom_object_preload()
	based on the above. Use it in load_shape_from_tree() - the routine
	scanning all shapes at start-up
	* objects/custom/shape_info.[ch] : adapt infrastructure to to the
	complete loading of the shape file on demand
	[
	  there were 5 - out of ~700 shapes - which failed the size assumption 
	  (reading only the first 512 bytes of the shape). They are modified
	  instead of making the (pre-)loading of all shapes slower.
 	]
	* shapes/Map/Isometric/Car1.shape shapes/Map/Isometric/Car2.shape
	  shapes/Misc/expended-node.shape shapes/Misc/expensible-node.shape 
	  shapes/Map/Isometric/RedCar.shape : moved <name/> and <icon/> tag 
	early in the file to silence preload

2007-11-10  Hans Breuer  <hans@breuer.org>

	* objects/standard/outline.c(outline_draw) : first the whole text
	path from cairo is converted to Dia BezPoint(s). Afterwards it is
	interpreted regarding 'land' and 'holes'. Thanks to Behdad Esfahbod
	and Carl Worth for the ideas. The holes are currently drawn by
	blanking with color_white. This could probably be improved by
	implementing some beziergon math.
	* samples/render-test.dia : more Outline variations

	* lib/object.c lib/prop_inttypes.c objects/UML/constraint.c
	  objects/UML/lifeline.c : more tolerance for very old files written
	by Dia (< 0.90) by checked cast from int to enum and marking some
	more properties optional

2007-11-08  Lars Clausen  <lars@raeder.dk>

	* plug-ins/pgf/render_pgf.c (pgf_arc): Patch from Jeppe Fock
	<fock@nano.ku.dk>: Render PGF arcs correctly. Fixes bug #494942.
	

2007-11-04  Hans Breuer  <hans@breuer.org>

	* app/pixmaps/dia-app.png app/pixmaps/dia-diagram.png : restored
	from dia_gnome_icon.png, dia-diagram.png revision 3838
	* app/interface.c : if there is no window_icon set by the theme
	use the inline icons again. Fixes bug #491100 without reverting to
	the behaviour before bug #463115
	* app/commands.c : use the splash screen again in the about box
	* app/Makefile.am app/makefile.msc : build integration

	* objects/standard/outline.c : oops, the cairo context was leaked

	* app/menus.c data/display-ui.xml data/integrated-ui.xml
	  data/popup-ui.xml : put Outline to the menus
	* objects/standard/outline.c : need PROP_STD_TEXT_*_OPTIONS,
	otherwise the font specific stuff would not be saved/restored
	(outline_copy) : copy also the font information and colors
	* objects/makefile.msc : build Outline on win32
	* samples/render-test.dia : updated to also use Outline

	* plug-ins/dxf/dxf-import.c : the logic to detect a 4 point 'SOLID'
	was flawed, it is enough if x or y is different

2007-11-03  Hans Breuer  <hans@breuer.org>

	* objects/standard/outline.c : an object drawing text outlines, 
	even rotateable. Backdoor making Dia finally support some
	rotated text, compatible with all existing renderers ;)
	* objects/standard/pixmaps/outline.png : an ugly icon
	* objects/standard/standard.c : register and ...
	* objects/standard/Makefile.am : ... build it

	* app/interface.c : less magic number to reorder the sheet_option_menu

2007-10-31  Lars Clausen  <lars@raeder.dk>

	* objects/UML/umloperation.c: 
	* objects/UML/umlattribute.c: 
	* objects/UML/uml.h: 
	* objects/UML/uml.c: 
	* objects/UML/class.c:
	* objects/UML/class_dialog.c: Reverting UML patch: Patch not
	complete and changes non-standard.

2007-10-30  Lars Clausen  <lars@raeder.dk>

	* objects/UML/transition.c (transition_draw): Make sure transition
	uses solid linestyle.  Fixes bug #372149.

2007-10-28  Lars Clausen  <lars@raeder.dk>

	* objects/UML/umloperation.c: 
	* objects/UML/umlattribute.c: 
	* objects/UML/uml.h: 
	* objects/UML/uml.c: 
	* objects/UML/class.c:
	* objects/UML/class_dialog.c: Patch from jan jan
	<jve7gm@gmail.com>: Add attributes and "sealed" to UML.


2007-10-28  Hans Breuer  <hans@breuer.org>

	* lib/libdiadef.c : added lader_find_objects_containing_rectangle
	
	[ overhaul of the DXF plug-in, en passant fixing bug #481193 ]
	* plug-ins/makefile.msc plug-ins/dxf/Makefile.am 
	  plug-ins/dxf/autocad_pal.[ch] : moved the acad_pal into it's own
	file to share it between import and export. Provide accessors.
	* plug-ins/dxf/dxf-import.c :
	- get rid of the setlocale stuff by using g_ascii_strtod
	- read more object('entity) colors
	- better line style and width preserving
	- actually use text height from file
	- less complains, should not give any g_warning anymore, at least not
	  for a valid DXF file
	- initialze the layer to dia->active_layer to avoid crashing on
	  DXF which does not not set the layer information
	* plug-ins/dxf/dxf-export.c :
	- implement fill_rect, draw_polyline export more object colors
	- always write minimal header information although it is supposed to
	be completely optional

2007-10-28  Lars Clausen  <lars@raeder.dk>

	* app/dia_image.c: Rollback of use of stock image that breaks
	non-interactive use.  Bummer.
	
	* app/display.c (ddisplay_do_update_menu_sensitivity): Check for
	existence of display before updating menus.

	* app/diagram.c (diagram_update_menu_sensitivity): 
	* app/menus.c: 
	* app/menus.h (struct _UpdatableMenuItems): 
	* app/undo.[ch]: Add support for desensitizing the Undo/Redo menu
	items. 

	* installer/rpm/dia.spec.fedora-core-6: 
	* data/dia-splash.png
	* data/Makefile.am
	* data/icons/*:
	* makefile.msc: 
	* app/splash.c (get_logo_pixmap): 
	* app/interface.c (create_toolbox): 
	* app/Makefile.am: 
	* app/makefile.msc: 
	* dia.desktop.in.in: 
	* app/commands.c: Patch from Michael Monreal
	<michael.monreal@gmx.net>: Move image data into data directory and
	use SVG where possible.	Fixes bug #463115.

	* Makefile.am (CLEANFILES): 
	* configure.in: 
	* dia.keys.in: Use Automake to generate dia.keys rather than a
	hack.  Part of fix of bug #463115.

	* lib/dia_image.c (dia_image_get_broken): Use stock image for
	broken image.  Fixes bug #172304.

2007-10-27  Lars Clausen  <lars@raeder.dk>

	* app/interface.c (create_sheet_dropdown_menu): Follow-up on bug
	#442309: Since flowchart is the default start-up sheet now, put it
	in the always-there list.

	* shapes/Assorted/arrow-chevron.shape: 
	* shapes/Assorted/arrow-down.shape: 
	* shapes/Assorted/arrow-left-notched.shape: 
	* shapes/Assorted/arrow-left-right.shape: 
	* shapes/Assorted/arrow-left-right-up.shape: 
	* shapes/Assorted/arrow-left.shape: 
	* shapes/Assorted/arrow-pentagon.shape: 
	* shapes/Assorted/arrow-quad.shape: 
	* shapes/Assorted/arrow-right-notched.shape: 
	* shapes/Assorted/arrow-right.shape: 
	* shapes/Assorted/arrow-up-down-left.shape: 
	* shapes/Assorted/arrow-up-down.shape: 
	* shapes/Assorted/arrow-up.shape: 
	* shapes/Assorted/circle-quarter.shape: 
	* shapes/Assorted/circle.shape: 
	* shapes/Assorted/cross-maltese.shape: 
	* shapes/Assorted/cross-swiss.shape: 
	* shapes/Assorted/diamond.shape: 
	* shapes/Assorted/heart.shape: 
	* shapes/Assorted/hexagon.shape: 
	* shapes/Assorted/moon-quarter.shape: 
	* shapes/Assorted/octagon.shape: 
	* shapes/Assorted/parallelogram-horizontal.shape: 
	* shapes/Assorted/parallelogram-vertical.shape: 
	* shapes/Assorted/pentagon.shape: 
	* shapes/Assorted/square.shape: 
	* shapes/Assorted/star4curved.shape: 
	* shapes/Assorted/star4.shape: 
	* shapes/Assorted/star6.shape: 
	* shapes/Assorted/star7.shape: 
	* shapes/Assorted/star8curved.shape: 
	* shapes/Assorted/star8.shape: 
	* shapes/Assorted/star8sharp.shape: 
	* shapes/Assorted/sun.shape: 
	* shapes/Assorted/trapezoid.shape: 
	* shapes/Assorted/triangle-isoceles.shape: Use foreground instead
	of #000000 for shapes.  Fixes bug #336967.

	* data/toolbar-ui.xml: Added some more toolbar icons.  No more
	should be added until we can turn them on and off in groups.

	* lib/diagramdata.[ch]: New function that finds objects that
	contain a given rectangle.

	* app/create_object.c (create_object_button_release): Don't parent
	an object until it's released, allowing arrows to be created out of
	parenting objects.  Now only objects that end up being entirely
	contained in a parent get parented.

	* app/diagram.[ch]: New function that checks for parentability of an
	object-parent pair.

2007-10-27  Hans Breuer  <hans@breuer.org>

	* app/diagram.c(diagram_load) : don't kill the default diagram on 
	import failure. Fixes bug #490546

	less memory leaks, thanks valgrind
	* lib/font.c : match pango_context_load_font() with g_object_unref()
	* objects/SISSI/sissi.c : ObjectSISSI::text was leaked
	* lib/diagdkrenderer.c(draw_text_line) : the PangoLayout was leaked 
	when drawn 'highlighted'; use pango_layout_get_line_readonly() - still
	warnings 'possibly lost'

	* configure.in : missing pygtk is no longer fatal, 
	SWIG detection more verbose

	* object/UML/class_dialog.c : removed unused variables

2007-10-27  Lars Clausen  <lars@raeder.dk>

	* shapes/Cisco/Makefile.am: Split long shape list.  Fixes bug #125924.

2007-10-26  Lars Clausen  <lars@raeder.dk>

	* lib/font.c: Don't translate to bogus AvantGarde-Gothic font,
	and point to the *correct* PostScript definition.  Fixes bug
	#477079.

	* objects/UML/class_dialog.c: Patch for bug #490356: Use stock
	items for UML class dialog.  Patch from Felipe Reyes
	<felipereyes@gmail.com> 

2007-10-23  Hans Breuer  <hans@breuer.org>

	* app/select.c : 'textedit_mode' undefined;
	* app/textedit_tool.c : 'object_add_updates_list' undefined;
	* lib/libdia.def : unresolved external symbol _text_delete_key_handler

	* objects/Database/table_dialog.c : like UML/class_dialog.c move
	Styles (color, fonts) to their own page
	
2007-10-22  Lars Clausen  <lars@raeder.dk>

	* app/textedit_tool.c: Proper deselecting and tool resetting when
	clicking on other objects or outside of objects.

2007-10-21  Lars Clausen  <lars@raeder.dk>

	* app/textedit.h: Proper #ifndefs and includes.

	* app/select.c:
	* app/commands.c: Skip out or handle alternately a number of menu
	items when in text edit mode.  Undo of delete does not quite work yet.
	* lib/text.[ch]: Expose delete key handling to allow it to be used
	from delete menu handler.  

	* app/commands.c: 
	* app/menus.h (struct _UpdatableMenuItems): 
	* app/menus.c (menus_initialize_updatable_items): 
	* app/diagram.c (diagram_update_menu_sensitivity): Set menu
	sensitivities for text edit mode.  Keyboard shortcuts are still
	caught by the menu items when insensitive, unfortunately.

2007-10-20  Steffen Macke <sdteffen@sdteffen.de>

	* installer/win32/dia.nsi: Added sample files, new shapes
	
2007-10-20  Hans Breuer  <hans@breuer.org>

	* configure.in lib/libdia.def objects/Database 
	  objects/Database/compound.c objects/Database/database.c
	  objects/Database/database.h objects/Database/Makefile.am
	  objects/Database/pixmaps/compound.xpm
	  objects/Database/pixmaps/reference.xpm
	  objects/Database/pixmaps/table.xpm
	  objects/Database/reference.c objects/Database/table.c
	  objects/Database/table_dialog.c objects/Makefile.am
	  objects/makefile.msc po/POTFILES.in sheets/Database.sheet.in
	  sheets/Makefile.am : new database table relation shapes by
	Petr Novotnik - bug #397688 - slightly modified to work with current
	SVN and build on windoze. Although derived from the UML class object
	the 'Table' object looks like a much better playground for a generic
	property list widget.

	* app/textedit.c(textedit_activate_first) : had an endless loop when
	none of the selected objects are text editable
	
	* app/properties.c : resets current_obj when the dialog is closed
	(Sameer D. Sahasrabuddhe, fixes bug #30430)

	* objects/Misc/tree.c : added object_apply_props stuff

	* app/properties.c lib/group.c lib/newgroup.c lib/objchange.h
	  lib/object.h lib/propobject.c objects/AADL/aadlbox.c
	  objects/AADL/aadlbus.c objects/AADL/aadldata.c
	  objects/AADL/aadldevice.c objects/AADL/aadlmemory.c 
	  objects/AADL/aadlpackage.c objects/AADL/aadlprocess.c
	  objects/AADL/aadlprocessor.c objects/AADL/aadlsubprogram.c
	  objects/AADL/aadlsystem.c objects/AADL/aadlthread.c
	  objects/AADL/aadlthreadgroup.c objects/chronogram/chronoline.c
	  objects/chronogram/chronoref.c objects/custom/custom_object.c
	  objects/EML/instantiation.c objects/EML/interaction-ortho.c
	  objects/EML/interaction.c objects/EML/process.c 
	  objects/ER/attribute.c objects/ER/entity.c 
	  objects/ER/participation.c objects/ER/relationship.c 
	  objects/flowchart/box.c objects/flowchart/diamond.c
	  objects/flowchart/ellipse.c objects/flowchart/parallelogram.c
	  objects/FS/flow-ortho.c objects/FS/flow-poly.c objects/FS/flow.c
	  objects/FS/function.c objects/GRAFCET/action.c 
	  objects/GRAFCET/condition.c objects/GRAFCET/step.c
	  objects/GRAFCET/transition.c objects/GRAFCET/vector.c
	  objects/GRAFCET/vergent.c objects/Istar/actor.c objects/Istar/goal.c
	  objects/Istar/link.c objects/Istar/other.c objects/Jackson/domain.c
	  objects/Jackson/phenomenon.c objects/Jackson/requirement.c
	  objects/KAOS/goal.c objects/KAOS/metaandorrel.c 
	  objects/KAOS/metabinrel.c objects/KAOS/other.c
	  objects/Misc/analog_clock.c objects/network/basestation.c
	  objects/network/bus.c objects/network/radiocell.c
	  objects/network/wanlink.c objects/SADT/annotation.c
	  objects/SADT/arrow.c objects/SADT/box.c objects/SISSI/area.c
	  objects/SISSI/faraday.c objects/SISSI/room.c 
	  objects/SISSI/sissi_object.c objects/SISSI/site.c
	  objects/standard/arc.c objects/standard/bezier.c
	  objects/standard/beziergon.c objects/standard/box.c
	  objects/standard/ellipse.c objects/standard/image.c
	  objects/standard/line.c objects/standard/polygon.c
	  objects/standard/polyline.c objects/standard/textobj.c
	  objects/standard/zigzagline.c objects/UML/activity.c
	  objects/UML/actor.c objects/UML/association.c objects/UML/branch.c
	  objects/UML/class.c objects/UML/classicon.c objects/UML/component.c
	  objects/UML/component_feature.c objects/UML/constraint.c
	  objects/UML/dependency.c objects/UML/fork.c
	  objects/UML/generalization.c objects/UML/implements.c
	  objects/UML/large_package.c objects/UML/lifeline.c 
	  objects/UML/message.c objects/UML/node.c objects/UML/note.c
	  objects/UML/object.c objects/UML/realizes.c
	  objects/UML/small_package.c objects/UML/state.c
	  objects/UML/state_term.c objects/UML/transition.c 
	  objects/UML/usecase.c : finally there is proper group properties
	handling thanks to patches from Sameer D. Sahasrabuddhe. Almost fixes 
	long-standing bug #60331.

	* objects/Misc/libmisc.c objects/Misc/tree.c objects/Misc/Makefile.am
	  objects/Misc/pixmaps/tree.xpm shapes/Misc/expended-node.shape
	  shapes/Misc/expensible-node.shape shapes/Misc/Makefile.am
	  sheets/Misc.sheet.in : patch from Thomas Harding adding the
	shapes to simplify construction of explorer like trees, bug #428696
	* shapes/Misc/expended-node.png shapes/Misc/expensible-node.png
	  objects/Misc/pixmaps/tree.xpm  : ... adapted to follow the default
	icons size and format, i.e. not adding SVG
	* objects/makefile.msc : build on win32

	* app/interface.c(337) : warning C4700: local variable 'magnify' 
	used without having been initialized

2007-10-19  Lars Clausen  <lars@raeder.dk>

	* shapes/Lights/Makefile.am: 
	* shapes/Makefile.am: 
	* configure.in: Patch from Elie Roux <elie.roux@enst-bretagne.fr>
	fixes makefiles for new shapes.  So it's not just me who forgets
	those:) 
	
2007-10-14  Hans Breuer  <hans@breuer.org>

	* plug-ins/pgf/render_pgf.c : *reverted* 
	put \\setlength{\\du}{15\\unitlength}\n into the if branch 
	(again Gaëtan Leurent, bug #482173)

2007-10-15  Lars Clausen  <lars@raeder.dk>

	* app/interface.c (zoom_activate_callback): Set limits to zoom
	amount to avoid crashes.  See bug #483384.

2007-10-14  Hans Breuer  <hans@breuer.org>

	Next stab on dedicated text edit mode:
	* app/textedit_tool.[ch] app/tool.[ch] app/cursors.[ch] 
	app/interface.c app/Makefile.am app/makefile.msc data/display-ui.xml 
	data/integrated-ui.xml data/popup-ui.xml : text edit mode 
	reflected in toolbox, it is too different from normal modification
	* app/diagram.c app/menu.c : make Cut, Copy, Paste, Delete 
	and Duplicate menu entries insensitive when text is edited
	* app/pixmaps/textedit.png : an ugly icon
	* app/create_object.c app/disp_callbacks.c : deal with transitions 
	from one tool to to the other
	* app/textedit.[ch](textedit_activate_object): tell if editing started
	
2007-10-13  Hans Breuer  <hans@breuer.org>

	* lib/diarenderer.[ch] lib/textline.[ch] lib/libdia.def : instead 
	of throwing away the alignment information in DiaRenderer::draw_text
	pass it through DiaRenderer::draw_text_line so it is still available
	for renderers just implementing DiaRenderer::draw_string
	* app/diapsft2renderer.c app/diapsrenderer.c lib/diagdkrenderer.c
	  lib/dialibartrenderer.c plug-ins/metapost/render_metapost.c :
	adapted accordingly, should give same results as before
	* lib/diasvgrenderer.c : adapted and write text-anchor again
	* plug-ins/cairo/diacairo.c : make DiaCairoRenderer::draw_string
	work for alignment CENTER and RIGHT as well
	* plug-ins/pgf/render_pgf.c : put \\setlength{\\du}{15\\unitlength}\n
	into the if branch (Gaëtan Leurent, bug #482173)

	* plug-ins/svg/render_svg.c : group objects consisting of multiple
	SVG elements into <g></g>

	* configure.in : check for PANGOCAIRO on Linux

	* samples/render-test.dia : more text alignments and no 
	'uncommon' fonts

2007-10-12  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo.c plug-ins/cairo/diacairo-interactive.c : 
	use PangoCairo when available (HAVE_PANGOCAIRO_H)
	* plug-ins/makefile.msc : define HAVE_PANGOCAIRO_H for the cairo/win32

2007-10-07  Hans Breuer  <hans@breuer.org>

	* configure.in plug-ins/wmf/Makefile.am plug-ins/wmf/wmf.cpp :
	with the help of libEMF dia now can write EMF on Linux(x86), too.
	* plug-ins/wmf/libemf-todo.txt : stuff not working from libEMF

	* plug-ins/python/paper-info.[ch] plug-ins/python/diamodule.c
	  plug-ins/python/Makefile.am plug-ins/python/makefile.msc : wrap 
	PaperInfo and ...
	* plug-ins/python/imgmap.py : (new) .. use it to scale the
	html image map like most bitmap exporters do

2007-10-06  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/Makefile.am : now tested on Linux ;)

	* plug-ins/cairo/diacairo.h plug-ins/cairo/Makefile.am : oops, forgot
	to add this

2007-10-06  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo-interactive.c : based on a patch from
	Nguyen Thai Ngoc Duy (bug #329860) there is an interactive renderer
	based on cairo now. After some work in the cairo renderer base class
	(pango_cairo, hairlines, ...) this should finally allow us to get rid
	of the libart depedency
	* plug-ins/cairo/diacairo.c app/display.c : HACK to select the 
	DiaCairoInteractiveRenderer for antialiased rendering. If the points
	mentioned above are not fixed for the next release it should be
	disabled again in app/display.c(new_aa_renderer)
	* plug-ins/cairo/diacairo-print.c : almost empty, should become the
	place for GtkPrint/Cairo based printing.
	* plug-ins/cairo/Makefile.am plug-ins/makefile.msc : adapted

	* plug-ins/python/gtkcons.py : replace deprecated symbols, patch from
	Roland Stigge, fixes bug #483049

	* lib/arrows.c : major restructuring - getting calculate and draw by
	function pointer. A lot of arrows are converted to the new style thus
	arrow_bbox() can give the correct bounding box.
	* objects/standard/arc.c : bug #340705 and bug #477569
	  objects/standard/bezier.c : bug #300055 
	  objects/standard/line.c objects/standard/polyline.c 
	  objects/standard/zigzagline.c : not using *BBExtra to adjust the 
	bounding box for arrows but instead a combination of arrow_bbox()
	and calculate_arrow_point() 
	* lib/bounding_box.c : just a comment for now
	* samples/arrows.dia : more coverage

	* makefile.msc bindings/makefile.msc : integrated bindings in the build

	* configure.in acinclude.m4 Makefile.am bindings/Makefile.am : 
	build bindings given --with-swig (and SWIG is found)
	* bindings/dia-diagramdata.h bindings/dia-extra.cpp 
	  bindings/dia-properties.cpp bindings/dia-diagramdata.cpp
	  bindings/dia-properties.h bindings/dia-python-extra.h 
	  bindings/dia.swig : first time built with g++
	* bindings/test.py : some adaptions to run on Linux, not
	complete yet but something works;)

	* lib/utils.[ch] : removed superfluous definition of snprintf()
	which did not work from C++ and isn't needed anymore. Use g_snprintf().

	* lib/newgroup.c : remove the circular dependency to app, it does 
	not work on win32 and even Linuix has problems when app is not used,
	e.g. by providing bindings only for libdia

2007-09-30  Lars Clausen  <lars@raeder.dk>

	* app/undo.[ch]: Slight work on moving objects between layers.

	* app/modify_tool.c: 
	* app/disp_callbacks.c: 
	* app/textedit.[ch]: First stab at separate edit mode: Introduce
	"textedit_mode" check and entering/exiting text edit mode.  Make
	keyboard input understand textedit and switch in and out.  Don't
	automatically enter text edit mode on selection, only on creation.

2007-09-25  Lars Clausen  <lars@raeder.dk>

	* dia.desktop.in.in (Exec): Patch from Chidambar 'ilLogict'
	Zinnoury <illogict@online.fr>: Add file as arg to exec for those
	file managers who don't hack their way around it.  Bug #480079.

2007-09-23  Lars Clausen  <lars@raeder.dk>

	* objects/UML/class_dialog.c: Make UML properties dialogs use
	non-radio option menus.  Fixes bug #468203.

	* objects/UML/class.c (umlclass_update_data): Patch from
	<djpohly+gnome@gmail.com>: Don't add attributes	size to connection
	point placement if attributes aren't visible.  Fixes bug #470594.

	* lib/font.c: 
	(dia_font_get_sizes): Fixed lack of const.
	(dia_font_get_psfontname): Fixed postscript font name getter to
	comply with postscript standard.

	* app/diapsrenderer.c (dump_fonts): Use NewCenturySchlbk for
	NewCenturySchoolbook, following Adobe standards.  Also for some
	reason AvantGarde-Gothic is the "plain" name of the AvantGarde-Book
	series. Stupid Adobe. Fixes bug #477079.

	* app/preferences.c:
	* app/diaunitspinner.[ch]:
	* lib/prop_geomtypes.c: Font & length unit spinners now get the right
	settings from prefs on startup.  Fixes bug #479244.  Also a bit of
	cleanup. 

2007-09-22  Hans Breuer  <hans@breuer.org>

	* lib/arrow.[hc] : refactoring to more information hiding: 
	type menudesc renamed to ArrowDesc and moved arrow_types to arrow.c. 
	It will probably contain some additional information to calculate 
	arrow bounding boxes.
	* lib/attributes.c lib/diaarrowchooser.c lib/widgets.c
	  plug-ins/xfig/xfig-export.c : now only using accessors

	* lib/autoroute.h lib/diagramdata.h lib/diavar.h lib/font.h :
	minor cleanup for DIAVAR: removed unneeded includes, move
	render_boundig_boxes to diavar.h to make it useable for arrow.c
	
	* lib/libdia.def : adapted to the above

	* lib/arrow.[hc] : declare and implement arrow_bbox() taking the
	calculated start-point of arrows. The real size of arrows is only
	known in lib/arrow.c so finally all the *BBoxExtras stuff concerned 
	with arrows needs to vanish. The issue is further complicated by
	gap and other arrow posistion adjustmens; see bug #475168.
	
	* objects/standard/arc.c : use arrow_bbox() and calculate_arrow_point()
	for bounding box calculation. Get rid LineBBExtras usage for that.
	(arc_update_handles) always intialize the middle_handle.pos, not only
	when there is enough distance.
	
	* samples/arrows.dia : updated for broader coverage

	* app/interface.c : get rid of const for non-const strings, no more
	interface.c(477) : 'function' : different 'const' qualifiers
	interface.c(477) : 'g_free' : pointer mismatch for actual parameter 1

2007-09-22  Lars Clausen  <lars@raeder.dk>

	* app/commands.c:
	* app/interface.c:
	* app/interface.h:
	* app/menus.c: Patch from Patrick Hallinan 
	<patrick.j.hallinan@gmail.com>: Provide a proper zoom-box in the
	integrated UI.  This implementation looks better than the old one,
	and should be used in the non-integrated version as well.

2007-09-21  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/python-startup.py : allow to override system
	python plug-ins with users version. Patch from Tom Parker,
	fixes bug #478554

2007-09-16  Hans Breuer  <hans@breuer.org>

	* samples/arrows.dia : show some arrows (and their bounding
	box issues)

	* objects/custom/custom/custom_object.c : loading 
	samples/all_objects.dia produced a g_warning()
	"No attribute '%s' (%p) or no data(%p) in this attribute".
	Silenced it by marking all those "ext_attribute" optional.
	
	* app/preferences.c : move "Compressed saved files" to 
	"Diagram defaults", the setting already beahved like the other
	defaults. Fixes bug #439894.
	* app/diagram.c : finally respect diagram defaults again, probably
	broken with 0.95. Fixes bug #477451 

2007-09-15  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo.c : don't position the image twice,
	cairo_set_source_surface() does get 0,0 offset. Fixes bug #470926

2007-09-13  Lars Clausen  <lars@raeder.dk>

	* objects/UML/class.c: Patch from <djpohly+gnome@gmail.com>:
	Further adjustment of UML class connection points, this time
	adjusted for wrapping.  Fixes bug #470598.

2007-08-27  Marc-Andre Lureau  <marcandre.lureau@gmail.com>

	* configure.in:
	* po/LINGUAS: Use po/LINGUAS. Fixes bug #470797
	
2007-09-12  Lars Clausen  <lars@raeder.dk>

	* objects/UML/lifeline.c: Patch from Filippo Bergamasco
	<fbergama@gmail.com>: Improved behaviour of lifeline object,
	including being able to connect multiple.

	* lib/diasvgrenderer.c (draw_text_line): Use "textLength"
	attribute instead of unknown "length" attribute.  Fixes bug
	#474882.

	* objects/SISSI/sissi_dialog.c (properties_others_create_page):
	Libel changed to label.  Fixes bug #471506.

2007-09-09  Hans Breuer  <hans@breuer.org>

	* object/UML/class.c : the template box was not considered in the
	bounding box, part of bug #475173
	* object/UML/(activity|branch|state|state_term|usecase).c : 
	ElementBBExtras, should fix bug #475173

	* lib/prop_text.c : GtkTextView has no "changed" signal, connect 
	to "insert-at-cursor" although it probably does not catch every change
	
	* lib/dia_svg.c(dia_svg_parse_path) 
	  plug-ins/svg-import.c : initialize BezPoint to 0/scale all to 
	avoid uninitialized values in all BezPoint, even the ones which
	don't use all control points

	* samples/Self/dia-core.dia : adapted to font size changes from 0.96

	* app/diagram.c(diagram_update_for_filename) : don't add every 
	filename change to the recent file menu, only loaded or saved
	files belong there. Fixes bug #474941
	* app/filedlg.c : add to recent file menu also when saving but
	not on export
	* app/recent_file.[ch] : cleanup, updated comments	

2007-09-08  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/doxrev.py : moved the import of xml.parsers.expat
	to Parse() so it is not called during start-up. Fixes the start-up
	crash without understanding what is really causing it, bug #457828

	* plug-ins/python/codegen.py : reset the internal state in 
	begin_render(). Otherwise the renderer would remember previous 
	exports. Fixes bug #436311

	* lib/diasvgrenderer.[ch] plug-ins/shape/shape-export.c
	  plug-ins/svg/render_svg.c : based on analysis and patch by
	Dov Grobgeld the values written to SVGs are now scaled up, because
	many SVG interpreters don't cope very well with small values.
	The overall size of the image is kept by writing with and height in cm 
	but the viewBox scaled like the values in the file.
	For the Shape export the scale value is kept at 1.0 to avoid breaking
	Dia's Shape/SVG consumption. Fixes bug #316590
	
	* lib/dia_svg.[ch](dia_svg_parse_style) : allow to pass in user_scale	
	* plug-ins/svg/svg-import.c : implement some unit awareness and use it 
	to scale the input to Dia's internal cm. Adapt the user_scale with the
	viewBox as explained above. This not only gives almost correct 
	round-trip with Dia's own SVG writing, but also works better for the
	general case.
	* objects/custom/shape_info.c : adapt to API change

2007-09-01  Hans Breuer  <hans@breuer.org>

	* MAINTAINERS : http://blogs.gnome.org/ovitters/2007/08/31/
	enforcing-proper-trunkmaintainers-files-in-svn/

2007-08-26  Lars Clausen  <lars@raeder.dk>

	* objects/UML/class.c: Patch from <djpohly+gnome@gmail.com> fixes
	semi-random vertical alignment in UML attributes and operations,
	making them consistent at least.  Fixes bug #465623.

2007-08-19  Hans Breuer  <hans@breuer.org>

	* objects/UML/class_dialog.c : second step in shrinking the dialog,
	reorganization of the operations page make the dialog wider than tall
	(now 634x559 with my window manager/font settings). Closes bug #445698
	
2007-08-16  Lars Clausen  <lars@raeder.dk>

	* doc/en/authors.xml: 
	* doc/fr/authors.xml: 
	* doc/pl/authors.sgml: 
	* doc/eu/authors.xml: 
	* doc/pl/authors.xml: Updated links to Dia page and GDP.

2007-08-15  Lars Clausen  <lars@raeder.dk>

	* dia.desktop.in.in (Categories): Patch from Roland Stigge
	<stigge@antcom.de> removes deprecated category, fixes bug #466997.

2007-08-11  Steffen Macke <sdteffen@gmail.com>

	* shapes/ChemEng/prv.shape:
	* shapes/ChemEng/prv.png:
	* sheets/ChemEng.sheet.in: Added Pressure Relief shape; fixes bug
	#439842

2007-08-10  Lars Clausen  <lars@raeder.dk>

	* app/diagram.c (diagram_load_into): Translate filename of non-Dia
	files opened to be a Dia file.  Also notify users (once) of this
	translation.  Fixes bug #440093.

	* po/POTFILES.in: Patch from Elie Roux
	(elie.roux@enst-bretagne.fr) adds two missing POTFILES.

	* app/app_procs.c (app_exit): Remove kludge printf from exit.
	Fixes bug #442044.

	* installer/rpm/dia.spec.fedora-core-6: Spec file for fedora core
	6, from John Pye (john@curioussymbols.com).  The main Dia
	maintainers will probably not maintain this, but patches to update
	to more current versions are welcome.

	* app/object_ops.c (object_list_align_v): Symmetry between vert
	and horiz alignment functions.  Probably fixes bug #442054.

	* app/interface.c (create_sheets): Use a slightly more useful
	sheet as default selection.  Fixes bug #442309.

	* sheets/Lights.sheet.in: Patch from Elie Roux
	(elie.roux@enst-bretagne.fr) fixes some wrong shape names.

	* app/menus.c (menus_clear_recent): Don't assert non-critical
	things, just put appropriate ifs around them.

	* app/create_object.c (create_object_button_release): Update menus
	after creating an object.

2007-08-09  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Added Lights shapes and sheet

2007-08-09  Lars Clausen  <lars@raeder.dk>

	* doc/fr/graphics/*: Updated with french versions where needed.
	Last fix from Thomas Harding <thomas.harding@laposte.net>, closing
	bug #427552.
	
	* lib/element.h (ELEMENT_COMMON_PROPERTIES): Use
	PROP_FLAG_NO_DEFAULTS on element widths -- gives strange caching
	behaviour for shapes.

	* objects/ER/entity.c: Add PROP_FLAG_NO_DEFAULTS to make possible
	to set "weak" attribute from intdata.

	* shapes/Lights/*: Changed hardcoded B&W to foreground/background.

	* doc/en/usage-customization.xml: Fixed wrong image filename.

	* doc/fr/hardcopies.makefile: Clean-up of some spaces.

	* doc/en/usage-objects-basic.xml: Added some more detail on how to
	use the text object.  Fixes bug #455400.

	* objects/FS/flow.c: Added undo support, fixing bug #456419.

	* objects/SISSI/sissi_object.c (sissi_object_create): Fixed
	formatting and took things that should always be run outside of
	the if.  Fixes bug #463700.

	* objects/SISSI/sissi.h: Removed double newlines and fixed some
	formatting. 

	* shapes/Lights/*:
	* sheets/Lights.sheet.in:
	* sheets/Makefile.am (sheet_in_files): New shape set for lighting
	arrangements from Elie Roux (elie.roux@enst-bretagne.fr).  Needs a
	little fixing of colors, but otherwise fine.

	* doc/fr/Makefile.am (EXTRA_DIST): Include the PNG files in
	distribution. 

	* doc/fr/*:
	* configure.in: 
	* doc/Makefile.am (SUBDIRS): Added french manual.  Patch by Thomas
	Harding <thomas.harding@laposte.net>.  Doesn't quite close bug
	#427552, as french graphics should be generated.

	* xmldocs.make (docdir): Changed non-Gnome help path to follow a)
	the dir we actually use, and b) standard usage.

	* dia_gnome_icon_small.png: Less fuzzy 32x32 icon.  Fixes bug
	#463115. 
	
	* objects/FS/flow-ortho.c: text_alignment is an enum, not a real.
	Fixes bug #462563.

2007-08-07  Steffen Macke <sdteffen@gmail.com>

	* lib/font.c: get_string_offsets() Don't crash when line length is 0
	fixes bug #450040
 
2007-08-06  Lars Clausen  <lars@raeder.dk>

	* app/exit_dialog.c: 
	* app/app_procs.c: 
	* app/interface.c: More patch from Patrick, cleaning up memory
	usage and using more standard functionality.

	* app/interface.c: Patch from Patrick Hallinan 
	<patrick.j.hallinan@gmail.com> fixes double-close issue with
	integrated UI.

2007-08-05  Hans Breuer  <hans@breuer.org>

	* objects/UML/class_dialog.c : first step in shrinking the dialog,
	moved color and font settings to it's own page 'Style', bug #445698
	It only shrinks from 577x744 to 577x692, depends on font size. 
	Next step would be reorganize Operations page.

	* objects/Misc/analog_clock.c : remove stray PROP_STD_NOTEBOOK_END,
	fixing bug #444749

2007-07-29  Lars Clausen  <lars@raeder.dk>

	* lib/Makefile.am: Added newgroup.h

	* lib/newgroup.c: 
	* lib/newgroup.h: Definitions for the new group system.

	* app/diagram.c (diagram_group_selected): Work on
	creating/removing new style groups (ifdeffed, not finished).

	* objects/AADL/aadlbox.c: Fix for bug #458373: Correctly strdup.

2007-07-28  Lars Clausen  <lars@raeder.dk>

	* app/load_save.c (read_objects): Experimental use of new group
	system in load (ifdeffed).

2007-07-26  Steffen Macke <sdteffen@gmail.com>

	* objects/makefile.msc: Correct case to build SISSI dll
	
2007-07-25  Steffen Macke <sdteffen@gmail.com>

	* lib/plug-ins.c: Patch from Rémi Cardona <remi@gentoo.org> that
	removes the run-time dependency on libtool files (*.la) for
	plug-ins

2007-07-24  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.c
	* lib/prop_attr.c
	* lib/widgets.h
	* lib/prop_inttypes.c
	* lib/prop_text.c
	* lib/prop_geomtypes.c: Patch from Sameer Sahasrabuddhe
	<sameerds@gmail.com>: simplified some widgets in the property
	dialog and all of them now have an event handler to track
	PXP_NOTSET.  Yet another patch from bug #60331.

	* lib/object.h (DIA_OBJECT_EXPAND_WITH_CHILDREN): New
	parent-related flag, not in use yet.

	* app/disp_callbacks.c: Document need for setting active diagram.

2007-07-23  Hans Breuer  <hans@breuer.org>

	* lib/paper.c : instead of special casing for the thrid compiler
	just removed the superfluous inline on the get_paper_* functions
	Fixes bug #447737.

2007-07-22  Steffen Macke <sdteffen@gmail.com>

	* app/preferences.c:
	* objects/SISSI/sissi.h:
	* objects/SISSI/sissi_dialog.c:
	* sheets/SISSI.sheet.in: Fixed typos mentioned in bug report #45238;
	Thanks to Clytie Siddall
	* app/display.c:
	* app/makefile.msc:
	* app/app_procs.c:
	* app/exit_dialog.c:
	* app/exit_dialog.h:
	* app/Makefile.am:
	* app/interface.c:
	* app/interface.h:
	* app/makefile.mingw:
	* app/disp_callbacks.c: Patch from Patrick Hallinan 
	<patrick.j.hallinan@gmail.com>, fixes the problem with the active diagram
	during resize; adds an asterisk to the tab when diagram has changed;
	adds a new dialog to save unsaved files when exiting
	* app/authors.h: Added Patrick Hallinan
	* app/commands.c: Bumped copyright year to 2007

2007-07-21  Hans Breuer  <hans@breuer.org>

	[maket it compile with msvc/win32]
	* lib/bounding_box.c : fix c99ism to 
	* objects/SISSI/*.c : dont include unistd.h unconditionally
	
	[warningectomy]
	* app/interface.c : cast GtkWindow to GtkWidget
	* lib/object.[hc] : const correctness
	* objects/FS/flow.c objects/standard/line.c : 
	connection_adjust_for_autogap take a Connection*, not the 
	specialization

	* lib/diagdkrenderer.c : implement draw_fill_rounded_rect to
	avoid seams

2007-07-19  Steffen Macke <sdteffen@gmail.com>

	* app/command.c: Updated website link to point to live.gnome.org/Dia; 
	fixes bug #456637

2007-07-17  Steffen Macke <sdteffen@gmail.com>

	* app/commands.c:
	* app/sheets_dialog_callbacks.c:
	* app/layer_dialog.c:
	* app/load_save.c:
	* app/interface.c:
	* app/interface.h
	* app/diagram_tree_menu.c:
	* app/menus.c:
	* objects/SISSI/sissi.h
	* objects/SISSI/site.c:
	* objects/SISSI/faraday.c:
	* objects/SISSI/area.c:
	* objects/SISSI/sissi_dialog.c:
	* objects/SISSI/room.c:
	* objects/SISSI/sissi_object.c:
	* objects/SISSI/sissi.c:
	* objects/custom/custom_object.c:
	* objects/custom/shape_info.c:
	* lib/sheet.c:
	* lib/dia_xml.c:
	* lib/debug.c:
	* lib/beziershape.c:
	* lib/intl.c:
	* lib/dialibartrenderer.c:
	* lib/element.c:
	* lib/diarenderer.c:
	* lib/object_defaults.c:
	* lib/diasvgrenderer.c:
	* lib/newgroup.c:
	* lib/font.c:
	* lib/diagramdata.c:
	* lib/ps-utf8.c:
	* lib/diagdkrenderer.c:
	* lib/dia_svg.c:
	* lib/textline.c:
	* lib/plug-ins.c:
	* lib/persistence.c:
	* lib/persistence.h
	* lib/boundingbox.c:
	* plug-ins/dxf/dxf-import.c:
	* plug-ins/metapost/render_metapost.c:
	* plug-ins/xfig/xfig-export.c:
	* plug-ins/svg/render_svg.c:
	* plug-ins/svg/svg-import.c:
	* plug-ins/shape/shape-export.c:
	* plug-ins/pgf/render_pgf.c: patch from Elie Roux 
	<elie.roux@enst-bretagne.fr> that fixes many compiler warnings

2007-07-10  Steffen Macke <sdteffen@gmail.com>

	* configure.in: ALL_LINGUAS are in one line again; Thanks to Elie
	Roux for noticing the problem

2007-07-09  Chao-Hsiung Liao  <j_h_liau@yahoo.com.tw>

	* configure.in: Add "zh_HK" to ALL_LINGUAS.
	
2007-07-06  Steffen Macke <sdteffen@gmail.com>

	* app/sheets_dialog_callbacks.c: Additional warning if the user tries
	to load a diagram as a shape. Fixes bug #97903
	* doc/eu/dia.1: Remove epsi reference. Fixes bug #336972

2007-06-29  Lars Clausen  <lars@raeder.dk>

	* app/interface.c: Patch from Patrick Hallinan
	<patrick.j.hallinan@gmail.com>: Fix lack of initial update of new
	diagram. 

	* app/load_save.c: Patch from Hans de Goede
	<j.w.r.degoede@hhs.nl>: Avoid having to remove -c89 option by
	including proper header. Bug #436343.

2007-06-25  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Fix freetype installation problem

2007-06-24  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Check for python22.dll before enabling
	the Python plug-in component; Use GTK *.mo files from share instead
	of lib (gladewin32 compatibility; use freetype6.dll instead of
	libfreetype-6.dll (agreed common dll name for win32)
	* lib/libdia.def: exporting text_get_ascent, required by custom object,
	exporting dia_font_set_slant, dia_font_set_weight, required by vdx
	plug-in 

2007-06-20  Lars Clausen  <lars@raeder.dk>

	* app/disp_callbacks.c: Patch from Patrick Hallinan
	<patrick.j.hallinan@gmail.com>: Fix right/middle button
	functionality. 

2007-06-13  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Workaround previous theme bug; properly use
	Windows installer theme
	* doc/en/dia.dbk: Applied patch from Peter Breitenlohner < peb@mppmu.mpg.de>
	typo in manpage; fixes bug #340992
	
2007-06-10  Steffen Macke <sdteffen@gmail.com>

	* sheets/SISSI.sheet.in: Translating texts from French to English
	* objects/sissi/site.c:
	* objects/sissi/area.c:
	* objects/sissi/room.c:
	* objects/sissi/sissi_object.c: Translated confidentiality from French to
	English; partial fix for bug #355995
	* installer/win32/dia.nsi: Added SISSI files, ui files
	* app/app_procs.c: #include commands.h
	* app/commands.c: #include interface.h
	* app/interface.c: Declare variables first to make MSVC happy
	
2007-06-07  Lars Clausen  <lars@raeder.dk>

	* app/commands.c
	* app/display.c
	* app/commands.h
	* app/app_procs.c
	* app/interface.c
	* app/interface.h
	* app/disp_callbacks.c
	* app/menus.c
	* app/menus.h
	* lib/diainteractiverenderer.c
	* data/integrated-ui.xml: Patch from Patrick Hallinan
	<patrick.j.hallinan@gmail.com>: More work on integrated UI:
	Toolbar visibility, right-mouse menu.

2007-06-05  Jakub Friedl  <jfriedl@suse.cz>

	* app/load_save.c: Corrected error messages (proper English)

2007-06-02  Lars Clausen  <lars@raeder.dk>

	* lib/Makefile.am (libdia_la_SOURCES): 
	* app/Makefile.am (dia_core_files): 
	* lib/newgroup.c: Moved here from app.
	
	* app/newgroup.c (newgroup_update_data): Correctly update
	selection of children when closing group, fixes crash.
	
	* objects/flowchart/parallelogram.c
	* objects/flowchart/box.c
	* objects/flowchart/diamond.c
	* objects/flowchart/ellipse.c
	* objects/network/radiocell.c
	* objects/SISSI/sissi.c
	* objects/Misc/analog_clock.c
	* objects/standard/zigzagline.c
	* objects/standard/arc.c
	* objects/standard/bezier.c
	* objects/standard/image.c
	* objects/standard/beziergon.c
	* objects/standard/polygon.c
	* objects/standard/line.c
	* objects/standard/box.c
	* objects/standard/polyline.c
	* objects/standard/ellipse.c
	* objects/ER/relationship.c
	* objects/ER/attribute.c
	* objects/ER/entity.c
	* objects/custom/custom_object.c
	* plug-ins/dxf/dxf-import.c
	* plug-ins/xfig/xfig-import.c
	* plug-ins/svg/svg-import.c
	* plug-ins/vdx/vdx-import.c
	* lib/properties.h: Patch from Sameer Sahasrabuddhe
	<sameerds@gmail.com>: Fix names and types of std line width. 

	* app/interface.c
	* lib/persistence.c: Firmly define what happens with dupping and
	freeing persistence strings.  Fixes crash with integrated UI.
	
	* app/commands.c
	* app/display.c
	* app/display.h
	* app/app_procs.c
	* app/dia_embedd.c
	* app/interface.c
	* app/menus.c
	* app/menus.h
	* data/toolbar-ui.xml
	* lib/diainteractiverenderer.c: Patch from Patrick Hallinan
	<patrick.j.hallinan@gmail.com>: More work on integrated UI.
	Post-patch hid rulers_are_showing field.

	* data/toolbar-ui.xml: Renamed from data/toolbar.xml

	* data/Makefile.am: Added items for integrated UI.

2007-05-20  Lars Clausen  <lars@raeder.dk>

	* app/diapsrenderer.c (draw_text_line): Use non-i18n output for
	float in postscript.  Fixes eps latin-1 output, bug #439369.

	* app/interface.c: Update tooltips to follow new shortcuts.

	* data/display-ui.xml
	* data/integrated-ui.xml
	* app/menus.c:
	Move "Best Fit" up under zoom options where it belongs.  Response
	to bug #439838.

	* app/export_png.c: Make clearer distinction between pixbuf and
	libart PNG.

	* app/preferences.c
	* app/display.c
	* app/display.h
	* app/app_procs.c
	* app/filedlg.c
	* app/interface.c
	* app/interface.h
	* app/diagram.c
	* app/menus.c
	* app/menus.h
	* data/integrated-ui.xml
	* data/toolbar.xml: Patch from Patrick Hallinan
	<patrick.j.hallinan@gmail.com>: More work on integrated UI:

	 +Add popup message "Settings change will take effect after Dia is
	  restarted" to the integrated UI option. 
	 +Add snap tool items to the toolbar.
	 +Default the file filter for the Open File Dialog to "Supported
	  Formats" 
	 +Force the new diagram to be shown!!!
	 +Make the toolbar actually do something
	 +Make the diagram tree show a diagram's tab (when it should).
	 +Created Missing application menus.
	 +Make the name of second diagram created be numbered 2 instead of 1.
	 +Make diagram close button actually close the diagram.
	 +Add shortcut cntl-w for closing the current tab (free when
	  menu's were added).	 
	
2007-05-15  Steffen Macke <sdteffen@gmail.com>

	* config.h.win32: Version number is now 0.96+svn
	* lib/makefile.msc:
	* lib/makefile.mingw: Include prefs.c
	* lib/prefs.c: #include <string.h>
	* lib/libdia.def: Added several preferences-related functions
	* app/interface.h: Added prototype for create_integrated_ui()

2007-05-05  Lars Clausen  <lars@raeder.dk>

	* app/preferences.c:
	* app/preferences.h:
	* app/display.h:
	* app/app_procs.c:
	* app/main.c:
	* app/interface.c: Patch from Patrick Hallinan
	<patrick.j.hallinan@gmail.com>: Start of integrated UI.

2007-05-04  Lars Clausen  <lars@raeder.dk>

	* lib/properties.h: 
	* objects/Jackson/requirement.c:
	* objects/Jackson/domain.c:
	* objects/flowchart/parallelogram.c:
	* objects/flowchart/box.c:
	* objects/flowchart/diamond.c:
	* objects/flowchart/ellipse.c:
	* objects/network/radiocell.c:
	* objects/network/basestation.c:
	* objects/SADT/box.c:
	* objects/SADT/annotation.c:
	* objects/UML/component.c:
	* objects/UML/note.c:
	* objects/UML/component_feature.c:
	* objects/UML/usecase.c:
	* objects/UML/activity.c:
	* objects/UML/actor.c:
	* objects/UML/classicon.c:
	* objects/UML/state.c:
	* objects/UML/small_package.c:
	* objects/UML/node.c:
	* objects/standard/textobj.c:
	* objects/AADL/aadlbox.c:
	* objects/ER/relationship.c:
	* objects/ER/attribute.c:
	* objects/ER/entity.c:
	* objects/FS/flow-ortho.c:
	* objects/FS/function.c:
	* objects/FS/flow.c:
	* objects/FS/flow-poly.c:
	* objects/custom/custom_object.c:
	* objects/GRAFCET/action.c:
	* lib/properties.h: Patch from Sameer Sahasrabuddhe
	<sameerds@gmail.com>: Fix names and types of std text props. 

2007-04-25  Christophe Merlet  <redfox@redfoxcenter.org>

	* configure.in: Added "oc" (Occitan) to ALL_LINGUAS.

2007-04-25  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: gtkrc is a file, not a folder; fixes
	bug #433252

2007-04-19  Lars Clausen  <lars@raeder.dk>

	* lib/prop_attr.c: Use new signals in props. Patch from Sameer
	Sahasrabuddhe <sameerds@gmail.com> for bug #60331. 

	* lib/widgets.c (dia_font_selector_class_init): Remove undefined
	default handlers, fix leak of font name, define and use new
	signal. Patch from Sameer Sahasrabuddhe <sameerds@gmail.com>
	for bug #60331. 

	* app/interface.c (sheet_option_menu_changed): Use new signal, fix
	leak of sheet name.  Patch from Sameer Sahasrabuddhe
	<sameerds@gmail.com> for bug #60331. 

2007-04-16  Lars Clausen  <lars@raeder.dk>

	* doc/en/usage-layers.xml: Use normal quotation marks.  Fixes bug
	#404535. 

	* plug-ins/svg/render_svg.c (new_svg_renderer): Add a namespace
	for SVG output, patch by Thomas Harding
	<thomas.harding@laposte.net>.  Fixes bug #424530. 

	* lib/diasvgrenderer.c (draw_text_line): Don't supply units for
	text size when nobody else does.  Doesn't fix FireFox size
	strangeness, but at least makes the SVG a little more consistent.

	* plug-ins/pstricks/render_pstricks.c: Patch of extra line endings
	and inverted y-coords from Dan Gildea <gildea@pobox.com>.

	* plug-ins/dxf/dxf-import.c (read_entity_polyline_dxf): Make
	closed lines be polygons instead of polylines.  Fixes bug #421250.

	* lib/persistence.[ch] (persistence_boolean_is_registered): Function
	to check if a boolean value is registered at all.  Support
	functions for this check in general.

	* lib/prop_geomtypes.c (realprop_get_widget): Fix wrong parameter
	to gtk_spin_button_set_numeric.  From a bug whose number I forget.
	
	(lengthprop_get_widget, fontsizeprop_get_widget): Use prefs-set units.

	* lib/propdialogs.c: 
	* lib/group.c (group_describe_props): Set properties properly for
	groups.  By Sameer Sahasrabuddhe <sameerds@gmail.com>, work on
	bug #60331.

	* lib/widgets.[ch]:
	* app/interface.c (sheet_option_menu_changed): Use signals for
	dynamic menu changes.  By Sameer Sahasrabuddhe
	<sameerds@gmail.com>, work on bug #60331. 

	* app/undo.c: 
	* app/commands.c: New commands for moving objects between layers.
	Not entirely working yet.

	* app/diapagelayout.c (dia_page_layout_init): 
	* app/preferences.c: Added new prefs length_unit and fontsize_unit
	and used these in margins, properties.
	
	* app/preferences.c: 
	* lib/prefs.[ch]: Core preferences data structure moved into lib.

	* app/app_procs.c: 
	* lib/message.[ch]: Added three intermediate-level message functions
	to distinguish between notices, warnings and errors.  Errors are
	always shown, warnings are shown unless the user takes action,
	notices are shown once unless the user takes action.

	* objects/ER/relationship.c: 
	* objects/ER/entity.c: 
	* objects/custom/custom_object.c: 
	* objects/ER/attribute.c: 
	* objects/chronogram/chronoref.c: 
	* objects/AADL/aadlbox.c: 
	* objects/chronogram/chronoline.c:
	* lib/properties.h (PROP_STD_TEXT_HEIGHT_OPTIONS): Set a number of
	properties to be length/fontsize when applicable.

	* widgets.c (get_units_name_list): 
	* widgets.h: New function to give names of units for prefs.  Sort
	units list alphabetically.

2007-04-15  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/locale/english.nsh:
	* installer/win32/locale/german.nsh:
	* installer/win32/locale/french.nsh:
	* installer/win32/dia.nsi: Optional build of installer
	including GTK+, updated website link
	* configure.in: Create Makefiles for SISSI folders

2007-04-14  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Fixed freetype dll
	problem
	* objects/Makefile.am:
	* objects/SISSI/Makefile.am:
	* objects/SISSI/area.[ch]:
	* objects/SISSI/classification.h:
	* objects/SISSI/faraday.[ch]:
	* objects/SISSI/Makefile.am:
	* objects/SISSI/menace.[ch]:
	* objects/SISSI/methode_attack.h:
	* objects/SISSI/room.[ch]:
	* objects/SISSI/sissi.[ch]:
	* objects/SISSI/sissi_dialog.[ch]:
	* objects/SISSI/sissi_object.[ch]:
	* objects/SISSI/site.[ch]:
	* objects/SISSI/pixmaps/broken.xpm:
	* objects/SISSI/pixmaps/faraday.png:
	* objects/SISSI/pixmaps/sissi_object.xpm:
	* sheets/Makefile.am:
	* sheets/SISSI.sheet.in:
	* sheets/SISSI/(1-76).xml:
	* sheets/SISSI/aircooler.png:
	* sheets/SISSI/alarm_center.png:
	* sheets/SISSI/analyse.xpm:
	* sheets/SISSI/barriere.png:
	* sheets/SISSI/broken.xpm:
	* sheets/SISSI/broken-chain.xpm:
	* sheets/SISSI/camera_interphone.png:
	* sheets/SISSI/capteur_brise_glace.png:
	* sheets/SISSI/capteur_faisceau.png:
	* sheets/SISSI/cellular_phone.png:
	* sheets/SISSI/cloud.png:
	* sheets/SISSI/condensateur.png:
	* sheets/SISSI/detecteur_alimentation.png:
	* sheets/SISSI/detecteur_courant.png:
	* sheets/SISSI/detecteur_enthalpie.png:
	* sheets/SISSI/detecteur_fumee.png:
	* sheets/SISSI/detecteur_lumiere.png:
	* sheets/SISSI/detecteur_mouvement.png:
	* sheets/SISSI/detecteur_mouvement_video.png:
	* sheets/SISSI/detecteur_mouvement_video.png:
	* sheets/SISSI/detecteur_niveau.png:
	* sheets/SISSI/detecteur_pression.png:
	* sheets/SISSI/detecteur_qualite_air.png:
	* sheets/SISSI/detecteur_tension.png:
	* sheets/SISSI/detecteur_vehicule.png:
	* sheets/SISSI/detecteur_vibration.png:
	* sheets/SISSI/digi_code.png:
	* sheets/SISSI/diskette.png:
	* sheets/SISSI/extincteur.png:
	* sheets/SISSI/extracteur_humidite.png:
	* sheets/SISSI/faraday.png:
	* sheets/SISSI/file.png:
	* sheets/SISSI/file_cabinet.png:
	* sheets/SISSI/filtre_air.png:
	* sheets/SISSI/hub.png:
	* sheets/SISSI/ibm_mini.png:
	* sheets/SISSI/info.xpm:
	* sheets/SISSI/information.png:
	* sheets/SISSI/key.png:
	* sheets/SISSI/laptop.png:
	* sheets/SISSI/lecteur_badge.png:
	* sheets/SISSI/lecteur_badge_clavier.png:
	* sheets/SISSI/lecteur_biometrique.png:
	* sheets/SISSI/logiciel.xpm:
	* sheets/SISSI/Makefile.am:
	* sheets/SISSI/menace.xpm:
	* sheets/SISSI/meuble.xpm:
	* sheets/SISSI/modem.png:
	* sheets/SISSI/onduleur.png:
	* sheets/SISSI/ordinateur_portable.gif:
	* sheets/SISSI/pc.png:
	* sheets/SISSI/pda.png:
	* sheets/SISSI/personne.xpm:
	* sheets/SISSI/phone.png:
	* sheets/SISSI/pompe.png:
	* sheets/SISSI/pompe_rotative.png:
	* sheets/SISSI/porte_tambour.png:
	* sheets/SISSI/relational_database.png:
	* sheets/SISSI/router.png:
	* sheets/SISSI/safe.png:
	* sheets/SISSI/sauvegarde.xpm:
	* sheets/SISSI/si.xpm:
	* sheets/SISSI/sissi_object.xpm:
	* sheets/SISSI/storage_array.png:
	* sheets/SISSI/support.xpm:
	* sheets/SISSI/tourniquet.png:
	* sheets/SISSI/unbroken-chain.xpm:
	* sheets/SISSI/ventilateur.png:
	* sheets/SISSI/ventilateur_axial.png:
	* sheets/SISSI/ventilateur_centrifuge.png: New objects to draw
	systems security diagrams. Closes bug #355995.
	Provided by Luc Cessieux <cessieux@hotmail.com>
	
2007-04-13  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Updates for 0.96.1-1 installer. Fixes
	problems with gladewin32 build and gimp-win GTK+ runtime
	
2007-04-12  Steffen Macke <sdteffen@gmail.com>

	* lib/makefile.msc: Use $(GLIB_GEN_MARSHAL), to be defined in 
	$(TOP)/glib/build/win32/make.msc, allows flexible use of different
	GTK+ development environments
	
2007-04-04  Pema Geyleg  <pema.geyleg@gmail.com>

	* configure.in: Added 'dz' to ALL_LINGUAS

2007-03-26  Hans Breuer  <hans@breuer.org>

	* bindings/* : dia/lib bindings with the help of SWIG, for details
	see: http://mail.gnome.org/archives/dia-list/2007-March/msg00092.html

2007-03-25  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* RELEASE-PROCESS: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* doc/eu/dia.xml:
	* configure.in: Release 0.96 hits the streets.

2007-03-18  Hans Breuer  <hans@breuer.org>

	* app/load_save.c : glib/gstdio.h was protected by
	#if GLIB_CHECK_VERSION(2,8,0) but it is supposed to be available
	since glib-2-6. We rely on that anyway.

2007-03-18  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : avoid stumbling over libxml2 preprocessor
	tricks for LIBXML_THREAD_ENABLED (not at all platform specific)

2007-03-18  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* RELEASE-PROCESS: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* doc/eu/dia.xml:
	* configure.in: Pre9 hot on the heels of pre8.

	* app/app_procs.c plug-ins/wmf/wmf.cpp : portability fixes

2007-03-17  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c app/autosave.c app/commands.c app/diaconv.c
	  app/export_png.c app/filedlg.c app/load_save.c 
	  app/paginate_psprint.c app/preferences.c app/render_eps.c 
	  app/sheets_dialog.c app/sheets_dialog_callbacks.c
	  lib/dia_dirs.c lib/dia_xml.c lib/diagdkrenderer.c 
	  plug-ins/cgm/cgm.c plug-ins/dxf/dxf-export.c 
	  plug-ins/dxf/dxf-import.c plug-ins/hpgl/hpgl.c 
	  plug-ins/metapost/render_metapost.c plug-ins/pgf/render_pgf.c 
	  plug-ins/pstricks/render_pstricks.c plug-ins/python/pydia-render.c 
	  plug-ins/shape/shape-export.c plug-ins/svg/render_svg.c 
	  plug-ins/vdx/vdx-export.c plug-ins/vdx/vdx-import.c 
	  plug-ins/wmf/wmf.cpp plug-ins/wpg/wpg.c 
	  plug-ins/xfig/xfig-export.c plug-ins/xfig/xfig-import.c
	  plug-ins/xslt/xslt.c : use <glib/gstdio.h> to match GLib's filename
	encoding to the io functions used, that is: g_open, g_fopen, g_stat, 
	g_unlink, g_mkdir, g_rename (, g_access, g_lstat, g_remove, g_freopen, 
	g_chdir, g_rmdir). Also replace gzopen() with gzdopen(g_open(), ...)
	to properly handle unicode filenames; finally use g_mkstemp().
	Fixes bug #131210 and bug #397159. To make this fully work on win32
	a recent enough version of libxml2 is required - tested with 2.6.27 -
	but anything from 2.6.24 should do.

	* plug-ins/cairo/diacairo.c : special handling for cairo which 
	currently only supports filenames in the C runtime locale.
	
2007-03-17  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/aobjects.py : if created a diagram, display it ...
	* app/display.c : ... and don't crash with display update before we
	had the chance to reate a renderer.

	* app/filedlg.c : plugged some leaks and made the filter sensitive 
	extension update work, by relying less on what we get back from gtk+
	Fixes bug #403195.

	  [some playing with valgrind : memory leaks]
	* lib/text.c(text_set_line_text) : removed superfluous g_strdup()
	* app/interface.c : gtk_accelerator_get_label() and g_strconcat()
	return newly allocated strings and gtk_tooltips_set_tip() does not
	free them
	  [jump or move depends on uninitialised value(s)]
	* objects/network/radiocell.c : dont call polyshape_update_data()
	without initialized points

	* plug-ins/python/aobjects.py : somehow an extra 'd' got commited :)

	* plug-ins/python/aobjects.py plug-ins/python/Makefile.am : 
	Self Documenation Part III and stress test, creates all Dia Objects
	* objects/FS/flow-ortho.c objects/FS/flow.c : removed partial
	left over of 'static DiaFont*' which caused a crash on creation

	* objects/UML/umlattribute.c objects/UML/umlformalparameter.c
	  objects/UML/umloperation.c : don't crash on name being NULL

	* objects/custom/custom_object.c : call *_update_data in *_copy
	Fixes the disappearance of object drawing after cut&paste
	(bug #416414, Stein Somers)

	* plug-ins/python/pydia-font.c : cmpfunc is supposed to return out
	of (-1, 0, 1)

	* lib/utils.h lib/message.h : added C++ guards

2007-03-17  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/locale/slovak.nsh: Use Codepage 1250, fixed errors

2007-03-16  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* RELEASE-PROCESS: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* doc/eu/dia.xml:
	* configure.in: Pre8?  Really?  Furrfu!

	* doc/en/Makefile.am (dia.1): Allow net access for getting the
	XSLT.  Let's see if it causes more problems than it solves.  Fixes
	bug #391545.

	* app/textedit.c (textedit_remove_focus): Do not free that which
	has not been allocated (focus!).  Fixes bug #418188.

	* plug-ins/pgf/render_pgf.c (draw_*_with_arrows): Don't
	assume that the arrow pointers are non-null.  Fixes bug #413309

	* plug-ins/vdx/vdx-import.c: Patch to fix crash bug #417956.

2007-03-14  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/locale/slovak.nsh: (added)
	* installer/win32/locale/Makefile.am: 
	* installer/win32/dia.nsi: Added Slovak translations for installer.
	Thanks to helix84 <helix84@users.sourceforge.net>

2007-03-11  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* RELEASE-PROCESS: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* doc/eu/dia.xml:
	* configure.in: Pre7

	* lib/prop_geomtypes.c (lengthprop_get_widget): Default to cm in
	display to be similar to other reals.

	* lib/widgets.c (dia_unit_spinner_value_changed): Leave space
	before unit.

	* Makefile.am (desktopdir): Put .desktop file in right dir.  Fixes
	bug #415767.

	* app/diagram.c (diagram_group_selected): Don't try to group no
	objects.  Fixes bug #410483, though the overall problem of
	activateable insensitive menu items remains.

	* lib/dia_image.c (dia_image_draw): 
	* lib/dia_image.h: 
	* lib/diagdkrenderer.c (draw_image): Give a GC to the image
	rendering function -- also change to using gdk_draw_pixbuf.  Fixes
	bug #401774.

	* lib/focus.c (remove_focus_object): Make sure a removed object no
	longer has the active focus.  Fixes bug #414708.

	* app/textedit.c (textedit_end_edit): Don't assert active_focus
	when it might not be true (during destruction).
	(textedit_remove_focus): Free the old focus when done.

2007-03-07  Steffen Macke <sdteffen@gmail.com>

	* lib/diaarrowchooser.c: Include config.h to compile with MSVC
	
2007-03-06  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Added plug-ins/python/doxrev.py

2007-03-05  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* RELEASE-PROCESS: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* doc/eu/dia.xml:
	* configure.in: Pre6

	* lib/diaarrowchooser.c: Use _dia_translate instead of gettext for
	tooltips and "Details...".  Fixes bug #406066.
	
	* app/diagram_tree_menu.c (create_factory): Add translate_func to
	item factory.

	* plug-ins/metapost/render_metapost.c: Patch from Robert Young 
	<robert.young%40dsto.defence.gov.au>: Scale text correctly with
	page scaling.

2007-03-04  Lars Clausen  <lars@raeder.dk>

	* app/export_png.c (export_png_ok): 
	* plug-ins/pixbuf/pixbuf.c (export_data): Fix rounding error of
	bitmap export.  Fixes bug #413275.

	* app/diagram.c (diagram_load): Correctly update title on
	defaulted diagrams.

	* objects/UML/class.c:
	* objects/UML/class_dialog.c: 
	* objects/standard/line.c (line_save): #ifdef DEBUG'ed out sanity
	check calls.

2007-02-26  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* RELEASE-PROCESS: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* doc/eu/dia.xml:
	* configure.in: Pre5

2007-02-25  Gabor Kelemen  <kelemeng@gnome.hu>

	* installer/win32/locale/hungarian.nsh: 
	* installer/win32/dia.nsi: Hungarian installer translation added.

2007-02-18  Hans Breuer  <hans@breuer.org>

	* app/diagram.c : moved diagram only stuff from diagram_load_into() to
	diagram_load() so ...
	* app/interface.c : ... we can use diagram_load_into() to drop files
	on the canvas, i.e. really load them _into_ an exisiting diagram

	* plug-ins/python/pydia-property.c : better debug support for wrong
	types in lists (of lists) when doing array assignments 
	(e.g. uml_class::operations)
	* plug-ins/python/doxrev.py : an import filter for XML generated by
	doxygen. One step further to do reverse engineering with Dia.
	* plug-ins/python/Makefile.am : at the moment only added to EXTRA_DIST

2007-02-17  Lars Clausen  <lars@raeder.dk>

        * objects/UML/class.c
        * objects/UML/object.c
        * objects/UML/state.c
        * objects/UML/small_package.c
        * objects/GRAFCET/boolequation.c: Make sure to call set_font
	before calling draw_string, fixes bug #408519

	* objects/UML/class.c (umlclass_set_props): #ifdef out debugging
	statement. 

2007-02-12  Hans Breuer  <hans@breuer.org>

	* lib/libdia.def : added text_get_line_strlen
	* makefile.msc : delete config.h on clean
	
	* plug-ins/python/pydia-property.c : allow to set string properties 
	with unicode 

2007-02-10  Hans Breuer  <hans@breuer.org>

	[ two more steps slowly fixing issues from bug #340352 ]
	* plug-ins/python/diamodule.c : instead of breaking compatibility with
	former PyDia plug-ins reimplemented dia.register_calback() by mapping
	to the GtkAction framework (it is not yet possible again to create 
	new menus, only adding menuitems to existing menus)
	* plug-ins/python/select_by.py : restored menuitems to shorter form

2007-02-08  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi:
	* installer/win32/langmacros.nsh:
	* installer/win32/locale/*.nsh: Added Python plug-in
	
2007-02-05  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* RELEASE-PROCESS: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* doc/eu/dia.xml:
	* configure.in: Pre4

	* plug-ins/vdx/vdx-export.c: Patch for crash.

2007-02-03  Lars Clausen  <lars@raeder.dk>

	* lib/dialibartrenderer.c (get_text_width): 
	* lib/diagdkrenderer.c (get_text_width): 
	* lib/text.c: Use g_utf8_strlen where character, not bytes are the
	goal.  Also remove utterly the unnecessary optimization of keeping
	strlen around for each and every line.

	* lib/text.[ch]: Remove clearly unneeded array of strlen.  Easier
	to just call strlen when needed.

	* objects/GRAFCET/action_text_draw.c (action_text_draw): Change
	offending direct use of text->strlen.

	* plug-ins/vdx/vdx.c
	* plug-ins/vdx/vdx-common.c
	* plug-ins/vdx/vdx-export.c
	* plug-ins/vdx/vdx.h
	* plug-ins/vdx/vdx-import.c
	* plug-ins/vdx/vdx-xml.c
	* plug-ins/vdx/visio-types.h: Upgrade to version 0.9 of VDX
	plug-in. 


2007-01-28  Hans Breuer  <hans@breuer.org>

	* app/recent_files.c : don't treat underscores in filenames as 
	accelerators, see bug #340352
	* app/menus.c : again register a translation function for 
	menus/actions. This fixes the code part of bug #400616
	Every translation needs to be updated to translate 'verbs'
	instead of complete menu pathes
	
2007-01-25  Lars Clausen  <lars@raeder.dk>

	* plug-ins/metapost/render_metapost.c (draw_text_line): First stab
	at text_line for metapost.  Needs width adjustment.

	* app/diagram.c (diagram_get_name): Don't emulate
	g_path_get_basename buggily, just use it.  Fixes bug #399535.

	* lib/dia_svg.c (dia_svg_parse_path): Patch from
	robert.young@dsto.defence.gov.au solves infinite loop in loading
	shapes. 

2007-01-25  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Added some more *.po files to the installer;
	include dia-win-remote.exe
	
2007-01-23  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Added BPMN sheet and shapes to installer

2007-01-22  Lars Clausen  <lars@raeder.dk>

	* plug-ins/vdx/vdx-import.c: 
	* plug-ins/vdx/vdx-export.c: 
	* plug-ins/vdx/vdx-common.c: 
	* plug-ins/vdx/vdx-xml.c: 
	* plug-ins/vdx/vdx.[ch]: 
	* plug-ins/vdx/visio-types.h: Updated to version 0.8.

	* NEWS: 
	* RELEASE-PROCESS: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* doc/eu/dia.xml:
	* configure.in: Pre3

2007-01-21  Lars Clausen  <lars@raeder.dk>

	* installer/rpm/dia.spec: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* doc/eu/dia.xml:
	* configure.in: 
	* NEWS: Prerelease 2 of 0.96.

	* Makefile.am (applicationsdir): 
	* po/POTFILES.in: Create versioned dia.desktop file by first
	intltool'ing it and then replacing the version number.

	* app/interface.c (create_tools): End g_strconcat with NULL.
	Fixes bug #398286.

2007-01-18  Lars Clausen  <lars@raeder.dk>

	* lib/Makefile.am (AM_CPPFLAGS): 
	* lib/dia_dirs.c: DIA_DATADIR and DIA_LIBDIR reverted to being
	DATADIR and LIBDIR, see
	http://mail.gnome.org/archives/dia-list/2007-January/msg00008.html
	and bug #385701.

2007-01-16  Lars Clausen  <larsrc@raeder.dk>

	* doc/en/usage-layers.xml: Corrections from Mick Curtis & Tim
	Bogie (see bug #347210).

2007-01-14  Lars Clausen  <larsrc@static>

	* Makefile.am (%.desktop.in): Attempt at better desktop.in
	building rule.  No luck.
 
	* app/menus.c (tool_entries): Using shift-alt instead of alt for
	menus to avoid conflicts with menu shortcuts.  Closing bug #350731.

	* objects/UML/class.c (uml_underline_text): Underline that skips
	leading whitespace, and is called on each part of a wrapped
	operation. Fixes bug #390145.

	* lib/diasvgrenderer.c (draw_text_line): Don't crash rendering
	text line, use text_line for rendering.  Dimensions now correct in
	SVG file for render-test, too bad nobody seems to obey them:(
	Fixes bug #332826.

	* samples/Makefile.am (EXTRA_DIST): Added new samples to dist.

	* plug-ins/vdx/vdx-import.c: 
	* plug-ins/vdx/vdx-xml.c: 
	* plug-ins/vdx/vdx.h: 
	* plug-ins/vdx/visio-types.h: Updated to version 0.7.  Thanks to
	Ian again for more work on this.

	* objects/KAOS/metaandorrel.c: Full autogap enabled for line-like
	connector. Fixes bug #365437.

	* objects/KAOS/metabinrel.c (mbr_update_data): Added comment on
	why autogap is hard -- this line is a one-segment bezier.  The
	standard bezier object has a generic bezier autogap function that
	could be reused given some work.

2007-01-13  Hans Breuer  <hans@breuer.org>

	* app/menu.c : register action "ViewAntialised" even if we 
	don't HAVE_LIBART ...
	* app/display.c : ... and disable the respective menu entry
	to avoid package dependent ui-file and crashing due to 
	gtk+ bug http://bugzilla.gnome.org/show_bug.cgi?id=396161

2007-01-13  Tommi Vainikainen  <thv@iki.fi>

	* app/diagram_tree_window.c (diagram_tree_window_new): "Diagram
	Tree" window title is now shown as translated.

2007-01-09  Hans Breuer  <hans@breuer.org>

	* objects/UML/class.c : comments were not considered for connection
	point placement. Patch from Vadim Zelenin, fixes bug #342086

2007-01-06  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/Makefile.am : EXTRA_DIST += bbox.py

	* dia.desktop.in : 'svn mv dia.desktop.in dia.desktop.in.in'
	  configure.in : add dia.desktop.in to AC_OUTPUT
	  Makefile.am : changed rule for .desktop handling. Together this 
	should resolve @VERSION@ in the dia.desktop file and thus gives us
	version info via bug-buddy automatically. 
	This is more important with bug-buddy 2.16 cause there the user can
	not manually adapt the version anymore. Hopefully fixes bug #393618 
	(see also bug #348827)

	* plug-ins/python/bbox.py : draws bounding boxes of the objects in the
	active layer into a new layer. Helps analyzing the font size problems.

	* acinclude.m4 : deduce py_config_dir from py_prefix, helps GARNOME
	and seems not to break anything (tested on Fedora and Gentoo)
	Joseph Sacco, bug #338368

	* plug-ins/python/pydia-property.c : finally implemented 
	getters/setters for LengthProperty and FontsizeProperty. (We really
	should take g_warning more serious, this one was
	WARNING **: No handler for type 'length')

	* plug-ins/xslt/xslt.c : don't use g_warning but message_error for 
	"No valid configuration files found for the XSLT plugin, not loading."

2007-01-05  Hans Breuer  <hans@breuer.org>

	* objects/standard/line.c : fix typo in save_arrow(), patch from
	Michael Duelli closing bug #393201

	* app/dia-win-remote.c app/paginate_gdiprint.cpp app/win32print.c
	  lib/dia_dirs.c lib/font.c plug-ins/wmf/wmf.cpp : 
	#define WIN32_MEAN_AND_LEAN before windows.h inclusion where ever 
	possible to reduce namespace clashes

2007-01-03  Hans Breuer  <hans@breuer.org>

	* lib/persistence.c : before restoring window positions check if
	they are still in valid range. Fixes bug #354266

	* app/interface.c : refined the zooms-list drop-down to include
	800%, stay symmetric and not have more than seven entries. 
	Fixes bug #328596

	* lib/makefile.msc : enable strict checking again 
	(-FImsvc_recommended_pragmas.h) to enforce e.g. matching pointers
	at compile time
	* lib/textline.h : RenderCacheFreeFunc is only taking a pointer,
	not a pointer to a pointer and we dont need a pointer to the 
	function pointer in the struct
	
	* objects/UML/constraint.c objects/UML/implements.c 
	  objects/UML/message.c objects/Jackson/phenomenon.c
	  objects/KAOS/metaandorrel.c : move_handle() method needs to call 
	connection_adjust_for_autogap() after connection_move_handle() because 
	the endpoints used for relative text movement need adjustment after 
	possible autogap correction. Fixes bug #362254.

2007-01-02  Hans Breuer  <hans@breuer.org>

	* *.msc, *.win32, HACKING, *.nsh, *.am, 
	  *.xbm, *.xpm; *.shape, *.sheet : setting svn:eol-style=native

	* lib/diagdkrenderer.c : avoid leaks in rounded rectangles,
	bug #358171, Michael Duelli

2006-12-13  Lars Clausen  <lars@raeder.dk>

	* Makefile.am (core-translation-report): Clean up after
	po-checktrans copying.

	* lib/plug-ins.h (DIA_PLUGIN_API_VERSION): Updated due to changes.

	* NEWS: 
	* configure.in: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* doc/eu/dia.xml: Updated to version 0.96-pre1

	* plug-ins/vdx/Makefile.am (libvdx_filter_la_SOURCES): Added
	visio-types.h 

	* po/POTFILES.in: Removed EML.sheet.in.

2006-12-09  Lars Clausen  <lars@raeder.dk>

	* app/diapsft2renderer.c (ANNOYING_SCALE_FACTOR): Recalculated the
	existing random scale factor to work with text_line, removed some
	old cruft, and switched to using the new adjustment.  This fixes,
	though in a not-well-understood way, bug #384007.

	* app/Makefile.am: Make it possible to compile without freetype by
	excluding freetype files.

	* app/diapsrenderer.c: Don't font_unref until you have
	font_ref'd the font, in case it's the same font.  Fixes crash.
	Also adjust for baseline in text drawing.

2006-12-03  Lars Clausen  <lars@raeder.dk>

	* doc/en/usage-objects-special.xml: A few updates.

	* app/menus.c (display_entries): Add Alt-Return as shortcut for
	object properties, and Shift-Alt-Return for diagram properties.
	Closes bug #

	* objects/SADT/box.c: Make connection points not tear off the side
	at resize.  Thanks to Vadim Zelenin <green@visoft.spb.ru> for this
	patch. 

2006-12-02  Lars Clausen  <lars@raeder.dk>

	* po/POTFILES.in: Add VDX and BPMN files.

	* lib/dialibartrenderer.c (fill_polygon): Make sure to use
	odd-even winding rule.  Fixes bug #378878.

	* app/interface.c (tool_data): Add note about Space toggling tools.

	* samples/render-test.dia: Updated font geometry part since font
	size has changed.  Also added polygon and beziergon with holes.

	* lib/diasvgrenderer.c: Specify that font-size is in
	cm, which according to
	http://www.w3.org/TR/SVG/text.html#FontSizeProperty specifies the
	baseline-to-baseline size of the font.  InkScape does not respect
	this, nor does gqview.  See bug #332826 for details.

	* lib/textline.c (text_line_cache_values): 
	* lib/font.c (get_layout_offsets): Fix (seemingly) remaining
	problems in the textline adjustment process.

	* lib/text.c: Fix a couple bugs, admit to using textline for text
	rendering, make sure height&font are set from attributes.
	
	* lib/text.h: 
	* lib/diarenderer.c: Admit to using textline for text rendering
	always. 

	* lib/diagdkrenderer.c (draw_text_line): Removed code for caching
	text rendering, it's not really needed with new textline based
	rendering being so fast after all.  Also remove debugging include
	of sys/time.h.

2006-12-01  Lars Clausen  <lars@raeder.dk>

	* plug-ins/pstricks/render_pstricks.c (set_linewidth): Specify
	unit of measure.  See bug #380302.

	* lib/font.c (get_layout_offsets): Remember the newly constructed
	runs SList.

	* lib/textline.c (text_line_cache_values): Don't take run->glyphs
	to be an array and crash.  Still some problems with text rendering.

2006-12-01  Steffen Macke <sdteffen@gmail.com>

	* lib/text.h: Added text_get_line() declaration
	* lib/text.c: 
	* lib/libdia.def: Added text_get_line_width, text_get_line, 
	text_get_descent,text_get_max_width
	* objects/UML/object.c: Fixed typo in objet_draw()
	* plug-ins/vdx/vdx-export.c: Use g_ascii_strncasecmp() instead of
	strcasecmp()
	
2006-11-30  Lars Clausen  <lars@raeder.dk>

	* app/diapsft2renderer.c (draw_text_line): 
	* lib/textline.[ch] (text_line_adjust_glyphs): 
	* lib/diagdkrenderer.c (draw_text_line): Adjusting widths no
	longer mallocs and frees, merely changes the existing object.

	* lib/text.c (text_draw): Remember to set_font, even though
	draw_text doesn't require it anymore.

2006-11-29  Lars Clausen  <lars@raeder.dk>

	* lib/diarenderer.c: Make default draw_text use its internal
	TextLine structures.

	* objects/UML/object.c: 
	* objects/UML/classicon.c: 
	* objects/UML/node.c: 
	* objects/GRAFCET/action.c: 
	* objects/GRAFCET/action_text_draw.c: 
	* app/modify_tool.c: Use functions to access text internals.
	There are more places that access the structure directly, which
	should be changed, but are not critical now.

	* lib/text.[ch]: Add variant (to become standard) that uses a
	TextLine for each line.  Also expose some information in a more
	encapsulated way.

	* lib/diagdkrenderer.c: Use default draw_text implementation.

2006-11-28  Lars Clausen  <lars@raeder.dk>

	* app/modify_tool.c (modify_make_text_edit): Call
	text_line_destroy rather than undefined text_line_free.

	* lib/libdia.def: Removed disappeared _scaled_ functions.

	* lib/arrows.[ch]: Moving inclusions towards .c, as too many
	includes in .h confuses MSVC.

	* lib/text.h: Start of using TextLine for Text lines.

2006-11-26  Lars Clausen  <lars@raeder.dk>

	* lib/text.[ch]: Encapsulated the arrays in Text to prepare for 
	switching to one array of TextLine.  Simplified operations a lot
	by using standard functions.

2006-11-25  Lars Clausen  <lars@raeder.dk>

	* lib/font.[ch]: Use text_line for the few remaining functions
	that used _scaled_ (non of them actually *were* scaled:), and get
	rid of all the _scaled_ stuff!  One less horror of a kludge!

	* app/diapsft2renderer.c (draw_string): Happy with using text_line
	for string output.

	* lib/diagdkrenderer.c: Make highlighted area match text area, and
	use text_line in get_text_width.  These should later be
	superfluous due to increased use of text_line at higher levels.

	* lib/dialibartrenderer.c: Implement text_line based rendering of
	text.  Works.  Also get_text_width uses a text_line.  Text
	bounding box is still a little off, but that will help once
	text_line is used in the text system.

	* lib/arrows.c (arrow_get_name_from_type): Function to get arrow
	names, and proper error messages when a loaded diagram has bad
	arrows.  Finally fixes bug #144394, thanks to both Pontus Pihlgren
	<pontus.pihlgren@farmbio.uu.se> and Vadim Zelenin
	<green@visoft.spb.ru> 

2006-11-24  Lars Clausen  <lars@raeder.dk>

	* samples/Metapost-Testcase.dia: A nice test case for MetaPost,
	including most basic rendering things.

	* lib/textline.[ch]: Little cache fix, and adding a function to
	get alignment widths for a TextLine.

	* lib/diagdkrenderer.c (draw_text_line): Make caching of renderer
	data for textline work, get rid of last use of _scaled_ stuff.
	
2006-11-23  Lars Clausen  <lars@raeder.dk>

	* lib/diagdkrenderer.c (draw_text_line): 
	* lib/textline.[ch]: Underlying implementation and first
	(currently commented out) attempt at use of textline renderer data
	cache.  Not debugged, but thennobody holds textline objects long
	enough to make a difference yet. 

2006-11-22  Lars Clausen  <lars@raeder.dk>

	* app/menus.c: Patch adding shortcuts for align functions, thanks
	be to jan@uos.de.

2006-11-18  Djihed Afifi  <djihed@gmail.com>
	
	* configure.in: Added Arabic Language (ar).

2006-11-16  Lars Clausen  <lars@raeder.dk>

	* lib/font.[ch] (get_layout_offsets): Start of function to adjust
	all offsets in a layout line.  Not used yet, and not debugged.
	Kept around for when we have more runs in a line.

	* lib/textline.c (text_line_adjust_layout_line): Adjusts the glyph
	sizes within a PangoLayoutLine to overcome the rounding problems
	and ensure linear scaling of fonts.  Currently only fixes the
	first run, since AFAIK that's all we can do with current text
	input anyway.

	* lib/diagdkrenderer.c (draw_text_line): Now uses
	text_line_adjust_layout_line to avoid repeating Pango digging for
	Freetype and GDK code both. Ready to merge freetype and GDK
	duplicate code.

2006-11-15  Lars Clausen  <lars@raeder.dk>

	* plug-ins/vdx/*: Update to version 0.6.1 yields improvements in
	both export and import.

2006-11-13  Lars Clausen  <lars@raeder.dk>

	* lib/font.c: Internally calculate glyph offsets at *20 font size
	to avoid rounding problems.

	* app/layer_dialog.c: Revamped the visibility toggling system to
	make visibility change a properly undoable operation, making the
	page borders resize in the process.

	* objects/standard/line.c (line_load, line_save): 
	* objects/standard/arc.c (arc_load, arc_save): 
	* objects/standard/polyline.c (polyline_load, polyline_save): 
	* objects/standard/bezier.c (bezierline_load, bezierline_save): 
	* objects/standard/zigzagline.c (zigzagline_load, zigzagline_save):
	Use generic load/save functions.

	* lib/libdia.def: 
	* lib/arrows.[ch]: Generic functions for loading and saving
	arrows, including sanitizing on load, part of fixing bug #144394.

	* objects/FS/flow-ortho.c (orthflow_draw): 
	* objects/FS/flow-poly.c (orthflow_draw): Update to use modern
	arrow rendering.

	* app/modify_tool.c (modify_start_text_edit) 
	(modify_make_text_edit): Don't use dia_font_scaled_* when
	avoidable. 

2006-10-29  Steffen Macke <sdteffen@gmail.com>

	* app/paginate_psprint.c: Made compile with MSVC again

2006-10-26  Lars Clausen  <lars@raeder.dk>

	* app/interface.[ch]: Patch from jan@uos.de: Write the accelerator
	keys in tooltips for standard tools.

	* app/paginate_psprint.c: Patch for better printing: Reasonable
	file name, check before overwriting, re-popup if file write
	failed.  Thanks to Leon Stringer <leon.stringer@ntlworld.com> for
	this patch.

2006-10-26  Hans Breuer  <hans@breuer.org>

	* plug-ins/shape/shape-export.c : the icon export facility dependens
	on the libart-size-hack; use filter_get_by_name("png-libart") instead
	of filter_guess_export_filter(). Fixes bug #364491.

2006-10-19  Ignacio Casal Quinteiro  <nacho.resa@gmail.com>

	* configure.in: Added 'gl' to ALL_LINGUAS

2006-10-16  Hans Breuer  <hans@breuer.org>

	* objects/UML/class.c : the comment wrapping was only working for
	plain ASCII, now it deals with UTF-8 (Vadim Zelenin, bug #349765)

2006-10-16  Theppitak Karoonboonyanan  <thep@linux.thai.net>

	* configure.in : Add 'th' (Thai) to ALL_LINGUAS.

2006-10-14  Hans Breuer  <hans@breuer.org>

	* plug-ins/vdx/vdx-import.c : don't try to print("%s", NULL). It is
	not generally supported and crashes on win32. Fixes bug #349883

	* lib/arrows.[hc] : draw hollow arrow heads with linewidth 0.0 
	correctly. Patch from Michael Duelli fixing bug #358176

	* objects/standard/arc.c : don't rely on the result of atan2(inf,inf),
	it is C-runtime dependent. Fixes infinitesimal burning of CPU cycles,
	bug #360013 and duplicates.

	* app/load_save.c : protect gstdio.h by GLIB_CHECK_VERSION
	and use the <glib/ form for installed version

2006-10-13  Hans Breuer  <hans@breuer.org>

	* objects/UML/(actor|large_package|node|note).c : use 
	element_update_connections_rectangle() instead of about 25 lines 
	of copy and pasted code

	* app/load_save.c : make it compile by defining W_OK if it is
	not there and also use '#if GLIB_CHECK_VERSION(2,8,0)' instead
	of '#ifdef GLIB_CHECK_VERSION(2,8,0)'. Strange that gcc 
	apparently compiled this

	* lib/parent.[ch] : parent_handle_move_in_check() was moving 
	the checked point about twice as much as needed, bug #342773.
	
2006-10-12  Lars Clausen  <lars@raeder.dk>

	* app/load_save.c (diagram_data_save): If we have GTK 2.8, check
	that we are allowed to write to the file in question (if it
	exists) and to the directory (for backup/temp/newly created file).

	* lib/dia_dirs.c (dia_get_lib_directory, dia_get_data_directory): 
	* lib/Makefile.am (AM_CPPFLAGS): 
	* app/Makefile.am (INCLUDES): Rename DATADIR and LIBDIR to
	DIA_DATADIR and DIA_LIBDIR to avoid conflicts with libtool and the
	like.  Thanks to lode leroy <lode_leroy@hotmail.com> for pointing
	out the solution.

	* plug-ins/pstricks/render_pstricks.c (export_pstricks) 
	(draw_string): Use \psscalebox instead of \scalebox, courtesy of
	Dan Bolser <dmb@mrc-dunn.cam.ac.uk> and the pstricks mailing list.

	* shapes/Makefile.am (SUBDIRS): 
	* configure.in: 
	* shapes/BPMN/*
	* sheets/BPMN.sheet.in: 
	* sheets/Makefile.am (sheet_in_files): New shape set BPMN for
	Business Process Modelling from anthonym@overture.com.

	* doc/en/dia.dbk: Correctly describing connections.

	* objects/standard/box.c: Patch from Michael Duelli
	<m.duelli@web.de>: Set line attributes before drawing anything.

2006-10-08  Lars Clausen  <lars@raeder.dk>

	* configure.in: Allow compiling without freetype on Unix systems.
	The effect of changes to non-freetype parts of the code can now be
	tested, and I have no excuse to not fix them anymore:(

2006-10-01  Lars Clausen  <lars@raeder.dk>

	* app/modify_tool.c (modify_motion): Don't use null-ness of
	connectionpoint to skip snap-to-grid for non-connectable handles.
	Fixes bug #350246.

	* shapes/flowchart/predefdproc.shape: Fixed midpoint.

2006-09-27  Steffen Macke <sdteffen@gmail.com>

	* shapes/flowchart/datasource.png:
	* shapes/flowchart/datasource.shape:
	* shapes/flowchart/Makefile.am: 
	* sheets/Flowchart.sheet.in:
	* installer/win32/dia.nsi: Added new "Data source" shape

2006-09-24  Hans Breuer  <hans@breuer.org>

	* lib/diagdkrenderer.c : I'm going to rip out all the Freetype
	code the next time the GDK only compile breaks
	
2006-09-23  Hans Breuer  <hans@breuer.org>

	* app/commands.c app/create_object.c app/disp_callbacks.c : add
	missing #include "lib/parent.h"

	* lib/makefile.msc : build textline.obj
	
	* objects/makefile.msc : don't build newgroup.obj
	* objects/misc/libmisc.c : with newgroup gone to app/ newgroup_type can 
	not be registered from the module any longer - at least not on win32

	* plug-ins/python/makefile.msc : removed obsolete references to 
	Python 1.5, also removed misleading link to Python 2.2 debug build

	* app/diagram.[ch] app/app_procs.c : don't use C++ keyword 'virtual' 
	as variable name: s/virtual/is_default/
	
	* plug-ins/python/*.c : don't mix PyObject_NEW() with PyMem_DEL()
	Newer versions of Python (2.5) are not tolerant about this anymore.
	
2006-09-11  Lars Clausen  <lars@raeder.dk>

	* lib/diasvgrenderer.c (draw_text_line): First stab at making svg
	text line renderer, doesn't work yet.

	* lib/textline.c (text_line_draw): Removed #define.

	* lib/diagdkrenderer.c (draw_text_line): Slight cleanups.

2006-09-11  Steffen Macke <sdteffen@gmail.com>

	* plug-ins/vdx/vdx-export.c:
	* plug-ins/vdx/vdx-import.c:
	* plug-ins/vdx/vdx-xml.c:
	* plug-ins/vdx/vdx.h:
	* plug-ins/vdx/visio-types.h: Update to version 0.5 (from 0.4) of
	Visio import, thanks to Ian Redfern, who states: 
	
	This is the first version to support export to VDX - for now, just 
	straight lines and text, but I'm working on the more complex bits. 
	It currently writes Visio 2002 VDX as a lowest common denominator, 
	but that won't handle Beziers, so when I get round to converting them 
	to NURBS, only Visio 2003 users will be able to import them.

	There are also several improvements to import, both to fix the layout 
	and clean up the code, and it can now import embedded bitmaps - as Dia
	needs them to be separate files, it puts them in /tmp (or wherever 
	tempnam() goes to on your system). Alternative suggestions are welcome. 
	NURBS import still doesn't work, but everything else seems pretty 
	reliable.
	
	In addition, two small adjustments to compile on Windows

2006-09-08  Steffen Macke <sdteffen@gmail.com>

	* app/makefile.msc:
	* app/Makefile.am:
	* app/dia-win-remote.c:
	* installer/win32/dia.nsi: From Windows Explorer, open .dia files in the 
	running Dia instance (if possible). Fixes bug #70718

2006-09-05  Lars Clausen  <lars@raeder.dk>

	* lib/diatypes.h: 
	* lib/Makefile.am (libdia_la_SOURCES): 
	* lib/diarenderer.[ch]: 
	* lib/font.[ch]: 
	* lib/diagdkrenderer.c: 
	* lib/textline.[ch]: TextLine now ready for commit.  Rendering
	with it is much faster and significantly more precise than
	without.  All renderers should implement a good definitions for
	this (though there is a default one that uses draw_string), as it
	can tell the expected width of a string.
	
	* lib/libdia.def: Newly defined functions.	

2006-08-29  Lars Clausen  <lars@raeder.dk>

	* lib/textline.[ch]: New text rendering level: A self-contained
	single-line text object that allows safer caching and hopefully
	more accurate rendering at various zooms.  Using a PangoMatrix
	didn't seem to help. 

	* lib/font.c: Removing out-deffed layout cache code, it'll never
	work.  Also a couple support functions for my quest of good zoom.

2006-08-20  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo.c : get rid of c++ coment
	* app/diagram.h app/diagram.c app/modify_tool.c app/select.c 
	  app/undo.c : reverted 'Shortened diagram_unselect'. It broke
	plug-ins/python, but more important made one function from
	app/diagram.h asymmetric with all the others. We should not leave
	the common C OO-pattern of passing an explicit "this pointer" just
	because that can also be deduced from the other object.

2006-08-18  Lars Clausen  <lars@raeder.dk>

	* lib/render.[ch]: Finally removed unused render files now known
	as diarenderer.[ch].

2006-08-17  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia-diagram.ico:
	* installer/win32/dia.nsi: Assign icon to *.dia files

2006-08-16  Lars Clausen  <lars@raeder.dk>

	* app/diagram.c (diagram_load): 
	* lib/object.c (dia_object_is_selectable): Two silly null-pointer
	errors detected by Michael Duelli <m.duelli@web.de>

2006-08-16  Steffen Macke <sdteffen@gmail.com>

	* app/modify_tool.c:
	* app/undo.c: Include parent.h
	* lib/libdia.def: Include dia_object_is_selectable()

2006-08-13  Lars Clausen  <lars@raeder.dk>

	* objects/Misc/libmisc.c:
	* {app,objects/Misc}/Makefile.am:
	* objects/Misc/newgroup.c:
	* app/newgroup.c: Moved newgroup.
	
	* app/diagram.[ch]:
	* app/undo.c: 
	* app/modify_tool.c: 
	* app/select.c: Trim diagram_unselect_object() to the one required
	argument. 

	* app/app_procs.c:
	* app/interface.c (dia_dnd_file_drag_data_received): 
	* app/recent_files.c (open_recent_file_callback): 
	* app/filedlg.c (file_open_response_callback): 
	* app/diagram.c (diagram_load): 
	Make the diagram created at start-up be a virtual diagram that
	if unchanged is filled in by the first opened diagram, like Gnumeric.

2006-08-11  Lars Clausen  <lars@raeder.dk>

	* app/properties.c (properties_give_focus): Give focus to first
	thing in a properties dialog.  Still need our own compound widgets
	to get focus right.

2006-08-06  Lars Clausen  <lars@raeder.dk>

	* objects/Misc/newgroup.c: 
	* lib/diagramdata.c: 
	* app/diagram.[ch]: 
	* app/select.c: 
	* app/modify_tool.c: 
	* lib/object.[ch]: Work towards a more reasonable definition of
	Groups. 
	
2006-08-06  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Save diagrams by default in "My Pictures";
	fixes bug #344247

2006-08-04  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: Added vdx.dll, analog_clock.xpm 
	newgroup.xpm , *ui.xml files

2006-08-03  Lars Clausen  <lars@raeder.dk>

	* sheets/Makefile.am: EML sheet taken out since it's been empty
	for five years anyway.  Fixes bug #347894.

	* doc/eu/dia.dbk: 
	* doc/en/dia.dbk: 
	* doc/en/usage-layers.xml: Fixed obsolete references to
	export-to-format.  Fixes bug #346510.

2006-08-02  Lars Clausen  <lars@raeder.dk>

	* plug-ins/vdx/visio-types.h: 
	* plug-ins/vdx/vdx.h: 
	* plug-ins/vdx/vdx-xml.c: 
	* plug-ins/vdx/vdx-import.c: 
	* plug-ins/vdx/vdx-common.c: Update to version 0.4 (from 0.2) of
	Visio import, thanks to Ian Redfern, who states: 

	Version 0.4 does a passable job with curves, and has the first
	implementation of Masters. It also handles XForm1D, and fixes a
	potential crash. It gets some layers in the wrong order and still
	has some major positioning and sizing issues. 

        Version 0.3 gets object layout correct, and does a better job of
	text, lines, arrows, layers etc. Some diagrams (that don't contain
	curves) now render pretty much correctly. 

2006-07-16  Hans Breuer  <hans@breuer.org>

	* app/cut_n_paste.[hc] : maintain a generation counter to count
	how many times the stored object list is used
	* app/commands.c : use the generation for paste placement. The
	first one after cut is not moved at all: a nice way to move objects
	between layers without changing their lateral position.
	Also sprinkled some diagram_update_extents()
	
	* shapes/Civil/civil_rotor.shape : had inverted fg/bg colors, bug #347080
	
	* app/recent_files.c : don't g_return_if_fail() on common use case,
	here an empty recent file list
	
	* lib/dia_image.c(dia_image_draw) : don't try to draw anything if
	width or height is smaller than 1 pixel
	
	* plug-ins/cairo/diacairo.c : allow to export to svg if available 
	with cairo. Some tweaking of surface sizes.
	
2006-07-12  Lars Clausen  <lars@raeder.dk>

	* {tests,test/exports,data,plug-ins/vdx}/.cvsignore: Added.

2006-06-28  Lars Clausen  <lars@raeder.dk>

	* plug-ins/vdx/vdx-import.c: Removed create_standard_group which
	is in create.c.

2006-06-25  Hans Breuer  <hans@breuer.org>

	* app/display.c : avoid to call gettext on parameters for ngettext()
	Should finally really fix bug #344896
	
	* data/ui/display-ui.xml data/ui/popup-ui.xml data/ui/toolbox-ui.xml :
	removed expand="yes" because otherwise the files can't be read with
	gtk+-2.6.x which follows Dia can't start. Fixes bug #344895
	* app/menus.c app/Makefile.am : also find the ui files when run from
	app/run_dia.sh

2006-06-17  Gintautas Miliauskas  <gintas@akl.lt>

	* configure.in: Added lt to ALL_LINGUAS.

2006-06-15  Hans Breuer  <hans@breuer.org>

	* app/display.c : use ngettext() for possible plural variations.
	(Bug #344896, tokul@users.sourceforge.net)

	* objects/UML/class.c : use g_list_append() rather than prepend
	when copying attributes, operations, formalparams. Fixes bug #342902
	Also removed some superfluous outcommented code and fixed a warning.

	* objects/UML/class.c : dont break reading comment_line_length
	by misguide compatibility code. Fixes bug #341887

	* plug-ins/vdx/vdx-xml.c : added file missing from 0.3 
	version commit. Fixes bug #344804
	
	* lib/create.h : add create_standard_group() prototype
	* lib/libdia.def lib/makefile.msc objects/makefile.msc 
	  plug-ins/makefile.msc : added missing (files|exports)

2006-06-13  Lars Clausen  <lars@raeder.dk>

	* plug-ins/vdx/*: Version 0.3 of Visio import filters, thanks
	again to Ian Redfern.

2006-06-12  Elijah Newren  <newren gmail com>

	* autogen.sh: Run configure by default, allow it to be skipped if
	NOCONFIGURE is set in the environment.  #344574.

2006-06-12  Elijah Newren  <newren gmail com>

	Pair of build fixes.  #344357

	* Makefile.am: avoid cp errors when $(srcdir) == .

	* objects/Misc/newgroup.c: include pixmaps/newgroup.xpm instead of
	pixmaps/group.xpm as the latter doesn't exist.

2006-06-12  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/codegen.py : applied patch from Thomas D Ahle
	which adds support for Java and inheritance. Closes bug #344187
	
2006-05-28  Lars Clausen  <lars@raeder.dk>

	* sheets/Misc.sheet.in: 
	* objects/Misc/Makefile.am (EXTRA_DIST): 
	* objects/Misc/pixmaps/newgroup.xpm: 
	* objects/Misc/newgroup.c: 
	* objects/Misc/libmisc.c: Start of new group model, with "visible"
	object to test with.  This object will later become the default
	group object and thus (mostly) invisible.

	* lib/parent.c (parent_handle_move_in_check): 
	* app/create_object.c (create_object_button_press): 
	* app/diagram.c (diagram_unparent_children_selected): 
	* app/disp_callbacks.c (ddisplay_drop_object): 
	* app/load_save.c (write_objects): 
	* objects/network/radiocell.c (radiocell_create): 
	* objects/AADL/aadlbox.c (aadlbox_create): 
	* objects/UML/large_package.c (largepackage_create): 
	* objects/UML/component.c (component_create): 
	* lib/object.[ch]: DiaObject API change: DiaObject now has gint
	flags rather than gboolean can_parent, and utility function
	object_flags_set.  Uses of can_parent changed to call to function.

	* doc/en/dia.dbk: Removal of obsolete epsi references.

2006-05-27  Hans Breuer  <hans@breuer.org>

	* app/menus.c : listen to Gtk-WARNING **: Unable to parse accelerator 
	'<control>+': it wants '<control>plus', same for minus.

	* tests/exports/cgm/* : cvs admin -kb *.cgm
	  tests/exports/png/* tests/exports/png-libart/* 
	  tests/exports/shape/* : cvs admin -kb *.png
	  tests/exports/wpg/* : cvs admin -kb *.wpg
	mark binary files as such to not get them broken on platforms which
	insist on replacing line-ends.

	* app/app_procs.c app/display.c app/filedlg.c app/interface.c
	  app/load_save.c app/sheets.c lib/dia_image.c lib/message.c
	  plug-ins/python/diamodule.c plug-ins/python/pydia-error.c
	  plug-ins/wmf/wmf.cpp : fixed format string vulnerability on HEAD
	as well. Patch from Hans de Goede, bug #342111

2006-05-27  Rob Staudinger <robert.staudinger@gmail.com>

	* Makefile.am: 
	* app/Makefile.am:
	* app/diagram.c: 
	* lib/Makefile.am:
	* objects/standard/Makefile.am:
	* plug-ins/python/Makefile.am:
	Fix out of tree build (#340115).	

2006-05-25  Hans Breuer  <hans@breuer.org>

	* app/interface.[hc] app/menus.c : rename ToolButton::menu_item
	to action_name. Don't mark action names for translation. It is not
	needed and some languages don't support CamelCase. Fixes bug #342895
	
	* app/menus.c : re-added a bunch of accelerators lost in translation
	to the GtkAction framework. Use GTK_STOCK_FULLSCREEN conditionally
	it was not available with gtk+-2-6-x.
	Use dia_get_data_directory() instead of hardcoded UIDATADIR.
	* app/dia_embedd.c : explain instead of out-comment
	
	* app/menu.c lib/autoroute.c lib/color.c lib/diagramdata.c 
	  lib/properties.h dia_xml.c : warningectomy
	  
	* lib/create.h : create_standard_group()
	* lib/libdia.def lib/makefile.msc : reflect moved stuff
	
2006-05-25  Lars Clausen  <lars@raeder.dk>

	* tests/exports/*.dia: A set of test diagrams for export
	plug-ins.  The intention is to use these for regression tests by
	ensuring that they don't change when code is altered, or if they
	change that a manual inspection proves them ok.  The fact that an
	export plug-in passes these tests doesn't mean it's perfect, just
	that is hasn't degraded.
	
	* plug-ins/xfig/xfig-import.c: 
	* plug-ins/vdx/vdx-import.c: 
	* lib/create.[ch]: Functions taken from xfig to create some
	standard objects easily.  Uses of them updated, no longer need to
	take DiagramData.

	* plug-ins/vdx/*: First draft of VDX (Visio XML) plug-in from Ian
	Redfern <Ian Redfern <Ian.Redfern@LogicaCMG.com>.  Also a bunch of
	samples for the purpose from the vdxtosvg project.

2006-05-21  Hans Breuer  <hans@breuer.org>

	* app/interface.[hc] app/disp_callbacks.c : removed unused
	global variable popup_shell
	
	* app/pagesetup.c app/diapagelayout.c : restrict every page margin
	to a little less than half of the page. This guarantees margins
	leaving some useable page area and thus avoids crashing on negative
	page sizes. Fixes bug #339562 (also applied to dia-0-95 branch)
	
2006-05-20  Hans Breuer  <hans@breuer.org>

	Patch from Robert Staudinger to base dia menus on GtkAction framework
	instead on deprecated GtkItemFactory. Tracked in bug #340352. 
	En passant fixes bug #171397
	* configure.in : placementof ui files added data/Makefile to AC_OUTPUT
	* Makefile.am : added data dir
	* app/Makefile.am : added $(uidatadir)
	* app/commands.c app/commands.h app/dia_embedd.c app/diagram.c
	  app/diagram_tree_window.c app/diagram_tree_window.h
	  app/disp_callbacks.c app/display.c app/display.h
	  app/interface.c app/menus.c app/menus.h app/recent_files.c :
	changed a bunch of callback signatures to take GtkAction
	* app/pixmaps/Makefile.am 
	* data/Makefile.am data/display-ui.xml data/toolbox-ui.xml
	  data/popup-ui.xml : new files containing the menu structure
	* lib/filter.c lib/filter.h lib/plug-ins.h : callback filter
	  registration change to be more appropriate for actions
	* lib/libdia.def : updated externals
	* plug-ins/python/debug_objects.py plug-ins/python/diamodule.c
	  plug-ins/python/group_props.py plug-ins/python/gtkcons.py 
	  plug-ins/python/otypes.py plug-ins/python/pydiadoc.py 
	  plug-ins/python/scascale.py plug-ins/python/select_by.py :
	adapted to API change dia.register_callback to dia.register.action

	* app/authors.h : added Robert to the authors
	* app/commands.c : got rid of compiler warnings

2006-05-14  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/python.c : protect the plug-in against 
	initializing if Python already is initialized. This PyDia extensions
	is designed for embedding Python.
	
	* plug-ins/python/pydia-property.c : LineStyle.dash may be either
	Float or Integer.
	
	* plug-ins/python/diasvg_import.py : remove FontSize debug spew
	
	* lib/font.c : GDK_WINDOWING_WIN32: if called with a display already
	setup use the pango context matching the display. Otherwise fallback
	to a context from PangoWin32 (matches only for gtk+-2-6, not the one
	used since gtk+-2-8 using cairo.
	
2006-05-13  Hans Breuer  <hans@breuer.org>

	[ also applied to branch dia-0-95 ]
	* objects/UML/umloperationc: add "query" to umloperation_offsets.
	Patch from Peter Allin, fixes bug #338336

	[ also applied to branch dia-0-95 ]
	* app/diagram.c(diagram_ungroup_selected) : operate on a copy
	of data-Selected cause the original is modified during use.
	Patch from Victor Stinner, fixes bug #334771

	* configure.in config.h.win32 : development started again so 095+cvs.
	Critical bugfixes may go on the dia-0-95 branch (may lead to 0.95.1 
	if necessary)
	
	* app/diagram.c : removed long-time outcommented code
	
	* lib/diagramdata.h lib/filter.h lib/geometry.h lib/plug-ins.h
	  lib/properties.h : C++ aware by G_BEGIN_DECLS, G_END_DECLS
	
	* objects/UML/class.c : don't dia_assert_true(attr->comment != NULL)
	it is handled everywhere else just fine.
	
2006-04-19  Lars Clausen  <lars@raeder.dk>

	* installer/win32/dia.nsi: 
	* doc/en/dia.xml: 
	* doc/eu/dia.xml: 
	* doc/pl/dia.xml: 
	* config.h.win32: 
	* configure.in: 
	* NEWS: Release 0.95

	* shapes/Gane_and_Sarson/process.shape: Connectionpoint update
	from Nick Moore <shiny.nickel@gmail.com>.

2006-04-17  Kjartan Maraas  <kmaraas@gnome.org>

	* configure.in: Remove obsolete entry for no_NO
	* po/no.po: And the translation.

2006-04-12  Lars Clausen  <lars@raeder.dk>

	* installer/win32/dia.nsi: 
	* doc/en/dia.xml: 
	* doc/eu/dia.xml: 
	* doc/pl/dia.xml: 
	* config.h.win32: 
	* configure.in: 
	* NEWS: -pre9

	* configure.in: Check for xgettext.  Apparently
	AM_GLIB_GNU_GETTEXT notices it's missing but doesn't abort.

2006-04-04  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi:
	* installer/win32/langmacros.nsh:
	* installer/win32/locale/*.nsh: Added check for outdated libgtk dll;
	closes bug #335477

2006-04-03  Lars Clausen  <lars@raeder.dk>

	* installer/win32/dia.nsi: 
	* doc/en/dia.xml: 
	* doc/eu/dia.xml: 
	* doc/pl/dia.xml: 
	* config.h.win32: 
	* configure.in: 
	* NEWS: -pre8

	* plug-ins/xfig/xfig-import.c: Initially place text in the right
	place. 

2006-04-03  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi:
	* installer/win32/locale/french.nsh: Added french installer
	locale. Patch from Yannick Le Ny <y.le.ny@ifrance.com>

2006-04-02  Hans Breuer  <hans@breuer.org>

	* doc/pl/dia.xml : "DOCTYPE book" closes bug #142098, Roland Stigge

2006-03-29  Daniel Drake  <dsd@gentoo.org>

	* configure.in: Use standard pkg-config expressions to check for
	GTK+/Glib, the GTK-supplied macro's conflict with our usage of
	$GTK_MODULES (#335422)

2006-03-28  Lars Clausen  <lars@raeder.dk>

	* app/Makefile.am (dia_LDADD): Patch from Peter for bug #336377:
	Include libs and cflags in proper places.

	* installer/win32/dia.nsi: 
	* doc/en/dia.xml: 
	* doc/eu/dia.xml: 
	* doc/pl/dia.xml: 
	* config.h.win32: 
	* configure.in: 
	* NEWS: -pre7

	* shapes/network/mobile_phone.{png,xpm,shape}:
	* shapes/network/telephone.shape:
	* shapes/network/disc.shape:
	Updates from W. Borgert <debacle@debian.org> improving looks and
	positioning.
	
2006-03-26  Lars Clausen  <lars@raeder.dk>

	* objects/network/radiocell.c: Patch from W. Borgert
	<debacle@debian.org> for extra midpoint, flicker, extraneous
	properties.
	
	* objects/network/basestation.c: Patch for BB from W. Borgert
	<debacle@debian.org>. 

2006-03-23  Hans Breuer  <hans@breuer.org>

	* lib/widgets.c : use original fontname and fallback 'sans' to
	render the font menu. Thus crashing (in Pango) is delayed until
	the point where one chooses a font, which can't be rendered by
	Pango. Fixes bug #335096 as far as Dia can.
	
2006-03-21  Lars Clausen  <lars@raeder.dk>

	* installer/win32/dia.nsi: 
	* doc/en/dia.xml: 
	* doc/eu/dia.xml: 
	* doc/pl/dia.xml: 
	* config.h.win32: 
	* configure.in: 
	* NEWS: -pre6

	* plug-ins/xfig/xfig-import.c: Last missing stack underflow check.

2006-03-19  Hans Breuer  <hans@breuer.org>

	* app/display.c app/preferences.c : unset transient, still issues
	with transient handling, see bug #332828
	
	* app/makefile.msc lib/makefile.msc objects/makefile.msc
	  plug-ins/makefile.msc : removed stuff supposed to be used from
	$(TOP)/glib/build/win32/make.msc
	
	* plug-ins/xfig/xfig-import.c : make it compile with strict type 
	checking [these were real errors, freeing stack passed values instead
	of the intended local variable] :
	xfig-import.c(580) : error C4047: 'function' : 'struct _GArray *' 
	 differs in levels of indirection from 'struct _Point ** '
	xfig-import.c(580) : warning C4024: 'g_array_free' : different types 
	 for formal and actual parameter 1

	* lib/libdia.def : export connection_adjust_for_autogap 
	
	* plug-ins/hpgl/hpgl.c : there is one floating point value in the 
	whole HPGL output - and it was locale dependent.

2006-03-12  Lars Clausen  <lars@raeder.dk>

	* installer/win32/dia.nsi: 
	* doc/en/dia.xml: 
	* doc/eu/dia.xml: 
	* doc/pl/dia.xml: 
	* config.h.win32: 
	* configure.in: 
	* NEWS: -pre5

	* objects/UML/constraint.c (constraint_update_data): 
	* objects/UML/message.c (message_update_data): 
	* objects/UML/implements.c (implements_update_data): 
	* objects/SADT/annotation.c (annotation_update_data): 
	* objects/Jackson/phenomenon.c (message_update_data): 
	* objects/network/wanlink.c (wanlink_update_data): 
	* objects/FS/flow.c (flow_update_data): Added autogap adjustment.

	* objects/standard/line.c: 
	* lib/connection.[ch] (connection_adjust_for_autogap): Moved autogap
	functionality for connections.

2006-03-11  Lars Clausen  <lars@raeder.dk>

	* lib/diagdkrenderer.c (draw_object): 
	* lib/dialibartrenderer.c (draw_object): Don't draw highlighting
	in the non-interactive rendering.

	* dia.spec:
	* installer/rpm/dia.spec:
	* installer/rpm/README:
	Moving dia.spec to installer directory, where distribution
	maintainers can keep their own copies.

	* objects/UML/uml.h: 
	* objects/UML/class.h: 
	* objects/UML/umloperation.c: 
	* objects/UML/class.c: 
	Preparations to fix bug #334037: Clean away the Lisp-like
	constructs confusing the issue.

2006-03-10  Lars Clausen  <lars@raeder.dk>

	* lib/object.c: Don't compare floats with ==, even in sanity checks.

2006-03-09  Lars Clausen  <lars@raeder.dk>

	* plug-ins/xfig/xfig-import.c: Fix three buffer overflows in color
	reading, depth reading, and points reading.  Thanks to 
	
	* COPYING: Added copyright info again.

2006-03-09  Steffen Macke <sdteffen@gmail.com>

	* installer/win32/dia.nsi: don't uninstall old version; overwrite
	existing files

2006-03-08  Steffen Macke <sdteffen@gmail.com>

	* installer/Makefile.am:
	* installer/win32/Makefile.am:
	* installer/win32/locale/Makefile.am: Making sure that the installer
	sources are included in the dia source distribution
	* installer/win32/dia.nsi: Don't include makefiles in installer;
	Add uninstaller link to start menu (bug #332650); added commandline 
	option GTKBIN to specify GTK installation directory (fixes bug #332595)
	* installer/win32/dia-diagram.ico:
	* installer/win32/dia-header.bmp:
	* installer/win32/dia-install.ico:
	* installer/win32/dia-intro.bmp:
	* installer/win32/dia-uninstall.ico:
	* installer/win32/dia.nsi:
	* installer/win32/langmacros.nsh:
	* installer/win32/locale/english.nsh:
	* installer/win32/locale/german.nsh: Added files to build the win32
	installer using NSIS (http://nsis.sourceforge.net)
	
2006-03-06  Lars Clausen  <larsrc@raeder.dk>

	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* config.h.win32: 
	* configure.in: 
	* NEWS: -pre4

	* samples/TexChars.dia: Added sample of the escaped chars for TeX.
	
	* plug-ins/pstricks/render_pstricks.c (tex_escape_string):
	Changing escape of \, [, and ] to something that works.  $ is
	fine.  Fixes parts of 333193.

2006-03-05  Lars Clausen  <larsrc@raeder.dk>

	* plug-ins/xfig/xfig-import.c: Fixed locale issues with FIG import.

	* lib/orth_conn.c (orthconn_update_data): 
	* app/diagram.c: Removing debug info.

	* app/object_ops.c (object_find_connectpoint_display): Don't
	magnet to parents.

2006-02-26  Hans Breuer  <hans@breuer.org>

	* app/Makefile.am : define DIA_PYTHON_PATH in app/run_dia.sh
	* plug-ins/python/python.c : if set use it to find python-startup.py
	(bug #332599, Torben H. Nielsen)

	* app/app_procs.c : removed // from gtk_init() [shouldn't have commited
	my test code]. Really closes #332177, thanks Mateus César Gröess.

2006-02-26  Lars Clausen  <lars@raeder.dk>

	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* config.h.win32: 
	* configure.in: 
	* NEWS: -pre3

	* lib/element.h (ELEMENT_COMMON_PROPERTIES): Turning off setting
	of element_width and element_height until constraints can be 
	properly checked.  Bug #328200

	* dia.spec (Requires): Updated GTK requirements.

2006-02-25  Lars Clausen  <lars@raeder.dk>

	* lib/diaarrowchooser.c (dia_arrow_chooser_new): Also making sure
	other dynamic menus have proper translation.

	* lib/widgets.c (dia_dynamic_menu_create_string_item): 
	* app/interface.c (cmp_names): 
	* app/sheets.c (sheets_optionmenu_create): 
	* lib/sheet.c (load_register_sheet): Using C locale for sheet
	names internally, translating on display instead.  Also sorting
	by gettext order explicitly.  Bug #328570.

2006-02-25  Hans Breuer  <hans@breuer.org>

	* app/interface.c(get_sheet_by_name) : be more tolerant about 
	localization of the sheet name. ( Steffen Macke, #332070 )
	
	* app/app_procs.c(app_init) : if GDK_WINDOWING_WIN32 call gtk_init()
	in any case. In contrast to X11/*nix displays are not optional on
	windoze. And we need some help of gtk to render text to bitmaps.
	( Rob McDonald, bug #332177 )
	
2006-02-21  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* doc/pl/dia.xml: 
	* doc/en/dia.xml: 
	* configure.in: 
	* config.h.win32: Update to -pre2.

	* lib/beziershape.c (add_handles): Fixing CP pos calculation for
	adding new CP's.  Fixes bug #331557.

2006-02-20  Lars Clausen  <lars@raeder.dk>

	* lib/diarenderer.c (find_center_point): Better handling of some
	degenerate cases.
	(draw_arc_with_arrows): Draw line in all cases.  Doesn't handle
	the truly degenerate cases well enough yet, but at least doesn't
	break on common cases.  Probably need to do something special for
	arcs with start and end point the same.  Improves but does not
	entirely fix bug #331372.

2006-02-20  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/Makefile.am : dot.py was missing from EXTRA_DIST
	
2006-02-18  Hans Breuer  <hans@breuer.org>

	* plug-ins/metapost/render_metapost.c : text position gives the
	baseline neither top nor bottom. ( Rob McDonald, #331491 )

	* plug-ins/wmf/wmf.cpp : finally respecting the print margins
	( Rob McDonald, #331371 )
	* plug-ins/wmf/wmf_gdi.h : some more constants not useful 
	without a GDI printer (driver)
	
2006-02-17  Hans Breuer  <hans@breuer.org>

	* plug-ins/metapost/render_metapost.c(draw_string) : dont query
	the font for it's height but use the 'height' parameter passed
	in. Close enough to the desired size - and independent of zoom -
	to close bug #331489 (Rob McDonald)
	
2006-02-12  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* dia.spec: 
	* doc/pl/dia.xml: 
	* doc/en/dia.xml: 
	* configure.in: 
	* config.h.win32: Updates for version 0.95-pre1.

2006-02-12  Hans Breuer  <hans@breuer.org>

	* app/makefile.msc : build three components dia.exe (console
	application), diaw.exe (windows application) and dia-app.dll
	containing almost all of Dia's application shared between
	the two executables
	* app/main.c app/winmain.c app/app_procs.c app/dia.def : some 
	refactoring to accomplish the new dependency layout
	* objects/makefile.msc plug-ins/python/makefile.msc : need to
	link dia-app.lib now - if at all depending on app/*
	
2006-02-11  Hans Breuer  <hans@breuer.org>

	* makefile.msc : nmake -f makefile.msc just compiles now
	* app/makefile.msc lib/makefile.msc : make not using FT2
	on win32 the default (works around bug #150813 by diabaling it)
	* objects/makefile.msc plug-ins/makefile.msc : remove -GD from
	$(CC) command line. It isn't understood by newer versions of cl.
	
	* app/authors.h : reflect the recent maintainers change
	
	* app/display.c app/load_save.c : removed debug spew
	
	* app/winmain.c : improved redirection
	
2006-02-05  Hans Breuer  <hans@breuer.org>

	* app/menus.[ch] app/diagram.c : the GNOME specific menu code is dead 
	since 0.94. Fix somne left-overs, also properly disable the duplicate
	menu entry

	* po/POTFILES.in : added objects/network/wanlink.c

2006-02-05  Hans Breuer  <hans@breuer.org>

	* lib/dialibartrenderer.c(renderer_finalize) : dont unref 
	parent_instance.font here. It will be done in DiaRenderer::finalize()
	Just another reason for crashing at diagram close with libart 
	renderer involved ...
	
2006-02-04  Hans Breuer  <hans@breuer.org>

	* objects/standard/image.c : added mainpoint, patch from
	Torben H. Nielsen fixing bug #329603

	* app/layer_widget.c : avoid writing to Layer::connectable for a
	diagram possibly already gone. Fixes bug #329096.

	* lib/persitence.c(persistence_load) : dont leak filename
	in case of not existing file

	Code review via regex "[^_l>p](malloc|free|realloc)\("
	* objects/fs/function.c : what's g_strdup() must be g_free()'d
	* plug-ins/dxf/dxf-import.c : use g_realloc()/g_free()
	* plug-ins/xfig/xfig-import.c : use g_free() instead of plain free()

	* app/filedlg.c(file_save_as_response_callback) : before destroying 
	the save as dialog we need to drop the dialogs diagram reference.
	Fixes behaviour described in bug #123225#c7

	* app/interface.c(get_sheet_names) : need to sort sheets by their 
	display name to really fix bug #160101.
	
	* objects/UML/association.c : dont leak the role_name calculated
	with visibility attribute, use g_strdup_printf() instead of strcat().
	
	* configure.in : fix typo in error message

	* lib/object.c : remove duplicated prototype
	* lib/element.c : element_update_connections_rectangle() assumes nine
	connection points, i.e. requires 'mainpoint'. g_assert() for this.
	
2006-02-03  Hans Breuer  <hans@breuer.org>

	* objects/network/bus.c : allow to tint it. Patch from
	Torben H. Nielsen, closes bug #328580.
	* objects/network/wanlink.c : allow to tint this as well.
	
2006-01-29  Hans Breuer  <hans@breuer.org>

	* app/render_libart.c(draw_line) : make setting the pixel side-effect
	free; account for it in now (less) magic increments. Fixes bug #312147

2006-01-28  Hans Breuer  <hans@breuer.org>

	* po/checktrans.py : make it work with recent pyxml (unknown url type)
	* po/AADL.sheet.in : remove duplicated _description
	=> translation report works again

	* app/display.c : revert back to "_Discard Changes" to avoid
	accelerator clash. Also gtk_button_new_with_mnemonic() to
	'expand' the accelerator.

	* lib/dia_svg.c(dia_svg_style_init) : need to initialize
	linecap, linejoin, linestyle to avoid invalid settings.
	(Nguyen Thai Ngoc Duy, bug #328945)
	* lib/diagdkrenderer.c : add a place fro breakpoint to 
	detect invalid mode

	* lib/diarenderer.c(setfont) : if we get passed in the
	same font it must be ref'd before unref.

	* lib/text.c(set_string) : don't eat the trailing new-line
	Fixes bug #165092
	
	* app/app_procs.c app/display.c app/filedlg.c 
	attempt to provide more HIG compliant dialogs. Patch from
	Nguyen Thai Ngoc Duy, part of bug #138183
	
	* app/recent_files.c(recent_file_history_clear_menu) : instead of 
	messing with GtkMenuShell::children and gtk_widget_destroy() just 
	use gtk_container_remove. Avoids memory corruption causing the
	most 'random' crashes recently.
	
	* objects/UML/message.c : can't use PROP_STD_TEXT_COLOUR_OPTIONAL 
	cause it has PROP_FLAG_DONT_SAVE. It is designed to fill the 
	TextAttributes - not some subset. Fixes bug #327701
	* objects/UML/implements.c objects/UML/generalization.c
	  objects/UML/constraint.c objects/UML/object.c
	  objects/UML/large_package.c objects/UML/realizes.c : same here.
	* objects/UML/dependency.c : same here. Also draw the "Name" with the
	given color, not only the Stereotype.
	* objects/UML/class.c : same here. But we also need to restore 
	explicit restore "text_color" for the load case.
	
2006-01-27  Hans Breuer  <hans@breuer.org>

	* configure.in : error out if GLib/GTK+ version is lower than required

	* app/filedlg.c lib/widgets.c : more default responses. Patch 
	from Nguyen Thai Ngoc Duy, part of bug #138183
	
	* NEWS : Main point feature correction. The line is supposed to
	start at the border of the object not the bounding box.
	
	* app/commands.c : respect difference between documenters and
	translators and show both in about dialog. Closes bug #328711.
	
	* app/interface.c : instead of g_warning for missing shape icon
	but use message_warning and show the 'missing' icon
	
	* lib/dialibartrenderer.c : with Gtk+ 2.8 gdk_draw_layout() does
	not match pango_win32_get_context(). Use gdk_pango_get_context ().
	Also removed my special win32-modified-pango code for draw_string()
	without the help of gdk.

	* Makefile.am : include MAINTAINERS file in tarball

	* lib/conectionpoint.h : removed double include of "geometry.h"
	
2006-01-22  Hans Breuer  <hans@breuer.org>

	* app/splash.c app/commands.c : dont share the logo and finally leak
	it. Instead both place load and unref the logo themself. 
	Also unbreak GNOME case.

	* app/commands.c : use GtkAboutDialog instead of homegrown GTK+
	or GNOME specific one. 120 lines less code and more standard.
	* configure.in : require GTK+ >= 2.6

	* app/diapagelayout.c app/diaunitspinner.c app/layer_dialog.c :
	make GtkTypeInfo static const as usual elsewhere
	
	* app/recent_files.c : it almost certainly is an error to ignore
	the return value of g_list_remove_link()
	
	* lib/arrows.c lib/bezier_conn.[ch] lib/beziershape.h
	  lib/boundingbox.[ch] lib/color.[ch] lib/connectionpoint.c
	  lib/create.h lib/dia_svg.c lib/dia_xml.c lib/diaarrowchooser.c
	  lib/diagramdata.[ch] objects/UML/activity.c objects/UML/class.[ch]
	  objects/UML/uml.h : documentation fixes
	
	* lib/object.h lib/diagramdata.h : avoid circular inclusion
	* lib/connectionpoint.h lib/focus.h lib/group.h lib/handle.h
	  lib/properties.h lib/sheet.h lib/diamenu.h
	: dont include "object.h", "diatypes.h" is enough. 
	Rule of thumb: only headers declaring an inheritant of DiaObject
	should include "object.h"
	* lib/diarenderer.h : include "font.h" not strictly needed by 
	this header, but needed in almost any plug-in/
	* app/diagram_tree_menu.c app/dialogs.[hc] app/display.c
	  app/export_png.c app/interface.c app/load_save.c app/sheets.c
	  app/sheets_dialog.c app/sheets_dialog_callbacks.c 
	  lib/diagdkrenderer.c lib/object.c lib/propobject.c
	  lib/text.c plug-ins/gprint/gnomeprint.c plug-ins/pixbuf/pixbuf.c
	  plug-ins/svg/render_svg.c
	  : some .c files now need to include "object.h" or <gtk/gtk.h>
	or e.g. "intl.h" direct, formerly dargged in indirectly
	* plug-ins/pgf/render_pgf.c : explicit inclusion of "arrows.h"
	
2006-01-21  Hans Breuer  <hans@breuer.org>

        * lib/connection.c lib/connection.h lib/connectionpoint.h
          lib/diagramdata.h lib/diarenderer.h lib/diatypes.h
          lib/element.h lib/geometry.h lib/handle.h lib/objchange.h
          lib/object.c lib/object.h : documentation tweaking

	* objects/UML/class_dialog.c(attributes_create_page,
	operations_create_page) : dont connect
	to a not exisiting signal. Avoids "GLib-GObject-CRITICAL **:
	g_signal_connect_closure_by_id: assertion 'signal_id > 0' failed"
	(This was a leftover of introducing the GtkTextView instead of GtkEntry)

	* objects/UML/class_dialog.c objects/UML/class.c objects/UML/class.h :
	Introduce 'comment_tagging' switch which allows to hide the rendering
	{documentation = } Maybe a choice between ugliness and non-standard.
	Fixes bug #326214. (Unrelated: started to adapt casing of variables
	to Dia's common coding style)
		
	* lib/object_defaults.c : pass is_default=TRUE to object_copy_props
	  lib/proplist.c : fixed pdtpp_default()
	  lib/propobject.c : correctly reflect is_default 
	* object/UML/class.c : correct setting of PROP_FLAG_NO_DEFAULTS and
	PROP_FLAG_DONT_MERGE. With the above this fixes bug #320934
	
	* lib/propdialogs.c : if PROP_NO_DEFAULTS is set dont try to show a
	widget in defaults dialog

	* app/display.c(initialize_display_widgets) : also append the Input 
	Methods menu to the diagram menubar. Now fixes bug #327862.

	* config.h.win32 : #undef LOCALEDIR
	* app/app_procs.c : runtime calculation of localedir. It now is
	$(executable_dir)/../locale. Should help fix bug #309763
	
	* sheets/AADL.sheet.in : remove left over xml:lang tag. 
	( Nguyen Thai Ngoc Duy, bug #327519)

	* lib/dialibartrenderer.c : make text rendering work without
	PangoFT2 and PangoWin32


2006-01-18  Lars Clausen  <lars@raeder.dk>

	* objects/UML/class.h: Enabling UML class mainpoint after failure
	to break it.

	* app/grid.c: Fix bug with grid being incorrectly drawn when gap <
	1.

2006-01-14  Hans Breuer  <hans@breuer.org>

	* app/paginate_psprint.c : ensure we are not producing pages for
	epsilon. Floating imprecision is fun. Fixes bug #133856.
	* app/paginate_gdiprint.cpp : same here.

	* plug-ins/pstricks/render_pstricks.c(draw_string) : now that I've
	found the nice samples from bug #156171 it was quite simple to
	confirm that the y value need indeed to be inverted. Fixes bug #304974.
	Also special case strings starting with \tex - i.e. dont escape them -
	to keep the use-case of direct tex input.
	
	* lib/debug.c : #include <glib/gprintf.h> not just <gprintf.h>


2006-01-14  Hans Breuer  <hans@breuer.org>

	* samples/Self/umlclass.dia : (new file) documenting part of the
	object relations of UMLClass. Also good for testing connections.
	
	* lib/debug.c : replace wrong call to vprintf() - missing file
	descriptor - with the more appropriate g_vprintf(). Thus 
	dia_assert_true() does not smash the stack anymore on win32.
	
	* objects/UML/class.c objects/UML/class_dialog.c objects/UML/uml.h
	  objects/UML/umlattribute.c objects/UML/umloperation.c :
	reverted the memory managment of UMLAttribute/UMLOperation's 
	ConnectionPoint(s) back to how it was up until 0.94. This finally
	makes the UMLClass work again including undo/redo support. Fixes
	bug #314153 and en passant bug #326453.
	
2005-01-12  Lars Clausen  <lars@raeder.dk>

	* objects/UML/umlattribute.c: 
	* objects/UML/class_dialog.c: Better way of handling
	connectionpoints: Don't copy them, just reference them.  Finally
	fixes bug #314153 (not quite the pi bug:)

	* app/menus.c (display_menu_items): 
	* app/filedlg.c (file_open_response_callback): 
	* app/display.[ch] (copy_display): 
	* app/commands.[ch] (view_clone_view_callback): 
	Added functionality to clone display.  Preparation for storing
	display info in diagram files (not happening this version, though).

	* INSTALL (NOTE FOR WINDOWS USERS): Added note for non-compiling
	users pointing at dia-installer.

2006-01-08  Hans Breuer  <hans@breuer.org>

	* shapes/Gane_and_Sarson/Makefile.am : correct spelling of filenames.
	(Narcelio Filho, #326075)

	* objects/AADL/aadl.h : remove #include "app/display.h". It is not needed,
	plug-ins should not depend on app/* and it even breaks 'make distcheck'.
	* objects/AADL/Makefile.am : added edit_port_declaration.h
	* app/Makefile.am : added diaconv.c to EXTRA_DIST
	=> 'make distcheck' passes again.

	* configure.in : use some more of gcc's useful warnings

	* lib/geometry.h : removed unused functions just producing warnings
	[sometimes it's good to read compiler warnings]
	* plug-ins/cairo/diacairo.c : somehow a function call got lost
	(left-hand operand of comma expression has no effect)
	* plug-ins/metapost/render_metapost.c : dia_message_filename()
	wants a char* not a FILE* (passing arg 1 of `dia_message_filename'
	from incompatible pointer type)


2006-01-07  Hans Breuer  <hans@breuer.org>

	* objects/custom/shape_info.c(parse_path) : handle the case of 
	invalid path data more gracefully, i.e. show a warning instead 
	of crashing later on.
	* plug-ins/svg/svg-import.c(read_path_svg) : ditto.
	
	* configure.in sheets/Makefile.am shapes/Gane_and_Sarson 
	  shapes/Makefile.am : added Gane & Sarson shapes 
	(Nick Moore, #319544)

	* objects/makefile.msc : building AADL on win32

2006-01-06  Hans Breuer  <hans@breuer.org>

	* objects/AADL/aadl.h : avoid redefinition warnings by #undef
	min, #undef max before local definitions
	* objects/AADL/aadl.h : more prototypes
	* objects/AADL/aadltext.c : for C89 declarations must be at the
	beginning of a block. And Dia *must* be compileable with C89.

	* objects/AADL/** objects/Makefile.am sheets/Makefile.am 
	configure.in : AADL plug-in from Pierre Duquesne. See
	http://mail.gnome.org/archives/dia-list/2006-January/msg00005.html
	for more information
	* sheets/AADL.sheet.in : from the above patch but modified 
	to become translatable like the other sheet files. That is: the
	french translation got temporary removed cause it does not belong here.

	* plug-ins/pgf/render_pgf.c : no C99/C++ comments please

	* app/app_procs.c app/diaconv.c : get rid of run-on sentences
	(Adam Weinberger, bug #325567)
	
	* app/menus.c : removed some keybindings with <control><shift>[0-9A-F]
	and change some other to use <control><alt>. They collide with GTK's 
	Unicode input feature. Fixes bug #320495. For rationale see: 
	http://developer.gnome.org/projects/gup/hig/2.0/input-keyboard.html
	
	* app/display.c : pay attention to g_warnings() [should always run
	with --g-fatalwarnings ;)]. Only create the menubar IM menu if there
	actually is a menu bar.
	
	* lib/diarenderer.c : the righthand calculation accidentially broke
	some arcs direction. Should be fixed again.
	
2006-01-02  Hans Breuer  <hans@breuer.org>

	* app/display.c(new_display) : also append the Input Methods menu to 
	the diagram menubar. Fixes bug #308576.

	* lib/widgets.c(dia_dynamic_menu_reset) : don't use an already
	freed string to dia_dynamic_menu_select_entry(). Fixes bug #323592.

	* lib/sheet.c(dia_sheet_sort_callback) : sort sheets according to 
	their localized name (with g_utf8_collate). Thus not relying on the 
	capabilities of the C libraries strcmp(). Fixes bug #160101.

	* lib/diarenderer.c(draw_arc_with_arrows) : don't recalculate center
	point and width from the (arrow-)corrected new points. Otherwise a 
	whole new wrong arc may emerge. Fixes bug #312641.
	
2006-01-01  Hans Breuer  <hans@breuer.org>

	* objects/custom/custom_object.c(cutom_update_data) : depending 
	on the handle moving let one scale (x or y) take precedence. 
	(bug #308515, Eric Deplagne)
	
	* objects/UML/class.c : only perform the attributes check with
	attributes visible to ged rid of false warnings
	* objects/UML/class_dialog.c : need to setup Connection::object
	after uml_attribute_new() and uml_operation_new(), again less
	warnings but bug #314153 still not fixed.

	* NEWS : updated

	* plug-ins/python/diasvg.py : more correct svg by also writing 
	xmlns="http://www.w3.org/200/svg"

	* plug-ins/python/dot.py : skip unconnected connection lines
	* plug-ins/python/Makefile.am : added dot.py

	* plug-ins/python/pydiadoc.py plug-ins/python/codegen.py : fixed
	typos in comments

2005-12-31  Hans Breuer  <hans@breuer.org>

	* objects/UML/class.[hc] objects/UML/class_dialog.c : removed the 
	caching of UMLClass::attributes_strings, operations_strings, 
	templates_strings.
	It was broken by the recent code restructuring in bug #303744 and
	- if necessary at all - nowadays it should be done on the 
	UMLAttribute, UMLOperation, UMLFormalParameter level anyway. 
	A small, much needed simplification of the code.

2005-12-30  Hans Breuer  <hans@breuer.org>

	* objects/UML/class.c : Patch from Dave Klotzbach
	fixes crash bug #325151

	* app/app_procs.c : add command line parameter --nonew to allow
	avoiding the empty start-up diagram
	Also give a hint on where the object-libs were missing.
	Finally work around a misbehaviour upstreamm :
	g_option_context_parse() returning FALSE but not setting error.

	* app/commands.c app/app_diagram_tree.c app/interface.c :
	Use gdk_pixbuf_render_pixmap_and_mask_for_colormap as suggested by
	http://www.gtk.org/api/2.6/gdk/gdk-Pixbufs.html#gdk-pixbuf-render-pixmap-and-mask
	
	* lib/widgets.c : image file selection finally ported to the new
	gtk file chooser. Fixes bug #309383

2005-12-28  Hans Breuer  <hans@breuer.org>

	* app/commands.c(file_new_callback) : convert to filename encoding before
	passing to new_diagram(), fixes bug #322400
	
	* app/interface.c(create_display_shell) : don't clip width on screen 
	height - now commited. Also lazy creation of tooltips.
	
	* objects/UML/actor.c : Actor is finally resizable, fixes bug #66915
	
2005-12-27  Hans Breuer  <hans@breuer.org>

	* app/diapsft2renderer.c(draw_bezier_outline) : only call
	FT_Outline_Decompose() when FT_GLYPH_FORMAT_OUTLINE.
	Prefers no text output over crashing for bug #144212

	* app/interface.c : removed superfluous call to dia_canvas_set_size().
	Suggested by Roland Stigge, fixes bug #148149.

	* plug-ins/dxf/dxf-import.c : don't complain too loud on Binary
	DXF. It is not supported at all. Fixes bug #322101

	* lib/geometry.c : removed the ifdefed GLIB_CHECK_VERSION(2,7,0)
	define G_IMPLEMENT_INLINES. It breaks again with glib-2-8


2005-12-27  Hans Breuer  <hans@breuer.org>

	* app/navigation.c : protect on_da_button_release_event() against being
	called twice. Also only popdown the navigation window after the first 
	draw (reusing nav->is_first_expose). Fixes bug #151696
	
	* app/interface.c(create_display_shell): don't clip width on screen height, 
	but height

	* lib/plug-ins.c : fixed typo in comment
	
	* lib/libdia.def : updated externals
	* lib/makefile.msc : build debug.obj

	* plug-ins/makefile.msc : building pgf in the right alphabetical order
	* plug-ins/pgf/render_pgf.c : include <glib/gprintf.h>
	
2005-12-08  Lars Clausen  <lars@raeder.dk>

	* app/authors.h: 
	* plug-ins/pgf/pgf.c: 
	* plug-ins/pgf/render_pgf.[ch]: 
	* plug-ins/pgf/Makefile.am: 
	* plug-ins/Makefile.msc: 
	* plug-ins/Makefile.am (SUBDIRS): 
	* configure.in: Patch from Moritz Kirmse <momomaniac@gmail.com>: Add
	support for PGF output for including in (La)TeX documents that
	allows PDF generation.

	* samples/render-test.dia: Added samples of text in different
	sizes, standard fonts and styles with size markers.

2005-12-04  Lars Clausen  <lars@raeder.dk>

	* lib/Makefile.am (gen_sources): Mark marshal files as generated.
	(BUILT_SOURCES): Added marshal files.

2005-12-03  Lars Clausen  <lars@raeder.dk>

	* lib/Makefile.am (diamarshal.c): Fix marshal rules to not talk
	about $(srcdir) and confusing everybody.

	* app/undo.c:
	* lib/diagramdata.c:
	* lib/diagramdata.h:
	* lib/diamarshal.list:
	* plug-ins/python/pydia-diagram.c:
	* plug-ins/python/pydia-diagramdata.c:
	* plug-ins/python/python-startup.py: Patch from David Johansson
	<david.lgj@gmail.com>: Add signals emitted when objects are
	inserted or removed.

2005-11-13  Lars Clausen  <lars@raeder.dk>

	* app/display.c (update_zoom_status): Fix of bug #321387: Avoid
	(small) buffer overflow by using g_strdup_printf instead of sprintf.

2005-11-09  Lars Clausen  <lars@raeder.dk>

	* app/app_procs.c: 
	* plug-ins/dxf/dxf-import.c (import_dxf): Don't use g_error except
	when reaching the statement is a bug.  Using g_critical and exit() for
	fatally wrong inputs.

	* objects/UML/uml.c: 
	* objects/UML/class.c: Patch from dklotzbach@foxvalley.net (dave
	Klotzbach): Fixes template rendering and converts home-brew inline
	doc format to javadoc.  Doesn't yet fix bug #320934, but turns it
	into a dup.

2005-11-07  Lars Clausen  <lars@raeder.dk>

	* lib/object.[ch]: Add 'enclosing box' as opposed to 'bounding
	box' since several objects have problems of using bounding box in
	different ways (see bug #300055).  For now, enclosing box ==
	bounding box, but over time objects will learn to expand the
	bounding box to include things only rendered interactively.

	* app/modify_tool.c (modify_motion): Make sure highlight is reset
	when moving between overlapping objects.

	* app/interface.c (interface_toggle_mainpoint_magnetism): Redraw
	diagram after toggling to make red X's come and go.

	* lib/font.c: #ifdef'd out layout cache for bug #307320.  Define
	it if you need faster rendering and aren't afraid of crashbugs:)

	* lib/objchange.c: Bugfix from dklotzbach@foxvalley.net
	(dave Klotzbach):  Fixes null pointer problems in free function.

	* objects/UML/class.c
	* objects/UML/class.h
	* objects/UML/class_dialog.c: Patch from dklotzbach@foxvalley.net
	(dave Klotzbach): Make UML comments conform to UML 1.0 standard
	and allow multi-line comments. Ugly as hell, but standard.  Time
	for a 'Strict UML' option?  Fixes bug #303744.
	
	* objects/UML/state.c: Patch from Peter Allin <peter@peca.dk>: Add
	entry, exit and do descriptions to a state object.  Fixes bug #65434.

2005-11-03  Lars Clausen  <lars@raeder.dk>

	* lib/arrows.c:
	* lib/attributes.c:
	* lib/autoroute.c:
	* lib/bezier_conn.c:
	* lib/boundingbox.c:
	* lib/color.c:
	* lib/connection.c:
	* lib/connectionpoint.c:
	* lib/dia_dirs.c:
	* lib/dia_image.c:
	* lib/dia_svg.c:
	* lib/dia_xml.c:
	* lib/diaarrowchooser.c:
	* lib/diaerror.c:
	* lib/diagdkrenderer.c:
	* lib/diagramdata.c:
	* lib/element.c:
	* lib/object.c:
	* lib/object.h:
	* lib/parent.c:
	Added documentation java-doc style.  Also a few trivial cleanups.
	
2005-10-13  Lars Clausen  <lars@raeder.dk>

	* lib/connectionpoint.h (DIR_ALL): Parentheses around operations
	in macros.

	* plug-ins/hpgl/hpgl.c (export_data): Correct error message.

	* lib/Makefile.am:
	* lib/debug.[ch]:
	* lib/object.[ch]: 
	* objects/UML/class.[ch]: 
	* objects/UML/uml.h: 
	* objects/UML/umlattribute.c: 
	* objects/UML/umloperation.c: 
	* objects/UML/class_dialog.c: 
	Rework of the UML class attribute/operation handling.  Now doesn't
	copy connection points into the dialog data, but only the "flat"
	data.  As part of debugging made sanity check functionality.
	Currently still dies when deleting an attribute/operation that has
	a connection to it.

2005-10-09  Hans Breuer  <hans@breuer.org>

	* lib/properties.h : prefer american spelling of colo(u)r for
	user visible strings - i.e. to be translated ones.
	* objects/UML/uml.c : it is Implementation. Together fixes bug #313929
                                        ^
	* po/*.po : updated (by 'make distcheck')

2005-10-09  Hans Breuer  <hans@breuer.org>

	* app/display.c : allow !"toolbox on top" without restart.
	(Chris Hellberg, bug #310702)

2005-10-09  Hans Breuer  <hans@breuer.org>

	* lib/arrows.c : patch from Radek Krahl fixing the blanking
	of two arrowheads, bug #310157

2005-10-08  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/group_props.py : show a descriptive text instead of an 
	empty table if there are no common properties to change. Fixes bug #314432

2005-10-08  Hans Breuer  <hans@breuer.org>

	* objects/UML/transition.c : inverted default direction of
	the direction. Patch from Peter Allin, fixes bug #318049
	[You possibly need to 'rm ~/.dia/defaults.dia' to have an effect]

2005-10-08  Hans Breuer  <hans@breuer.org>

	* app/Makefile.am objects/standard/Makefile.am : match the
	referenced icons to the needed. Make 'make distcheck' pass
	and thus fixes bug #312152

	* objects/standard/textobj.c : no C++ comments please!

2005-10-08  Hans Breuer  <hans@breuer.org>

	* objects/standard/textobj.c : preserve the position set on create
	[makes e.g. text positioning of diasvg_import.py work]

	* plug-ins/python/diasvg_import.py : restrict what eval() can do
	with strings from svg files. Fixes the arbitrary code execution from 
	bug #317637
	
	* app/pixmaps/mainpoints-(on|off).png : new icons to toggle center point
	magnetism. At least they are distinguishable from grid snapping.
	* app/makefile.msc app/Makefile.am : use them
	
	* lib/focus.c(reset_foci) : also remove_focus(). This fixes bug #172851
	I also can't reproduce bug #309044 anymore (on win32).
	
2005-10-01  Lars Clausen  <lars@raeder.dk>

	* lib/connectionpoint.h (DIR_ALL): Parentheses around | expressions.

	* plug-ins/hpgl/hpgl.c (export_data): Listen to warnings and don't
	pass FILE * as gchar *.

	* lib/debug.[ch] (dia_assert_true): Debugging aids.

2005-09-29  Lars Clausen  <lars@raeder.dk>

	* objects/UML/class.h: Enabling mainpoints for UML.

	* objects/UML/class.c (umlclass_set_props): Make sure to always
	realloc connection point list.

2005-09-26  Ahmad Riza H Nst  <rizahnst@id.gnome.org>

	* configure.in: Added "id" in ALL_LINGUAS line.

2005-09-14  Lars Clausen  <lars@raeder.dk>

	* objects/UML/class.c (umlclass_load): Set mainpoint obj upon
	loading.  Fixes bug #315427.

2005-09-11  Hans Breuer  <hans@breuer.org>

	* objects/standard/arc.c objects/standard/textobj.c : fix
	C99isms, Dia is supposed to compile with C89 like msvc

	* app/makefile.msc : use the wrong center-point-magnetism
	icons for the win32 build, too.

	* plug-ins/python/pydia-error.c : dont crash on C escape
	sequences in the error string
	* plug-ins/python/pydia-render.c : dont free filename twice

	* plug-ins/python/dot.py : start of an exporter to DOT language
	which can be processed by www.graphviz.org tools

2005-09-05  Iñaki Larrañaga  <dooteo@euskalgnu.org>

	* configure.in: Added "doc/eu/Makefile" for Basque documentation.

2005-09-04  Iñaki Larrañaga  <dooteo@euskalgnu.org>

	* configure.in: Added "eu" to ALL_LINGUAS.

2005-09-04  Lars Clausen  <lars@raeder.dk>

	* lib/element.h (ELEMENT_COMMON_PROPERTIES): Remove object
	dimensions frame to make ext_attributes work again.

	* app/grid.c (snap_to_grid): Bugfix from Zhang Lin-bo
	<zlb@lsec.cc.ac.cn>: Use dynamic grid setting from diagram, not
	global prefs.

	* objects/standard/textobj.c: Applied patch from Grégoire Dooms
	<dooms info ucl ac be>: Add vertical alignment for standard text
	object.  This should really be moved into lib/text.c and apply to
	all text objects.

2005-09-03  Lars Clausen  <lars@raeder.dk>

	* app/connectionpoint_ops.c (connectionpoint_draw): Only draw
	mainpoint when snap-to-objects is not on.

	* app/Makefile.am (ICON_PNG_PAIRS): 
	Fake icons for snap-to-objects.

	* app/commands.[ch]: 
	* app/menus.c (menus_get_image_menubar): 
	* app/display.[ch]: 
	* app/interface.c (create_display_shell): 
	* app/create_object.c (create_object_button_release): 
	* app/disp_callbacks.c (ddisplay_drop_object): 
	* app/object_ops.[ch]: 
	* app/connectionpoint_ops.c (ddisplay_connect_selected): 
	* app/modify_tool.c (modify_button_release): 
	* app/display.[ch]: 
	Togglable snap-to-objects, also doesn't snap when moving entire
	object.  This should be more reasonable in practical use, and can
	be turned off when you want to place your arrows more precisely.

2005-08-06  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo.c : increased #ifdef MESS:
	With Gtk+-2.7.x cairo must be available so the HAVE_CAIRO case
	becomes even more ugly when the user has choosen *not* to build 
	the diacairo plug-in. If noone can come up with a very convincing 
	reason why it has to be done this way I'll probably go back to 
	my original dont-build-at-all approach when this breaks the 
	next time.

2005-08-02  Lars Clausen  <lars@raeder.dk>

	* objects/standard/arc.c: Patch from Grégoire Dooms
	<dooms@info.ucl.ac.be>: An almost perfect arc autogap
	implementation.  "There is still a small bug when the non
	connected end of the arc is very close to the border of the
	connected object. I think this is due to rounding errors in the
	code for SHIFT-move handle which is reused to trim the arc in
	autogap. Also it is not yet possible to have a startgap and an
	endgap from/to the same central CP."

2005-07-31  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo.c congigure.in : dont wait any 
	longer for distributions official packages - depend 
	on cairo 0.6.0 - fixes bug #307144

2005-07-20  Hans Breuer  <hans@breuer.org>

	* lib/element.h : remove stray NULL in ELEMENT_COMMON_PROPERTIES
	which must match PropDescription, that is make it at least compile.

2005-07-19  Hans Breuer  <hans@breuer.org>

	* app/diagram.c(new_diagram) : what comes from g_object_new()
	MUST NOT be g_free()'d 

	* lib/message.h : added dia_message_filename() here as well.
	Mainly to not touch all files using. They *all* where using
	lib/message.h already! Maybe the implemantation should be moved
	to message.c as well cause the function has *nothing* to do
	with dynamic filename resolving. It is a wrapper around
	g_display_filename() mostly (only?) used for messages ...
	* lib/dia_dirs.c(dia_message_filename) : fix C99ism

2005-07-18  Lars Clausen  <larsrc@raeder.dk>

	* objects/EML/instantiation.c (instantiation_load): 
	* objects/EML/interaction-ortho.c (interaction_ortho_type) 
	* objects/ER/participation.c (participation_type): 
	* objects/FS/flow-ortho.c (orthflow_type): 
	* objects/GRAFCET/vector.c (arc_load): 
	* objects/standard/zigzagline.c (zigzagline_type): 
	* objects/UML/transition.c (transition_load): 
	* objects/UML/realizes.c (realizes_load): 
	* objects/UML/dependency.c (dependency_load): 
	* objects/UML/generalization.c (generalization_type): 
	* objects/UML/association.c (association_type): 
	* objects/UML/component_feature.c (compfeat_load): 
	Make autorouting deafult on except for old diagrams.

	* plug-ins/cairo/diacairo.c (export_data): 
	* plug-ins/cgm/cgm.c (export_cgm): 
	* plug-ins/dxf/dxf-export.c (export_dxf): 
	* plug-ins/dxf/dxf-import.c: 
	* plug-ins/hpgl/hpgl.c (export_data): 
	* plug-ins/metapost/render_metapost.c: 
	* plug-ins/pixbuf/pixbuf.c: 
	* plug-ins/pstricks/render_pstricks.c: 
	* plug-ins/python/pydia-render.c: 
	* plug-ins/shape/shape-export.c: 
	* plug-ins/svg/render_svg.c: 
	* plug-ins/svg/svg-import.c: 
	* plug-ins/wpg/wpg.c 
	* plug-ins/xfig/xfig-export.c: 
	* plug-ins/xfig/xfig-import.c: 
	* plug-ins/xslt/xslt.c: Use dia_message_filename to ensure legal
	UTF-8 in message boxes.

2005-07-18  Lars Clausen  <lars@raeder.dk>

	* lib/element.h (ELEMENT_COMMON_PROPERTIES): Allow Element objects
	to have their dimensions specified in properties.  Still needs to
	have proper update when setting properties cause constraint changes.

	* app/preferences.c (update_floating_toolbox): Allow
	toolbox_on_top setting to happen at once.

	* app/diagram.c
	* app/filedlg.c
	* app/load_save.c
	* app/render_eps.c
	* app/sheets_dialog_callbacks.c
	* lib/dia_dirs.c
	* lib/dia_dirs.h
	* lib/dia_xml.c
	* lib/diarenderer.c
	* lib/element.h
	* lib/object_defaults.c:
	Patch from lav@altlinux.ru (Vitaly Lipatov): Make filenames safe
	for displaying in messages - better than crashing!  Mostly fixes
	#310087.
	
	* objects/UML/class.c:  Save normal_font_height under the same
	name it gets loaded as.  Fixes bug #310515.

	* doc/en/authors.xml
	* doc/en/usage-customization.xml
	* doc/en/usage-objects-special.xml
	* doc/en/usage-objects.xml: Some documentation fixes.  Fixes bug
	#308315.

2005-07-17  Lars Clausen  <lars@raeder.dk>

	* doc/en/usage-customization.xml: 
	* doc/en/usage-objects.xml: 
	* doc/en/authors.xml: 
	* doc/en/usage-objects-special.xml: Applied patch from
	stigge@antcom.de (Roland Stigge):  Diverse typos and
	misencodings.  Fixes bug #308315.

	* objects/UML/class.c (umlclass_save): Patch from
	i.pilcher@comcast.net: Save normal font height under correct name
	to reload it.  Fixes bug #310515.

2005-07-10  Hans Breuer  <hans@breuer.org>

	* app/connectionpoint_ops.c app/object_ops.c : make the
	'whole object' connection point only center point again. 
	That is: it is visible and far less magnetic. Only the
	line gap handling make it special. For me this probably
	fixes bug #303301

	* lib/neworth_conn.c : apply the same as for bug #173031.
	This OrthConn fork got broken as well. Fixes bug #309381

	* app/makefile.msc objects/makefile.msc : adapt to icon changes

	* app/interface.c app/diagram_tree.c : a char** is still not 
	a char* and the win32 build is configured to error on 
	sloppiness like this

	* plug-ins/wmf/wmf.cpp : fix typo in preprocessor condition

2005-07-10  Hans Breuer  <hans@breuer.org>

	[
	  Take part in the toolbox icon redesign context! If you want to 
	  make them really prettier, please keep the following in mind :
	  - the size *must* be 22x22 otherwise button reflow will get broken.
	    Or you need to change about 800 icons at once.
	  - one important part of Dia are control points, so maybe the icons
	    should reflect that. (IMO gathering random icons form other 
	    apps wont work)
	  - the icons should at least look consistent in their group
	]

	* app/Makefile.am : use 22x22 variants mostly lent from The GIMP
	* app/pixmaps/*.png : added arrow-22.png scroll-22.png zoom-22.png

	* objects/standard/*.c : get rid of xpm includes to avoid mixing icon sets
	* objects/standard/pixmap/* : added arc.png beziergon.png 
	bezierline.png box.png ellipse.png image.png line.png polygon.png 
	polyline.png text.png zigzagline.png
	* objects/standard/Makefile.am : use the new icon set including
	text and arc ...

	* app/interface.c : remove the "will probably crash" debug spew

2005-07-09  Lars Clausen  <lars@raeder.dk>

	* objects/standard/pixmaps/*.png:
	* objects/standard/Makefile.am:
	* objects/standard/*.c:
	* app/interface.c: 
	* app/diagram_tree.c (create_object_pixmap): Fix icon loading. use
	new icons. [Slightly belated entry]

2005-07-03  Hans Breuer  <hans@breuer.org>

	* app/diagram_tree.c : dont leak display name
	* app/app_procs.c : dont leak GOptionContext
	* app/prop_widgets.c(frame_beginprop_get_widget) : 
	Gtk api still not eating strings ...

	* objects/UML/class.c() : don't load properties	once more 
	which are already loaded by StdProps. In case of strings 
	(data_string) it has even produced leaks.

	* app/paginate_psprint.c app/diagram.[hc] : the last
	of the related dialogs is gone and with it the 
	misconception of destroying widgets from 
	diagram::finalize()
	* app/display.c : ensure the diagram is still threre
	when we remove the display from it's list

2005-07-01  Hans Breuer  <hans@breuer.org>

	* lib/widgets.c(dia_color_selector_more_callback): dont 
	free old_color twice

	* plug-ins/wmf/wmf.cpp : finally added enahnced meta file
	option. Thus linestyles can be preserved on export - at 
	least on NT based systems.

	* NEWS : clarify the wmf outside of windows issue

	* app/modify_too.c : fix C99ism

	* objects/standard/arc.c : debug spew optional at compile time

2005-06-26  Hans Breuer  <hans@breuer.org>

	[ Cyrille would call it: warningectomy :-]

	* lib/font.c app/create_object.c : `...' might be used uninitialized
	in this function. Yes they were.
	* app/modify_tool.c : modify_tool.c:610: warning: `obj' might be used 
	uninitialized in this function. Yes it was with textedit_activate_object()
	Also some static correctness.
	* lib/diarenderer.c:678: warning: no previous prototype for 
	`calculate_min_radius'. Made static.
	* lib/dia_svg.c : ptr is a gchar *
	* dia_xml.c(data_point,data_rectangle) : gchar *str for parsing
	* lib/prop_text.c(multistringprop_get_widget) : use G_CALLBACK
	* app/app_procs.c : confirm warning and make dump_dependencies() static
	* app/autosave.c : #if 0'd old stuff
	* app/display.c : GTK_CHECK_MENU_ITEM() for snap_to_grid
	* 
	* lib/text.c lib/font.c objects/standard/line.c object/UML/class.c
	  objects/Istar/goal.c objects/standard/bezier.c objects/standard/beziergon.c
	  plug-ins/cgm/cgm.c plug-ins/cairo/diacairo.c plug-ins/hpgl/hpgl.c
	  plug-ins/wpg/wpg.c plug-ins/svg/svg-import.c plug-ins/shape/shape-export.c
	  plug-ins/dxf/dxf-export.c plug-ins/gprint/diagnomeprintrenderer.c
	  plug-ins/gprint/diagnomeprint.c  plug-ins/xfig/xfig-export.c
	  app/diagram_tree_menu_callbacks.c app/recent_files.c app/undo.c app/menus.c
	  app/diapsrenderer.c app/diagram.c app/disp_callback.c : 
	removed unused variables and functions
	* objects/UML/umlattribute.c objects/UML/umloperation.c 
	  objects/UML/umlparameter.c objects/UML/umlformalparameter.c : 
	neither 'missing braces around initializer' nor 'initialization from 
	incompatible pointer type'
	* objects/UML/class_dialog.c : more static
	* app/interface.c : static and almost const correctness and some
	less unitialized variables.
	* app/diapsft2renderer.c : use (int) casts like the original 
	(http://imagic.weizmann.ac.il/~dov/freesw/paps/ v0.4) does
	* app/render_gdk.c: stop assignment from incompatible pointer type,
	make member functions match the prototype.
	* app/render_libart.c : Dito. Also stop caching the copy_gc in
	a static variable. Otherwise it finally leaks and also may cause 
	BadMatch with changing windows
	=> warning count down from about 250 to about 60, one or two hand full 
	   crash bugs less.

2005-06-26  Hans Breuer  <hans@breuer.org>

	* lib/libdia.def : added dia_font_get_description, missing
	from my last commit

	* app/app_procs.c : use png_get_header_ver(NULL), that is:
	prefer function call over exported variable to get the 
	runtime version of libpng

2005-06-19  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/Makefile.am : added codegen.py to EXTRA_DIST
	as suggested by Roland Stigge, bug #308310

2005-06-19  Hans Breuer  <hans@breuer.org>

	* app/filedlg.c(file_export_callback) : oops, gtk_widget_show() wasn't 
	called anymore

2005-06-18  Hans Breuer  <hans@breuer.org>

	* NEWS : mention new file dialog

	[plugged remaining leaks from bug #142669]
	* lib/prop_attr.c(fontprop_free) : not only unref the font
	but free the property itself, too. 
	* app/diagram_tree.c(create_diagram_children): remember the
	original list start to not only free the last element 

	* lib/prop_sdarray.c:64: warning: `arrayprop_free' defined 
	but not used. Here it meant a potentially huge leak.

2005-06-18  Hans Breuer  <hans@breuer.org>

	* po/POTFILES.in : removed app/diaconv.c which isn't referenced 
	by app/Makefile.am anymore either. Should finally fix 'make distcheck' 
	for others, too. ( Roland Stigge, bug #144527 )

2005-06-18  Hans Breuer  <hans@breuer.org>

	* plug-ins/wmf/Makefile.am : prevent installation. It 
	doesn't do anything useful on *NIX and even seems to be
	linked wrong by gcc (or me;). Fixes bug #172830 

2005-06-18  Hans Breuer  <hans@breuer.org>

	* app/textedit.[hc] lib/arrows.[hc] plug-ins/xslt/xslt.h
	  plug-ins/xslt/xsltdialog.c plug-ins/xslt/xslt.c : fix for sloppiness
	in function declarations. 'f();' for a function without parameters is
	a C++ism. Though I can't get any of my compilers to warn about it.
	Finally fixes bug #142663.

2005-06-18  Hans Breuer  <hans@breuer.org>

	* app/textedit.[hc] lib/arrows.[hc] plug-ins/xslt/xslt.h
	  plug-ins/xslt/xsltdialog.c plug-ins/xslt/xslt.c : fix for sloppiness
	in function declarations. 'f();' for a function without parameters is
	a C++ism. Though I can't get any of my compilers to warn about it.
	Finally fixes the rest of bug #142663.

2005-06-18  Hans Breuer  <hans@breuer.org>

	* lib/font.h lib/font.c : _DiaFont is now private to prepare bigger 
	changes but doesn't hurt anyway. See bug #162034 
	* app/diapsft2renderer.c app/modify_tool.c 
	  plug-ins/gprint/diagnomeprintrenderer.c : use dia_font_get_description() 
	instead of messing with internals
	* app/display.c : give interactive renderers more begin/end render. 
	It is guaranteed that the scale wont change between these.

2005-06-18  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : const correctness for stderr_message_internal
	* app/dia-props.c : gtk_toggle_*() functions want GTK_TOGGLE_BUTTON 
	not GTK_CHECK_BUTTON, also some G_CALLBACK casts
	* app/disp_callbacks.c : don't dereference the to the function call
	when the function pointer in meant to be checked against 0
	* app/interface.c : warning fixes by using correct types
	* app/modify_tool.c : describe_props() members returns const pointer
	* app/render_libart.c : removed most of the render function again.
	They happily live in lib/dialibartrenderer.c since almost 3 years
	http://cvs.gnome.org/viewcvs/dia/app/render_libart.c?r1=1.31&r2=1.32
	* lib/dia_dirs.c : dia_get_canonical_path() const correctness
	* lib/dia_svg.c lib/dia_xml.c : some char to xmlChar changes
	* lib/dialibartrenderer.c(set_line_join): actually set the join_style
	instead of the cap_style. Don't initialize Art* enums with GDK_* constants.
	Both mentioned in bug #159814 and not warned by most other compilers.
	* lib/diagtkfontsel.c : at least the watcom compiler did not like the
	trailing colon in the GtkTypeInfo initialization
	* lib/properties.c : avoid redefinition of LIBDIA_COMPILATION
	* lib/dialinechooser.c lib/diagdkrenderer.c : there may be a difference 
	between char and gint8
	* plug-ins/metapost/render_metapost.c : replace invalid escape \% with %%
	* plug-ins/wpg/wpg.c : consitently use guint8
	* config.h.win32 : change HAVE_* defines to 1 not empty, avoids 
	redefinition warnings for python and xslt plug-ins

2005-06-18  Hans Breuer  <hans@breuer.org>

	* lib/diagramdata.c : really get rid of diagram_data_destroy 
	and new_diagram_data [ no previous prototype for `...' is either
	a sign of missing static or of a function to vanish :-]

	* lib/geometry.c : apparently the G_INLINE stuff was working only
	with particular GLib version(s), glib-2.6.4 does not. Conditionally
	reverting to the old mecanics.

2005-06-17  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/pydia-*.c : include order tweaking to 
	get rid of redefinition warnings. Ensure to include <Python.h> 
	before any 'system' header, some dragged in by glib.h
	* plug-ins/python/pydia-diagramdata.c(PyDiaDiagramData_Str)
	  pydia-properties.c(PyDiaProperties_Str)
	  plug-ins/python/pydia-property.c(PyDiaProperty_Str) : 
	use %p to format pointers
	* plug-ins/python/pydia-geometry.c(PyDiaArrow_Str) : 
	dont cast to float for %d
	* plug-ins/python/pydia-handle.c(PyDiaHandle_Connect) : 
	use correct pointer type
	* plug-ins/python/pydia-image.c(PyDiaImage_Str) :
	dont discard qualifier aka dont free const strings
	* plug-ins/python/pydia-properties.c : casts to PyCFunction
	* plug-ins/python/pydia-property.c : removed unused function,
	make ensure_quarks() static
	* plug-ins/python/pydia-render.c : removed unused vars, use
	the correct signature for begin_render
	(dia_py_renderer_finalize): pluged a leak
	=> except -fno-strict-aliasing there is no warning left in 
	   all of PyDia

2005-06-12  Hans Breuer  <hans@breuer.org>

	* app/filedlg.c : really fix the file extension mismatch on export dialog
	by working around some gtk+-2.6 behaviour (bug #307378). Fixes bug #305850

2005-06-11  Hans Breuer  <hans@breuer.org>

	* configure.in config.h.win32.h : mark as +cvs (should have been 
	done directly after the 0.94 release)
	* NEWS : attempt to summarize 2/3 year of development

	[ 
	  WANT_AUTOMAKE=1.7 ./autogen.sh && ./conifugre  --enable-maintatiner-mode && make distcheck
	  finally passes again
	]
	* app/app_procs.c : force use of POPT for the GNOME case, otherwise
	app/run_dia.sh --credits > THANKS => Segmentation fault
	* app/pixmaps/Makefile.am : added group.png and ungroup.png
	* Makefile.am : work around scrollkeeper bug
	* doc/en/Makefile.am : explicit list DISTCLEANFILES = dia.1

	* po/*.po : 'noise' produced by make dist

2005-06-10  Hans Breuer  <hans@breuer.org>

	* lib/properties.h : define PROP_STD_SHOW_BACKGROUND_OPTIONAL ...
	* objects/custom/custom_object.c : ... and use it to avoid 
	complains about missing attribute "show_background". It is 
	safe to leave this uninitialized. Same for flip_* and "text",
	the latter with comment cause it usually is *not* safe to do 
	it for the general case. Fixes remaining issues with bug #169006
	which where caused by an incompatible change in the shape file.

	* app/commands.c : use "gnome-open" instead of "netscape" as
	fallback for $BROWSER not set. Still not optimal but better
	to try some common desktop tool than an obsolete browser;)
	Fixes bug #307142. Also some whitespace changes.

	* app/interface.c(toolbox_delete): avoid random return value.
	Patch from Stanislav Brabec, fixes bug #307143

	* shapes/Cisco/Makefile.am : added a bunch of new shapes/pngs.
	Patch from Torben H. Nielsen (bugzilla is still the preferred way)
	http://mail.gnome.org/archives/dia-list/2005-June/msg00015.html

2005-06-06  Lars Clausen  <lars@raeder.dk>

	* app/diagram.c: 
	* app/modify_tool.c:
	* app/textedit.[ch]:
	Better support for text edit highlight.

	* app/connectionpoint_ops.c (connectionpoint_draw): Stop making
	the mainpoint extra visible.

2005-06-02  Lars Clausen  <lars@raeder.dk>

	* objects/UML/class_dialog.c:
	* objects/UML/class.[ch]:
	The final fixes for mainpoint on UML Class.

	* sheets/cisco*.in, shapes/Cisco/*: New set of Cisco icons from
	Ian Redfern, now in color and with mainpoints!  Very pretty!

2005-06-02  Hans Breuer  <hans@breuer.org>

	* objects/UML/class_dialog.c : the memory managment with respect to
	attribute/operation connections was/is a mess. But it should work again ;)

	* samples/UMLPackages.dia samples/Composite-Action.dia : some diagrams
	directly from the UML Specification - to show the power of Dia and 
	some weakness. Watch the bug reports following ;)

2005-06-01  Hans Breuer  <hans@breuer.org>

	* app/dia.def : export diagram_update_connections_object
	* plug-ins/python/pydia-diagram.c : wrap diagram_update_connections_object
	Patch from Paolo Bernardi, together with the property setting closes bug #300572

2005-06-01  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/pydia-property.c : complete refactoring of property 
	setting, now also supports setting of property arrays
	* plug-ins/python/pydia-*.c plug-ins/python/diamodule.c : adapt to 
	Python namespacing conventions
	* plug-ins/python/pydiadoc.py : use the stuff above to produce more 
	complete UML Classes with attributes and operations
	* plug-ins/python/otypes.py : now also show the properties of the objects

	* objects/UML/class.c(umlclass_set_props) : need to update object::connections
	(pointers), they might be changed with attributes and opertions changing

	* plug-ins/python/pydia-property.c : PointArray and BezPointArray property getters
	were broken. Apparently noone used them before.

	* plug-ins/python/pydia-diagram.c plug-ins/python/pydia-diagramdata.c : moved methods
	which only operate on the DiagramData to the latter file. To get on the DiagramData
	object of a Diagram use diagram.data. [In C the Diagram is a subclass of DiagramData, 
	but I don't know how to reflect that in the bindings. And for backward compatibility 
	there also is the 'data' member.]

	* objects/UML/uml.c objects/UML/umlattribute.c objects/UML/umloperation.c 
	  objects/UML/umlparameter.c : describe enums with PropEnumData

	* app/commands.c(view_show_all_callback) : if there is something selected show 
	that instead of all exisiting objects. If there is noting or all selcted it 
	"Show all" shows the old behaviour.

	* lib/parent.[hc] lib/object.c app/disp_callbacks.c app/diagram.c : plug some memory 
	leaks and use less allocations caused by misguided API. Also some adaption to common 
	coding style

	* objects/UML/class.h : add some comment about the brokeness of UML_MAINPOINT

	* app/makefile.msc : added new icons and build as console app while 
	not releaseing to the general public

	* objects/custom/shape_info.c : use g_strdup("") for a field to be g_free()'d
	and keep a refernce when storing the a font from style="" in s.font. This should
	finally allow to have shapes with fully predefined text (and no 'random' crashes)

	* plug-ins/gprint/diagnomeprint.c : disable GNOME_SVG until I've found a program
	capable to interpret it's output

2005-05-31  Lars Clausen  <lars@raeder.dk>

	* sheets/ER.sheet.in: No more xpms referenced in sheets. Fixes bug #151811.

2005-05-30  Pawan Chitrakar  <pawan@nplinux.org>

	* configure.in: Added ne in ALL_LINGUAS

2005-05-24  Lars Clausen  <lars@raeder.dk>

	* lib/font.c: Change to make DIA_FONT_ITALIC turn into -Oblique PS
	fonts for legacy fonts.  They don't have DIA_FONT_OBLIQUE setting
	anyway. 

2005-05-23  Lars Clausen  <lars@raeder.dk>

	* lib/paper.c: Added Ledger size paper.  Fixes bug #305254.

2005-05-21  Lars Clausen  <lars@raeder.dk>

	* lib/diaarrowchooser.c: 
	* lib/arrows.[ch]: Patch from Radek Krahl <ptasz3k@o2.pl>: Add
	'infinite' line (three dots) arrowhead.  Fix line length in arrow
	preview.  And fix typo.  Fixes bug #303904. 

2005-05-20  Hans Breuer  <hans@breuer.org>

	* lib/text.c : advice from valgrind and data_string() review:
	neither g_free() memory on the stack
	* objects/GRAFCET/boolequation.c : ... nor const strings 
	* objects/UML/association.c:934 : definitely lost. Even g_strdup("")
	wants to be freed

	* app/diagram.c : a g_object_ref() following g_object_new() is almost
	always wrong. Why would we need two refernces?
	* app/app_procs.c : same here.If it crashes later on someone is dropping
	refernces he does not own, and *that* needs to be fixed. This is reverting
	"Remember to ref g_object_new'd object" (bug #170972) below, which 
	causes more harm (leaking, hiding bugs elsewhere) than good.

	* app/app_procs.c lib/diagramdata.[ch] lib/libdia.def : get rid of
	diagramdata_destroy() which was only a wrapper to g_object_unref()

	* app/display.c(selection_changed) : don't g_strdup_printf() without
	g_free() later /or/ a C++ comment of me mostly denotes an error

	* app/diagram.c : diagram_parent_sort_cb make signature match GCompareFunc

	* lib/widget.c : dia_dynamic_menu_select_entry() cleanup. If it takes a
	const gchar* entry it must not eat memory, added a lot of g_free() and
	some const. Fixed a bunch - i.e. *all* - warnings.
	* lib/widget.h : removed unused/deleted functions

	* app/layer_dialog.c(dia_layer_widget_connectable_toggled) : trying to
	avoid 'Invalid write of size 4', no luck yet

2005-05-19  Lars Clausen  <lars@raeder.dk>

	* objects/UML/class.c: 
	* objects/UML/class.h: 
	* objects/UML/class_dialog.c: Work on getting a proper mainpoint
	for uml class object.  #ifdef'd out right now.

2005-05-18  Lars Clausen  <lars@raeder.dk>

	* objects/standard/line.c: Make line adjust its actual endpoints
	for autogap -- looks and feels better.

	* objects/standard/arc.c: 
	* lib/geometry.h: 
	* app/modify_tool.c: Patch from Grégoire Dooms
	<dooms@info.ucl.ac.be>:  First stab at autogap for arcs, and
	shifted arc angle movement.

2005-05-16  Hans Breuer  <hans@breuer.org>

	* lib/widget.c : variable declarations need to be at the start of a block,
	at least as we are not using C++ or C99

	* plug-ins/python/pydia-property.c : implement the read part for Property
	arrays - aka. umlclass.properties["operations"], umlclass.properties["attributes"]
	They are working quite well as can be seen with export-object.py

	* plug-ins/python/codegen.py : prove it once more with the generation of C++
	or Python code from an UML Diagram. Simply save as .py or .cxx ...
	* plug-ins/python/Makefile.am : install it

2005-05-16  Lars Clausen  <lars@raeder.dk>

	* app/pixmaps/{un}group.png: 
	* app/Makefile.am (ICON_PNG_PAIRS): 
	* app/menus.c (display_menu_items): 
	New icons for grou/ungroup finally added, closing bug #105519.

	* app/Makefile.am: Dependencies for pixmaps.

	* app/pixmaps/connectable.png: An icon that actually makes sense
	for switching connectability.

2005-05-15  Hans Breuer  <hans@breuer.org>

	* lib/group.c object/UML/classicon.c : fixed leftovers of
	'Adding connectionpoint to _move_handle

	* lib/widgets.c : gtk+ *NEVER* eats strings, so gtk_something(widget, g_strdup())
	is *ALWAYS* a memory leak. Plug some more.

	[
	 In preparation to make UML operations/attributes/parameters setable by Python
	 UML class became more StdProp conformant. A nice experience to be the first 
	 to use the PROP_TYPE_DARRAY stuff about four years after it was written ;-)  
	]
	* objects/UML/umlattribute.c objects/UML/umloperation.c 
	  objects/UML/umlparameter.c objects/UML/umlformalparameter.c : (new files) 
	split from objects/UML/uml.c and made StdProp aware
	* objects/UML/class.c : finally make "attributes", "operations", "templates"
	<template parameters> first class StdProps citizens.
	(umlclass_load) : removed hand-written parsing for the above, it is all done
	by object_load_props() now. The old write code is still in place, so be very
	careful when changing something - at the moment load/save it is 100% compatible 
	as it needs to be.
	* objects/UML/uml.c : now just type registration here, as it is supposed to be
	* objects/UML/Makefile.am objects/makefile.msc : build the new files

	* lib/properties.h(PropDescCommonAreaExtra) : need a place to store the 
	in-record offsets
	* lib/prop_sdarray.c : made the DARRAY case work, SARRAY still untested
	(darray_prop_adjust_object_records) : don't loop forever
	(whole file) : use the new (working) way to get on the second level offsets.
	Also resolved some abbreviations, it is complicated enough without them ;)
	* lib/proplist.c : even complete list contents may be optional

2005-05-15  Hans Breuer  <hans@breuer.org>

	* lib/bezier_conn.c(remove_handles) : don't try to remove 
	non-exisitng handles (patch from Radek Krahl, bug #302273)

2005-05-15  Hans Breuer  <hans@breuer.org>

	* plug-ins/metapost/render_metapost.c : locale independent output
	(Radek Krahl, bug #301866)

2005-05-12  Lars Clausen  <lars@raeder.dk>

	* shapes/Cisco/*.{shape,png}:
	* sheets/cisco*.sheet.in:
	Updated with color icons from Ian Redfern, closing bug #303889.
	Added automatic midpoints, not attempt at adjusting them.

2005-05-11  Lars Clausen  <lars@raeder.dk>

	* many shapes:  Use mid of bounding box for midpoint, better than
	mid of connection points generally.

2005-05-10  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.c: Decided on one way for the ratio thing in arrow
	size selector:  Fixed ratio is on by default and keeps the sizes
	at the given ratio, but doesn't clamp them to be the same.  Fixes
	bug #302861.

	* lib/font.c: Fix for bug #303695: Allow more than one entry of
	each legacy name, thereby correctly encoding bold and italic of
	the three main fonts.  Also use | rather than || to combine slant
	and weight, so matching works.  Had to remove binary search for
	new font name, but the list is short enough it's not a problem.

2005-05-09  Lars Clausen  <lars@raeder.dk>

	* lib/autoroute.c (autoroute_layout_orthconn): Remove debugging info.

2005-05-08  Hans Breuer  <hans@breuer.org>

	* objects/UML/class.c : Reverted to have no center point.
	At first it looked as if there was only the bug to not increase
	class.h:UMLCLASS_CONNECTIONPOINTS. But the UMLClass has 
	potentially much more dynamic connection points (to the left
	and right of every attribute/operation). Now simply adding one
	between see static and dynamic will screw up any existing diagram
	which makes use of the dynamic connection points. The would all
	be connected with an off-by-one error. I have no idea how to
	code around that. But breaking backward compatibility is no 
	option here. Does not completely fix bug #303301 ...
	
	* lib/widget.c(dia_font_selector_set_font): actually set the options 
	menu state. So we are not any longer resetting the font style on Apply.
	Use "UML - Class" dialog as stress text example.

	* app/command.c : some people insist to close diagrams already
	closed using tear-off menus. Maybe we should add a dialog 
	"Do you want to call Dr. Watson now?". If there is no diagram
	to close anymore just do nothing, fixes bug #303221
	* app/display.c(ddisplay_close) : use g_return_if_fail(ddisp != NULL);
	Calling this with no display to close is a pathological case.

	* app/diagram.[hc] : moved object.h and other DiaObject stuff
	to the implementation in preparation of Big Things(tm)

	* app/interface.c : less warnings and make it compile. strncmp()
	does not take a char**, neither does gdk_pixbuf_new_from_inline().

	* objects/makefile.msc plug-ins/makefile.msc : less output

2005-05-08  Lars Clausen  <lars@raeder.dk>

	* lib/orth_conn.c (orthconn_init): The right place to set the
	default autorouting value.  Fixes bug #303291.

	* app/display.c (ddisplay_close): Patch from Radek Krahl
	(ptasz3k@o2.pl):  Fix crash when using from detached menu
	(#303221)
	
2005-05-07  Lars Clausen  <lars@raeder.dk>

	* lib/orth_conn.c (orthconn_load): Autorouting should default to
	off in diagrams that don't have it explicitly.  All diagrams
	should be explicit about it.

2005-05-06  Hans Breuer  <hans@breuer.org>

	* app/samples/Self/*.dia : some UML diagrams describing Dia's
	inner working (or it's future;)

2005-04-26  Lars Clausen  <lars@raeder.dk>

	* app/connectionpoint_ops.c (connectionpoint_draw): Temporary
	change to display of mainpoint to be easier to debug autogenerated
	ones. 

2005-04-23  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/diamodule.c plug-ins/python/pydia-object.h
	  plug-ins/python/pydia-properties.h : use lib/ prefix for
	Dia internal headers with too common names (fixes bug #173061)

	* app/display.c : stop special casing the first display of
	a diagram. Every display now has it's own refernce. The initial
	reference gets dropped when there is no display anymore. See
	diagram_remove_ddisplay(). Fixes bug #300744.

	* app/diapsft2renderer.c : locale independent output
	(Radek Krahl, bug #300847)
	* app/paginate_psprint.c :  fixing use of setlocale() calls
	(Radek Krahl, bug #300886)
	* plug-ins/shape/shape-export.c : fixing use of setlocale() calls
	(Radek Krahl, bug #300889)

	* objects/UML/class.c : fix another crash with the line 
	wrapping code (Gabor Simon, bug #160865)

	* plug-ins/cairo/diacairo.c : image rendering had an endianess 
	issue (or is this working around a libpixman bug?;)

2005-04-21  Lars Clausen  <lars@raeder.dk>

	* lib/polyshape.c (polyshape_update_data): Fixed numpoint off-by-one.

	* shapes/**/*.shape: All shapes now have midpoints.

2005-04-20  Lars Clausen  <lars@raeder.dk>

	* lib/orth_conn.c (orthconn_update_data): Patch from ptasz3k@o2.pl
	(Radek Krahl): Make sure there's enough handles for the line.
	Fixes bug #173031.

	* objects/UML/node.c (node_draw): Better drawing method avoids
	garbage after moving.  Fixes bug #301032.

2005-04-17  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo.c : again adapt to Cairo API 
	changes (whould compile with current cvs and 0.(3|4).0

2005-04-11  Lars Clausen  <lars@raeder.dk>

	* xmldocs.make (all): Fix to put installed docs in right place
	under disable-gnome.

	* doc/en/Makefile.am: Use xml_files var for xml files, EXTRA_DIST
	only for dia.dbk.

	* app/commands.c (help_manual_callback): Patch from p@kapcoweb.com
	(Leonardo Boshell): Use standard gnome help if called with Gnome.

	* app/diapsrenderer.c: Patch from ptasz3k@o2.pl (Radek Krahl): Fix
	locale issues for eps output.  Fixes bug #173135.

2005-04-10  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo.c : adapt to Cairo PNG API 
	changes (somewhat broken)
	
	* plug-ins/pstricks/render_pstricks.c : still C89 ...
	* objects/custom/shape_info.c : ... but with prototypes
	
2005-04-07  Lars Clausen  <lars@raeder.dk>

	* lib/dia_xml.c: 
	* plug-ins/svg/render_svg.c: 
	* lib/diasvgrenderer.c: Patches from ptasz3k@o2.pl (Radek Krahl):
	Make decimal separators be correct in save file formats
	(non-localized).  Fixes bugs #172529 and 172531.

2005-04-06  Lars Clausen  <lars@raeder.dk>

	* app/create_object.c (create_object_button_release): 
	* app/modify_tool.c (modify_button_release): Correct activations
	of text edits.

2005-04-05  Simon Kågström  <ska@bth.se>

	* app/app_procs.c: the --show-layers option can now handle numeric
	ranges of layers.

2005-04-05  Lars Clausen  <lars@raeder.dk>

	* lib/diagdkrenderer.c (draw_string): Patch from tomkast@yahoo.com
	(Tom Kast): Avoid blockiness caused by bad updates.

2005-04-03  Lars Clausen  <lars@raeder.dk>

	* lib/polyshape.c: 
	* lib/beziershape.c: Main points.  A crude solution, having the
	center in the middle of the bb.  Shows a bug in the distance_from
	code for polyshape when a side is horizontal.

2005-04-02  Lars Clausen  <lars@raeder.dk>

	* plug-ins/pstricks/render_pstricks.c: 
	* plug-ins/xfig/xfig-export.c: Patch from Radek
	Krahl <ptasz3k@o2.pl>: Fix decimal point problems. Fixes bugs 

2005-04-02  Hans Breuer  <hans@breuer.org>

	* lib/dia_image.c(dia_image_filename) : return the path 
	again. (bug #172416, Radek Krahl)
	
2005-04-01  Steve Murphy  <murf@e-tools.com>

	* configure.in: Added "rw" to ALL_LINGUAS.

2005-03-31  Lars Clausen  <lars@raeder.dk>

	* lib/neworth_conn.c (neworthconn_update_data): Handle autogap.

	* lib/orth_conn.c (orthconn_update_data): Handle autogap while not
	autorouting.  

	* objects/network/basestation.c: Main points.

2005-03-27  Hans Breuer  <hans@breuer.org>

	* app/Makefile.am : removed some pixmap/*.xpm from EXTRA_DIST
	* app/pixmaps.h : removed arrow.xpm
	* lib/Makefile.am : added diamarshal
	* plug-ins/python/Makefile.am : added makefile.msc to EXTRA_DIST
	=> makes 'make dist' pass and produce a useable package

	* po/*.po : 'noise' profuced by make dist

2005-03-24  Lars Clausen  <lars@raeder.dk>

	* objects/flowchart/parallelogram.c (pgram_update_data): 
	* objects/flowchart/ellipse.c (ellipse_update_data): 
	* objects/flowchart/diamond.c (diamond_update_data): 
	* objects/flowchart/box.c (box_update_data): Main points.

	* objects/custom/custom_object.c (custom_create): 
	* objects/custom/shape_info.h: 
	* shapes/Assorted/square.shape: 
	* objects/custom/shape_info.c (load_shape_info): 
	* doc/shape.dtd: Added main point support to shapes, and an
	example of how to use it.

2005-03-21  Lars Clausen  <lars@raeder.dk>

	* lib/autoroute.c (autoroute_layout_orthconn): Remember to
	unnormalize from same point as you normalize, or else!

2005-03-20  Lars Clausen  <lars@raeder.dk>

	* app/app_procs.c (do_convert): Patch from crux@gorodmasterov.com:
	Remember to ref g_object_new'd object.

2005-03-19  Hans Breuer  <hans@breuer.org>

	* plug-ins/xslt/xslt.c : don't crash if both places ($SHARE, $HOME)
	have configurations, fixes bug #170962

	* objects/UML/state.c : ("UML - State")::type is PROP_FLAG_OPTIONAL,
	or better not used any longer. Fixes bug #169142.

	* lib/element.c(element_update_connections_rectangle): don't initialize 
	the eighth point twice but instead the nineth once

	* objects/standard/bezier.c : no C++ comments *please*

	* lib/plug-ins.h : increment DIA_PLUGIN_API_VERSION

	* lib/dia_image.[ch] : dia_image_filename() returns a string not to be freed ...
	* plug-ins/python/pydia-image.c : ... so, don't do it!

	* lib/dia_svg.c : refactor color parsing and support the "rgb(127,255,0)" form,
	also named colors via pango_color_parse()

	* lib/prop_text.c : don't try to g_strdelimit(NULL), fixes bug #169367

	* lib/libdia.def : updated externals

	* app/object_ops.c : still not C99 everywhere

2005-03-19  Hans Breuer  <hans@breuer.org>

	* lib/autoroute.c : at least it should compile ;)
	
2005-03-19  Lars Clausen  <lars@raeder.dk>

	* lib/autoroute.c: Orthconns now do autogap.

2005-03-17  Lars Clausen  <lars@raeder.dk>

	* app/authors.h: Added Gregoire Dooms for gap stuff.

	* objects/standard/polyline.c: Patch from Grégoire Dooms
	<dooms@info.ucl.ac.be>: Autogap and absolute gap for polyline.
	
	* objects/standard/bezier.c: Patch from Grégoire Dooms
	<dooms@info.ucl.ac.be>: Fixes two bugs.  Also autogap no longer a
	property. 
	

	* objects/UML/state_term.c: 
	* objects/UML/large_package.c: 
	* objects/UML/node.c: 
	* objects/UML/object.c: 
	* objects/UML/small_package.c: 
	* objects/UML/state.c: 
	* objects/UML/usecase.c: 
	* objects/UML/note.c: 
	* objects/UML/actor.c: 
	* objects/UML/classicon.c: 
	* objects/UML/component.c: 
	* objects/Misc/analog_clock.c: 
	* objects/Jackson/requirement.c: 
	* objects/Istar/goal.c: 
	* objects/Istar/actor.c: 
	* objects/FS/function.c: 
	* object/standard/box.c:
	* objects/ER/entity.c: 
	* objects/ER/relationship.c: 
	* objects/ER/attribute.c: Main points added.   Distance_from fixed
	in attribute, broken in relationship, I* goal, Jackson
	requirement, analog_clock, all non-rectangular UML elements, 

	* lib/libdia.def: 
	* lib/element.[ch]: New method to help update connection points.

	* app/menus.c: Change Help/Manual to Help/Contents to follow
	standard.
	
	* objects/standard/line.c:
	* lib/geometry.[ch]: 
	* objects/standard/bezier.c: Patch from Grégoire Dooms
	<dooms@info.ucl.ac.be>: Add absolute gap and autogap for line and
	bezier objects.   Autogap nowchanged to be a function of the
	connpoints.

	* lib/libdia.def: 
	* lib/connectionpoint.[ch]: New function to ask if a connpoint has the
	autogap flag.

	* app/connectionpoint_ops.c (connectionpoint_draw): Don't draw
	CP_FLAG_ANYPLACE connpoints.

2005-03-16  Lars Clausen  <lars@raeder.dk>

	* app/interface.c (create_tools): Removed debug printf.

2005-03-15  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.[ch]: Constification.

	* app/interface.c: Work on using gdk-pixbuf-csource'd data, not
	working yet.

	* objects/standard/ellipse.c: Use CP_FLAG_MAIN for central CP.

	* lib/connectionpoint.h: Flags for connection points.

	* app/create_object.c (create_object_motion): 
	* app/modify_tool.c (modify_motion): Minor refactoring.

	* app/object_ops.c (object_find_connectpoint_display): Extend with
	finding connpoints that cover entire objects.

	* app/layer_dialog.c (dia_layer_widget_init): Get rid of warnings.

	* objects/custom/custom_object.c (custom_setup_properties): Avoid
	uninitialized use.

2005-03-13  Hans Breuer  <hans@breuer.org>

	* plug-ins/svg/svg-import.c : handle the <circle/> tag as well

2005-03-13  Hans Breuer  <hans@breuer.org>

	* lib/dia_svg.[hc] objects/custom/shape_info.[hc] plug-ins/svg/svg-import.c :
	s/DiaSvgGraphicStyle/DiaSvgStyle/, added and use convenience functions 
	dia_svg_style_copy(), dia_svg_style_init()

	* objects/custom/shape_info.c : use dia_svg_parse_path() from lib/ (it got
	moved out of this)

	* lib/dia_svg.c(dia_svg_parse_path) : also handle style properties which are
	not wrapped in the style attribute

	* plug-ins/svg/svg-import.c : implement nested group handling and style
	'style inheritance'. Still no transformations, no <image/>, no <style/> 
	<defs/>...

	* plug-ins/svg/svg-import.c(import_svg) : use message_warning instead of g_warning,
	the latter is for programmers.
	Also be more tolerant if the document root namespace is not 'svg'. If the svg 
	namespace is defined in the file search for the top node including svg. This
	allows us to re-read the svg part of our own shape format.

	* lib/libdia.def : there is no give_focus_to_object
	* app/textedit.c : still no C99,  aka. error C2275: 'Focus' : illegal use of this 
	type as an expression

	* lib/geometry. c : use G_IMPLEMENT_INLINES
	* lib/libdia.def : export point_get_perp (used by xfig plug-in)

	* app/textedit.c(textedit_end_edit) : don't crash if the display is already
	gone when trying to remove the focus

	* plug-ins/cairo/diacairo.c : CAIRO_HAS_WIN32_SURFACE does not any longer mean
	it has *my* Cairo Win32 Backend. [The official one isn't useful for the use
	case of this plug-in, i.e. producing output files]

2005-03-13  Lars Clausen  <lars@raeder.dk>

	* lib/Makefile.am (BUILT_SOURCES): 
	* app/Makefile.am (BUILT_SOURCES): Use the Right Way[tm] to force
	the building of the icons header files.
	* app/dia-lib-icons.h: Out of CVS now that it's correctly generated.

2005-03-13  Hans Breuer  <hans@breuer.org>

	* configure.in : require Cairo 0.3.0
	  plug-ins/cairo/diacairo.c : changed to match ;-)

	* app/app_procs.c() : new function dump_dependencies()
	which gets called by: dia --version --verbose
	and may help to track version dependent problems in
	our dependencies

	* lib/font.c : reverted to previous version cause using
	not implemented Pango API did not improve the issue.
	See: http://bugzilla.gnome.org/show_bug.cgi?id=162034
	for more information.

	* lib/dialinechooser.c : a little shrinking of the 
	initial size (to work around line wrappjing the right 
	arrow control)

2005-03-11  Lars Clausen  <lars@raeder.dk>

	* app/textedit.c: Concentrate start/end editing in single functions.

2005-03-10  Lars Clausen  <lars@raeder.dk>

	* lib/text.h: 
	* lib/object.h: Added new object function to allow the object to
	be notified when its text is being edited.

	* lib/libdia.def: 
	* app/modify_tool.c: 
	* app/commands.c: 
	* app/textedit.c: 
	* lib/focus.c: Remove sideeffects from focus objects, add getter
	for focus->obj.

2005-03-09  Lars Clausen  <lars@raeder.dk>

	* lib/Makefile.am (dia-lib-icons.h): 
	* app/Makefile.am: Minor cleanup.

2005-03-06  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : avoid "assignment within conditional expression"
	and handle -L for the GOption case as well.

	* lib/widget.c : strchr() does not return -1 on not found but NULL;
	avoids widgets.c(307) : error C4047: '!=' : 'char *' differs in levels of 
	indirection from 'const int '

	* lib/diasvgenderer.c(draw_arc|fill_arc) : finally correct sweep and 
	large_arc, thus produce correct arc output (like diasvg.py does;),
	fixes bug #144401

	* lib/dia_svg.[hc](dia_svg_parse_path) : new function copied and adapted 
	from objects/custom/shape_info.c to be shared with object/custom and
	plug-in/svg -> finally the C based svg-import reads pathes again.
	Added arc parsing while I was there, which fixes bug #169191
	* objects/custom/shape_info.c(parse_path) : 
	* plug-ins/svg/svg-import : reuse above function
	Also fix the "root element was 'svg' -- expecting 'svg'" bug #108502.
	But in general this does only support a small subset of what is 
	possible in SVG.

2005-03-06  Lars Clausen  <lars@raeder.dk>

	* objects/UML/association.c: Patch from Dave Klotzbach applied:
	Add visibility to association arrow.  Fixes bug #157012.

	* app/grid.c: Patch from Lawrence Withers fixes grid messiness,
	closing bug #161040.

	* app/layer_dialog.c (create_button_box): Use stock icons instead
	of homemade onces.  Gets us rid of four more XPMs.

2005-03-05  Sampo Kellomaki <sampo@iki.fi>

	* app/app_procs.c: Implemented --show-layers=LAYER,LAYER,... option
	This option permits command line control of which layers are visible.
	Useful when automatically exporting multiple versions of the same
	diagram, e.g. slides with overlays. Added-n switch parsing without POPT.
      * app/app_procs.h: moved prototype of do_convert() to app/app_procs.c
	and made it static since its only used in that file.
	* app/authors.h: added myself
	* doc/en/dia.1: documented the switch
	* doc/en/usage-layers.xml: ditto
	
2005-03-05  Alan Horkan <horkana@tcd.ie>
 
 	* app/interface.c Change Horizontal scroll policy to NEVER for sheets
 	this restores how Dia behaved before the GTK2 port and seems to help 
 	allow the toolbox to be more easily resized.  Bug #108891.
 
2005-03-05  Lars Clausen  <lars@raeder.dk>

	* Civil/civil_motor.shape:
	* Civil/civil_rotor.shape:
	* Logic/and.shape:
	* Logic/buffer.shape:
	* Logic/connector.shape:
	* Logic/inverter.shape:
	* Logic/nand.shape:
	* Logic/nor.shape:
	* Logic/not.shape:
	* Logic/or.shape:
	* Logic/xor.shape:
	* shapes/Assorted/arrow-left-up.shape: 
	* shapes/Assorted/heptagon.shape: 
	* shapes/Assorted/star5.shape: 
	* shapes/Assorted/trapezoid.shape: 
	* shapes/Assorted/triangle-rightangle.shape: Fixed bad use of
	defaults, see bug #169143.

	* sheets/Assorted.sheet.in: Fixed typo patch applied, bug #169114.

	* configure.in: 
	* doc/en/Makefile.am: Finally figured out the right way to ask for
	the manpage xslt.  Closes bug #144539.

2005-03-01  Lars Clausen  <lars@raeder.dk>

	* lib/Makefile.am (nodist_include_HEADERS): 
	* app/Makefile.am: Correctly generate these files from PNGs with
	automake.

	* lib/widgets.h: 
	* lib/libdia.def:
	* lib/widgets.c: Refactor toggle button factory to allow inline
	data.

	* lib/pixmaps/Makefile.am: Unify lib pixmaps.

	* app/makefile.msc (ICON_PNG_PAIRS): 
	* app/dia-app-icons.h: Updated with more icons.

	* lib/Makefile.am: 
	* app/Makefile.am: Use gdk_pixbuf_csource to create inline data
	from pngs.

	* app/interface.c (create_display_shell): 
	* app/layer_dialog.c (dia_layer_widget_init): 
	* lib/dia_image.c (dia_image_get_broken): Use inlined data
	generated from png.

	* app/display.c (ddisplay_close): Removed unused includes.

2005-03-01  Lars Clausen  <lars@raeder.dk>

	* app/sheets.c (create_object_pixmap): Create a placeholder image
	for when the real image is missing.  Better than crashing:)
	Closes bug #166786.

2005-02-25  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : don't requets to open a default display with
	g_option_context_add_group (crux@gorodmasterov.com, bug #168523)

2005-02-22  Lars Clausen  <lars@raeder.dk>

	* plug-ins/gprint/diagnomeprint.c (export_data): GNOME, not Gome.
	Fixes bug #168125.

2005-02-19  Lars Clausen  <lars@raeder.dk>

	* app/menus.c (display_menu_items): Applied patch from bug #94019:
	Menu cleanup and addition of icons.  Also a few additional stock
	icons. 

	* app/layer_dialog.c (create_layer_dialog): Bug #159598: Clean up
	the layers dialog.

2005-02-14  Lars Clausen  <lars@raeder.dk>

	* INSTALL (ftp): Fixed Pango release typo (bug #153007)

2005-02-13  Lars Clausen  <lars@raeder.dk>

	* lib/font.c: First stab at using Gtk 2.4 functions for fixing
	width.  Seems to work.  Once tested some more, needs old code
	removed. 

	* lib/widgets.c (dia_font_selector_create_string_item): Avoid
	warning by escaping & properly.

2005-02-06  Lars Clausen  <lars@raeder.dk>

	* app/filedlg.c (file_export_callback): Set correct extension as
	soon every time the dialog is shown.  Fixes bug #162535.

	* app/display.c (ddisplay_set_origo): Use more standard
	transformations.

	* app/modify_tool.c (modify_motion): 
	* app/create_object.c (create_object_motion): Put coordinates of
	handle/object in status bar while moving. Fixes bug #163164.

2005-02-03  Lars Clausen  <lars@raeder.dk>

	* lib/.cvsignore: Added generated files diamarshal.[ch]

2005-02-02  Lars Clausen  <lars@raeder.dk>

	* configure.in: Add GLIB_GENMARSHAL def as suggested in
	http://ignore-your.tv/software/libgtcpsocket/docs/client-subclassing.html.
	Now compiles on Linux.

2005-02-01  Lars Clausen  <lars@raeder.dk>

	* app/sheets.c (sheet_object_mod_get_type_string): We don't really
	need to translate the empty string.  Especially not after
	g_assert_not_reached().  Fixes bug #165966.

2005-01-07  Tim Olsen  <tolsen@alum.mit.edu>

	* objects/UML/activity.c : add fill- and line-colour properties
	[applied by Hans Breuer, fixes bug #163260]

2004-01-28  Hans Breuer  <hans@breuer.org>

	* doc/en/*.xml doc/en/dia.dbk app/authors.h : documentation
	update provided by Alan Horkan (fixes bug #159592)

2004-01-28  Hans Breuer  <hans@breuer.org>

	[Extented version for UML to C++ conversion by Dave Klotzbach, bug #155255]
	* plug-ins/xslt/dia-uml2cpp.xsl : (new file) ... handles associataions,
	generalization, dependancies, parameterized classes ...
	* plug-ins/xslt/styleshetts.xml : refernce it
	* plug-ins/xslt/dia-uml.xsl : handle more UML types uesd above

2004-01-28  Hans Breuer  <hans@breuer.org>

	* objects/UML/transition.c : fill out the extra_spacing struct 
	in the OrtConn member, in order to avoid artifacts when draggin 
	the transition. (patch by Peter Allin, bug #144956)

2004-01-15  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/diacairo.c : initialized the renderers default dash_length
	to something differnt than 0. Apparently there are case where Dia misses
	to appropriately set it before requesting a dashed line (simple line with
	arrow as described in bug #151716)

	* lib/dia_dirs.c : special casing for drive letters which I broke with
	the previous change

2005-01-13  Hans Breuer  <hans@breuer.org>

	* app/interface.c(create_sheet_page) : remved dead long time code

	* lib/propdialogs.c : removed pdtpp_is_visible_no_standard() prototype,
	it is availbale via header - which is the better style anyway

2004-12-31  Hans Breuer  <hans@breuer.org>

	* lib/dia_dirs.c(dia_get_canonical_path) : complete
	rewrite to handle something like /mnt/some/where/../else
	too. Workaround for bug #162637.
	* app/filedlg.c : call gtk_file_chooser_set_current_name()
	to workaround gtk_file_chooser_set_filename() not setting
	it if the file does not exist

	* sheets/Jackson.sheet.in app/menus.c : fixed typos
	(Frank Arnold, bug #161676)

2004-12-31  Steffen Macke <sdteffen@gmail.com>

	* doc/pl/*.xml: Added XML prolog
	* makefile.msc: Added libxslt, fixed libxml, libart

2004-10-29  Alexander Shopov  <ash@contact.bg>

	* configure.in (ALL_LINGUAS): Added "bg" (Bulgarian)

2004-12-29  Lars Clausen  <lars@raeder.dk>

	* configure.in: Make gnomeprint be truly off by default (typo) and
	show optional compilation correctly.
	* plug-ins/gprint/Makefile.am: Exclude gnomeprint if not optioned in.

2004-12-22  Hans Breuer  <hans@breuer.org>

	* lib/widgets.c : destroy handlers can be called more than once, 
	see http://developer.gnome.org/doc/API/2.0/gtk/gtk-changes-2-0.html

	* app/app_procs.c : #ifdef GLIB(2.6.0) but GTK(2.4.x)
	
	* app/display.c : temporary debug code showing the
	timing the rendering

	* app/dialibartrenderer.c(draw_string) : removed dead
	code loading and leaking font and face

2004-12-15  Hans Breuer  <hans@breuer.org>

	* app/display.c : actually use the selction-changed signal for something
	useful. Show selections representation on statusbar.
	* lib/object.h lib/prop_text.c lib/libdia.def : provide objet_get_displayname() 
	* app/diagram_tree.c : use new function (as in app/display.c) and only
	poke into property internals at one place
	* app/diagram.c : use g_signal_handlers_block_by_func to avoid has-no-handler-
	complains

2004-12-12  Hans Breuer  <hans@breuer.org>

	* lib/libdia.def app/dia.def : updated externals

	* objects/custom/custom_object.c : custom_destroy is called per object. 
	It _must not_ destroy class stuff (ShapeInfo) cause it does not hold a 
	reference to it. Fixes e.g. bug #158288, #160550, ...

	* objects/UML/association.c(association_draw) : completed porting to
	draw_polyline_with_arrows()
	(association_update_data_end) : fixed typo in point compare
	(association_update_data) : for name placement take degenerated 
	segements into account. Together this fixes bug #143891

2004-12-11  Hans Breuer  <hans@breuer.org>

	* lib/widgets.c(set_size_sensitivity) : revert inverted
	logic for arrorw size selections, fixes bug #160527

2004-12-11  Hans Breuer  <hans@breuer.org>

	* lib/widgets.c(dia_font_selector_set_font) : initialize
	the font style widget, too. Gets rid of empty font
	style and thus default broken font style, e.g. UML::class_name

	* lib/widgets.c(dia_color_selector_more_callback) : fill
	the color palette from dynamic menu entries and also
	preselect the current color to the last select entry
	
	* plug-ins/python/pydia-diagramdata.c : hold a reference
	to the underlying GObject
	
	* app/Makefile.am app/diagrid.h : new file containing the 
	grid 'class' moved from DiagramData to Diagram. 
	Also moved pagebreak_color and guides cause they are only 
	used for visual appearance not 'data'.
	* lib/diagramdata.[ch] app/diagram.h app/dia-props.c app/grid.c
	  app/load_save.c plug-ins/python/pydia-diagramdata.c : reflect 
	the above change

	* lib/diagramdata.[ch] app/app_procs.c app/diagram.c 
	  lib/libdia.def : get rid of new_diagram_data() 
	Diagram _is_ DiagramData (and does not have one any longer,
	just a compatibility pointer)
	
	* lib/diarenderer.h : a small doc improvement

2004-12-11  Hans Breuer  <hans@breuer.org>

	* objects/UML/class.c : line wrapping code buffer
	overrun fixed by Gabor Simon, bug #160865

2004-12-11  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/pydia-diagram.c : hold a reference
	to the diagram in PyDiaDiagram, avoids bug #159080
	[another way to avoid is to detroy the dialog by
	clsoing it. But now there is still a diagram to
	apply the changes to, even if it's thrwon away just
	afterwards]

2004-12-10  Hans Breuer  <hans@breuer.org>

	* **/*.c : fixed a bunch of warnings, not only for -ansi
	(still too many of them, but -ansi works)
	lib/
	prop_geomtypes.h prop_geomtypes.c:306: warning: static 
	declaration for `fontsizeprop_reset_widget' follows non-static
	dia_dirs.c:196: warning: return discards qualifiers from 
	pointer target type

	objects/custom/
	shape_info.c:121: warning: static declaration for `parse_path' 
	follows non-static

	objects/SADT/
	arrow.c:228: warning: `draw_arrowhead' declared `static' but never defined
	arrow.c:244: warning: unused variable `i'
	arrow.c:245: warning: unused variable `p'
	arrow.c:246: warning: unused variable `zzr'
	
	object/Istar/*.c object/Jackson/*.c  object/KAOS/*.c : 
	finally removed c++ comments
	
	objects/Istar/goal.c : initialize connections::directions
	while I was there - helps autorouting

	* objects/KAOS/metaandorrel.c objects/Istar/link.c 
	  objects/KAOS/metabinrel.c : removed struct _DiaImage hack
	(it would be quite simple to add image-from-memory support
	to lib/ if needed)

	* pydia-*.h : warning: no newline at end of file
	
	* plug-ins/gprint/diagnomeprint.c : allow to unregister
	and follow new unique name naming convention
	* plug-ins/gprint/diagnomeprintrenderer.c : no c++ comments
	here either

2004-12-07  Hans Breuer  <hans@breuer.org>

	* objects/UML/message.c : better default for initial text placement
	a suggested in bug #154306, Henning Mersch
	* objects/UML/constraint.c : doing the same

	* app/filedlg.c : include persistence.h for persistence_get_integer
	* lib/libdia.def export it

2004-12-05  Hans Breuer  <hans@breuer.org>

	* app/grid.c : respect dynamic grid during snap-to, fixes 
	bug #135124, Dmitriy Morozov. Added some additional magic
	to make the grid size more useable.

2004-12-05  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : make it compile for the HAVE_POPT and
	G_LIB_CHECK_VERSION(2,5,5) case, minor formating
	
	* lib/plug-ins.c : don't pass non exiting files to xmlDiaParseFile()
	* app/app_procs.c : only dia_pluginrc_write() and create_user_dirs()
	when interactive. Fixes bug #119329
	  
	* plug-ins/cairo/diacairo.c : adapt to new type naming
	scheme (introduced by accident;-) for pixbuf-*
	* app/app_procs.c : reflect both type name changes

2004-12-04  Hans Breuer  <hans@breuer.org>

	* objects/standard/image.c : fix the correct warning
	`image_file_name' might be used uninitialized
	
	* app/filedlg.c : near complete rewrite
	- removed 'related dialog', GtkOptionMenu, most global vars,
	also don't hide the dialog but let it go.
	- added: filter view by extension, hopefully working diagram
	referencing, GtkComboBox usage
	
	* plug-in/pixbuf/pixbuf.c : switched to dynamic generation
	of im/export filter entries. So the user interface reflects
	the dynamic nature of pixbuf loaders

	* lib/filter.[ch] : implement filter_unregister_*port
	  lib/libdia.def : added new functions
	  plug-ins/cgm/cgm.c plug-ins/dxf/dxf.c
	  plug-ins/hpgl/hpgl.c plug-ins/metapost/metapost.c
	  plug-ins/pstricks/pstricks.c plug-ins/svg/svg.c
	  plug-ins/wpg/wpg.c plug-ins/xfig/xfig.c
	  plug-ins/cairo/cairo.c plug-ins/pixbuf/pixbuf.c :
	use them in _plugin_unload () thus all these plug-ins
	can be loaded used and unloaded during Dia's runtime

2004-12-04  Lars Clausen  <lars@raeder.dk>

	* lib/diagramdata.h: Access methods for units defined per diagram.

	* lib/font.c (dia_font_new_from_style): More proper object creation.

	* lib/properties.h: Refactored the PROP_STD_* macros to allow
	different options.

	* app/diagram.c (diagram_init): Force filename to be absolute
	path, easing the job for load/save.

2004-12-03  Hans Breuer  <hans@breuer.org>

	* lib/libdia.def : removed dia_marshal_*, they are implemented as macros.
	added dia_font_set_height, dia_font_copy (note to self: don't try to
	maintain these from the *NIX side ;)

	* lib/widgets.h : removed DiaColorSelector::col, it is not maintained by
	the new color selection anymore
	* objects/UML/class_dialog.c : with the above change it would have been more 
	easy to fix the color loss bug #156996 which had nothing to do with 'a pointer
	problem' but only was an unfinished usage of dia_color_slector(get|set)_color

	*  objects/UML/class_dialog.c  objects/UML/class.[ch] : uml_apply_properties
	(used in object vtable) and make its prototype match

	* lib/widgets.c : made all the GtkTypeInfo 'static const'. I can't directly
	correlate any of these strange crashing bug with it, but assume bad things to 
	happen when one passes stack allocated stuff to gtk_type_unique()

	* lib/widgets.c(dia_font_selector_get_font) : don't access menuitem if it is
	not there. Fixes most of the warnings from bug #156996

	* lib/makefile.msc : rules to generate diamarshal.[ch]

2004-11-29  Hans Breuer  <hans@breuer.org>

	* app/disp_callbacks.c : reenable so-called preedit
	as described in bug #158859, Etsushi Kato
	Also fixed some compiler warnings while there.
	
	* objects/standard/image.c(get_directory) : make
	the documentation match the implementation.
	(image_save) : don't write a leading slash on 
	relative filenames 

	* plug-ins/gprint/diagnomeprintrenderer.c :
	switched to gnome-print-pango usage
	
	* app/app_procs.c configure.in : although Dia
	is not threaded it appears as if we have to
	g_thread_init() to avoid crashing in some
	libraries which are thread enabled

	* lib/diamarshal.list lib/Makefile.am : start of
	using GSignal to clean up some object relations
	* lib/libdia.def : export marshallers
	* app/diagram.[ch] : emit signals when REMOVED,
	SELECTION_CHANGED
	* app/display.c : added a connection to 
	SELECTION_CHANGED to test the new signal stuff
	
	* app/diagram.c : fixed diagram_finalize while I
	was there.

2004-11-28  Hans Breuer  <hans@breuer.org>

	* plug-ins/wmf/wmf.cpp(draw_string) : write the widechar version of 
	the text if conversion to current locale fails. [This is actually
	using code written four years ago;]
	* plug-ins/wmf/wmf_gdi.(h|cpp) : added TextOutW (no real implemantation)

	* objects/standard/image.c(image_load) : be more robust against 
	filenames which seem to be absolute

2004-11-27  Hans Breuer  <hans@breuer.org>

	* app/filedlg.c(file_save_callback) : convert to
	filename encoding before passing to diagram_save()
	Fixes bug #158381, thanks to Robert Ögren

2004-11-27  Hans Breuer  <hans@breuer.org>

	* lib/dialibartrenderer.c : sometimes its good to read
	compiler warnings. Not only define renderer_finalize
	but actually *use* it. Should plug a potential huge
	memory leak.

	* configure.in plug-ins/Makefile.am 
	  plug-ins/gprint/Makefile.am : build the experimental
	gnomeprint plug-in on *NIX, too.
	* plug-ins/gprint/diagnomeprint.c : don't include
	specific (private) backend headers but instead select
	the desired backend via config key setting

	* lib/diagdkrenderer.c : add 1 to size of filled arc 
	to be rendered by gdk. Fixes bug #150896.

	* plug-ins/gprint/diagnomeprint.c 
	  plug-ins/gprint/diagnomeprintrenderer.c : added magic
	to better match page and dash sizes

2004-11-27  Hans Breuer  <hans@breuer.org>

	* plug-ins/shape/shape-export.c : it's g_strdup_printf

2004-11-27  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : mention eps-builtin aka. "using
	latin1", does not fix the eps-pango issues but #150571

2004-11-27  Hans Breuer  <hans@breuer.org>

	* sheets/Cybernetics.sheet.in : changed encoding to 
	utf-8, patch from Takeshi AIHANA, fixes #149580

2004-11-27  Hans Breuer  <hans@breuer.org>

	* objects/custom/custom_object.c : many existing shapes
	rely on a square default size, revert to it although
	it originally was by a typo. Fixes bug #148527.

2004-11-27  Hans Breuer  <hans@breuer.org>

	* app/load_save.c(dia_cleanup_autosave) 
	  app/diagram.c : don't use dia->filename if already 
	freed and dont use printf at all.

	* app/paginate_psprint.c : not only set the renderer::paper
	but also renderer::is_portrait. Should fix bug #142524

2004-11-26  Hans Breuer  <hans@breuer.org>

	* dia.desktop.in : added Bug Buddy headers (as seen
	in planner). Hopefully the automatically filling of
	bugs is more meaningful by this.
	
	* objects/custom/custom_util.c objects/standard/image.c
	  lib/plug-ins.c : getting rid of deprecated g_dirname,
	fixes some more memory bugs : AddrAddress 0x3586C010 is 24 
	bytes inside a block of size 44 free'd
	
	* lib/persistence.c(persistence_load_list) : don't
	leak string
	
	* lib/diaerror.[ch] : (new file) start of better error handling
	* lib/Makefile.am lib/makefile.msc lib/libdia.def: 
	added new files/funcs
	* lib/proplist.c lib/propinternals.h (prop_list_load) : 
	allow to propagate error to caller. Also set PXP_NOTSET
	to avoid applying unset properties, fixes bug #155255
	* lib/propobject.c lib/prop_sdarray.c : still spewing
	g_warnings but now with context information
	
	* app/filedlg.c : more absolute filenames where required
	and strip them where we need the filename only
	Also explicit DONT choose gnome-vfs backend cause its
	threading appears to crash Dia - at least in GNOME build,
	see bug #159558

2004-11-26  Hans Breuer  <hans@breuer.org>

	* app/filedlg.c : don't use relative filenames for
	gtk_file_chooser_set_filename(), GtkFileChooserDialog is very
	pedantic about it.
	(export_set_extension) : if we don't have a filename don't
	use it in strrchr() to avoid crashing
	
2004-11-23  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : fixed build for the GNOME case
	(let's rip out POPT and depend on glib-2.6, please ;-)

2004-11-23  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : fixed typo which broke the
	build for HAVE_POPT case
	
2004-11-21  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : some more #if-mess, but one day
	we should rely on GLib's 2.6 Option Parser alone
	
	* plug-ins/wmf/wmf.cpp : use SC() when scaling width
	and height for RoundRect() - otherwise size depends on offset,
	shorten the unique name
	
	* plug-ins/python/diamodule.c : provide a unique name
	for python filters as well

	* lib/dialibartrenderer.c : fix the drawing of Gdk based text
	by using the right colors (need black background cause we
	are tinitng it with the real color later)

	* lib/dia_dirs.c(dia_get_canonical_path) : use G_DIR_SEPARATOR_S
	instead of hardcoded slahes, improved portability 

	* app/paginate_gdiprint.cpp : use the right filter name to find wmf
	plug-in. Also added some more error reporting (e.g. no printer driver)

	* plug-ins/gprint/diagnomeprintrenderer.[hc] plug-ins/gprint/diagnomeprint.c
	  plug-ins/makefile.msc : resurrection of the gnome print renderer. 
	Kinda works (alpha quality) for export but does not print yet. 
	With bug #158972 resolved this does even work on win32 :-)

2004-11-07  Hans Breuer  <hans@breuer.org>

        * doc/diagram.dtd : <composite> can have <composite/>,
	<font/> has two 'optional' atributes 'style' and 'family',
	these are used to store new (since 0.91) font info.
	With this changes non of the issues in bug #147431 remains.

	* plug-ins/python/otypes.py : starting to implement an
	'create all known object' file as ne stress test source
	for the dtd and Dia in general.

2004-11-06  Hans Breuer  <hans@breuer.org>

        * app/diapsrenderer.c : don't convert to locale but to 
        "LATIN1", fixes bug #146641

2004-11-06  Hans Breuer  <hans@breuer.org>

	* app/diagram_tree.c : still no C99 everwhere ...
	* lib/libdia.def : update externals
	* plug-ins/pstricks/render_pstricks.c : #include <locale.h>

	* app/app_procs.[hc] : declare, use ...
	   app/winmain.c : ... and implement dia_redirect_console().
	Even though newer Gtk version don't popup a console window
	anymore redirecting the error messages to a file in $TEMP appears
	to be much more reasonable than just ignoring it. Fixes bug #150777
	based on a patch from Steffen Macke

2004-11-06  Hans Breuer  <hans@breuer.org>

        * plug-ins/wmf/wmf.cpp plug-ins/wmf/wmf_gdi.* : added/used
        RoundRect() for high level renderer api implementation thus
        fixing bug #138744 reported by Lars Clausen

2004-11-06  Hans Breuer  <hans@breuer.org>

        * app/prefernces.c : applied patch to make showing the diagram 
        menubar the default (advanced users know how to switch it off)
        Fixes bug #150706, Steffen Macke

2004-11-06  Hans Breuer  <hans@breuer.org>

        * app/commands.c app/commands.h : added view_fullscreen_callback()
          view_unfullscreen()
          app/menus.c : use it (/View/Fullscreen) thus fixing bug #94090
        * app/disp_callbacks.c : use view_unfullscreen() for GDK_Escape
        ALso modified to allow handling of unmodified keys again (aren't
        there plenty of bug reports for this?

2004-11-06  Hans Breuer  <hans@breuer.org>

        * objects/UML/class_dialog.c : fixed casts for usage
        of dia_color_selector_set_color()
        
        * app/filedlg.c : pass a valid filenames to 
        gtk_file_chooser_set_filename(), if we don't have a name
        don't call it at all. Gets rid of "libgnomevfs-CRITICAL **: 
        file gnome-vfs-utils.c: line 749 (gnome_vfs_get_uri_from_local_path): 
        assertion `local_full_path[0] == '/'' failed"
        
2004-11-06  Lars Clausen  <lars@raeder.dk>

	* app/properties.c (create_dialog): 
	* app/diagram_tree_window.h: 
	* app/diagram_tree.h (HIDDEN_TYPES_NAME): 
	* app/diagram_tree_menu_callbacks.c: 
	* app/diagram_tree_window.c: 
	* app/diagram_tree_menu.c: 
	* app/diagram_tree.c: Changed to use persistence instead of
	strange hacks in preferences.

	* lib/persistence.h:
	* lib/persistence.c (persistent_list_get_glist): Don't deref null
	pointer.  New function persistent_list_remove_all, and
	fixed persistent_list_remove to ... work!

2004-11-05  Lars Clausen  <lars@raeder.dk>

	* app/paginate_psprint.c (diagram_print_ps): Call
	diagram_print_destroy on destroy rather than delete_event.  That
	way the gtk_widget_destroy() calls cleans up properly.  Fixes bug
	#154898. 

2004-11-02  Lars Clausen  <lars@raeder.dk>

	* objects/UML/class.c (umlclass_load): Actually load the saved
	fonts and font sizes. Fixes bug #157016

	* configure.in: Require at least GTK+ 2.4.

	* app/filedlg.c: Changed to use 2.4 file dialog!  Finally,
	finally, finally.  Not quite bulletproof yet, and I need to figure
	out a minimum version of Gtk that doesn't spew warnings all over.

	* app/diagram.[ch]: diagram_set_filename with const filename.

	* app/sheets_dialog_callbacks.c
	(on_sheets_dialog_button_apply_clicked): Sheet menu now almost
	correctly recreated.  Still something fishy with the sheet menu in
	the dialog after adding a new sheet.  Probably the sheet name
	being stomped.

2004-11-01  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.[ch] (dia_dynamic_menu_reset): Harden against memory
	stmping.  Now requires g_free here and there.

	* app/preferences.[ch] (prefs_data): Got rid of hidden prefs value
	for remembering last sheet, better off as persistent string.  Must
	hunt down other things like that.

	* app/interface.c (create_sheets): Now remembers last sheet
	selected again. Fixes bug #157036.

2004-11-01  Hans Breuer  <hans@breuer.org>

        * plug-ins(tex_escape_string) : fixed it [g_utf8_next_char
        will never become NULL but only point to the next char
        which might indeed be \0]
        Use tex_escape_string() to avoid writing invalid tex,
        fixes bug #112377

        * **/* : a bunch of changes caused by trying 'make distcheck'
        which still fails, see Bug #144527

2004-10-31  Lars Clausen  <lars@raeder.dk>

	* plug-ins/pstricks/render_pstricks.c (export_pstricks): Avoid
	floating point numbers being printed with commas.  Fixes bug
	#156148.
	
	* app/interface.c (create_sheet_dropdown_menu): New function to
	create the sheet menu, and also allow recreation.  Still buggy and
	slightly prone to magic.

	* objects/UML/class_dialog.c
	(attributes_list_selection_changed_callback): Don't try to update
	the widgets after they're destroyed.  Fixes bug #156706 (I think).

	* lib/widgets.c (dia_unit_spinner_new): Avoid crash on NULL
	adjustement.  Fixes bug #154637

	* sheets/ER/Makefile.am (PIX): 
	* sheets/GRAFCET/Makefile.am (PIX): 
	* sheets/Jackson/Makefile.am (PIX): 
	* sheets/Istar/Makefile.am (PIX): 
	* sheets/KAOS/Makefile.am (PIX): Actually install PNG instead of
	XPM.  Why these have their pictures in sheets rather than shapes I
	don't know.  Fixes bug #152142.

2004-10-31  Hans Breuer  <hans@breuer.org>

        * plug-ins/pixbuf/pixbuf.c : when running non interactive
        Dia won't call color_init() as it assumes no display. If
        we have one as tested ourselve we can as well color_init()
        to avoid g_warnings() and produce the right collors.
        Fixes bug #155495.
    
        * app/app-procs.c : try to be a little more helpful
        and correct with regard to the command line options.
        Renamed --export-to-format to --export-filter and some
        other string changes

2004-10-31  Hans Breuer  <hans@breuer.org>

        * plug-ins/wmf/wmf_gdi.cpp plug-ins/wmf/wmf_gdi.h :
        added GetDeviceCaps() dummy implementation to make 
       'wmf' compile on Linux, too.

2004-10-31  Hans Breuer  <hans@breuer.org>

	* plug-ins/wmf/wmf.cpp : patch from Robert Ögren <gtk@roboros.com>
	to finally fix the long lasting clipping issue, bug #85831
	Also fixed the line style issue for printing on XP and don't 
	miss to ReleaseDC()

	* plug-ins/wmf/wmf_gdi.[hc] : added ReleaseDC()

	* plug-ins/python/diasvg.py : filter illegal characters from <text/> section
	(e.g. &lt; instead of <), fixes bug #155697 (Duncan Palmer)

	* plug-ins/python/pydia-error.[hc] : improvede exception handling to transfer 
	some info from the console (soon gone on windoze) to message_error()
	* plug-ins/python/pydia-render.c plug-ins/python/diamodule.c : use it.
	Also some setlocale() hack to let Python behave as expected for LC_NUMERIC

	plug-ins/python/diasvg_import.py : re.compile() only once per expression
	and some more playing with scaling

	* plug-ins/python/makefile.msc : updated

2004-10-30  Hans Breuer  <hans@breuer.org>

        * shapes/Civil/civil_arrow_right.shape : removed
        <aspectratio type="fixed" /> thus allowing to change
        width and height independently, fixes #154897 
        (Serge Robinson) by making it consistent with the
        up arrow

2004-10-30  Hans Breuer  <hans@breuer.org>

        * plug-ins/xfig-xfig-export.c(hasArrow) : don't crash
        on arrow being NULL, fixes bug #143063

2004-10-30  Hans Breuer  <hans@breuer.org>

        * lib/diagramdata.c app/diagram.c app/disp_callbacks.c
          plug-ins/python/pydia-diagram.c plug-ins/python/pydia-diagramdata.c :
        removed use of chached variable DiagramData::selected_count
        * lib/diagramdata.h : renamed to selected_count_private
        (kept for binary compatibility and sanity checks)
        * lib/diagramdata.c : more checks on a screwed up selection list

        * app/diagram.c(diagram_group_selected) : don't screw up the
        DiagramData::selected list, was assignment of parent_list_affected(),
        * lib/diagramdata.c (data_select, data_unselect) : protect against
        multiple selections of the same object and removement of a not selected
        object (apparently caused by the recently added group undo stuff)
        together with the above this finally fixes bug #153525

        * app/Makefile.am : fix ./autogen.sh ->
        app/Makefile.am:171: blank line following trailing backslash

        * app/commands.c(objects_group_callback,objects_ungroup_callback) :
        ddisplay_do_update_menu_sensitivity() here as well

        * configure.in : make the experimental state of the cairo plug-in
        more visible
        
        * app/dia-props.c(diagram_properties_update_sensitivity) : don't
        try to update anything if we can't find an active diagram
        Additionally set static dialog pointer to NULL by gtk_widget_destroyed
        
        * configure.in : another attempt to fix bug #156116. If there is
        anyone with autotools knowledge reading this - help appreciated ;-)

2004-10-30  Hans Breuer  <hans@breuer.org>

	* objects/makefile.msc objects/UML/Makefile.am
	  objects/UML/uml.c objects/UML/transition.c 
	  objects/UML/pixmaps/transition.xpm sheets/uml.sheet.in : 
	Patch from Peter Allin adds statechart transitions to the UML sheet -
	bug #144956 - modified to not print("%s", NULL) which crashes on
	newer glib versions. Also added pixmap/transition.xpm to Makefile.am

2004-10-30  Hans Breuer  <hans@breuer.org>

	* doc/sheet.dtd doc/diagram.dtd : the namespace does *not* 
	match the website anymore, i.e. sould remain unchanged. 
	See below and lib/dia_xml.h for the reasoning

	* lib/libdia.def : removed dia_color_selector_get_type

	* lib/dia_image.c(dia_image_load) : check for pixbuf warnings
	(like broken PNG) and g_warning if appropriate

	* app/interface.c : #include "message.h"

	* app/diaunitspinner.hc : replaced the superfluous #if-0-juggling,
	used #error "Moved to lib/widgets.[hc]" instead (IMO it would be
	better to just move diaunitspinner to lib/ instead of polluting
	widgets.[hc] even more ;)
	* app/makefile.msc lib/libdia.def : updated

	* app/filedlg.c : patch from gtk@roboros.com, fixes #156224
	* app/app_procs.c : patch from gtk@roboros.com, fixes #156088

	* config.h.win32 : #define HAVE_CAIRO to let the Cairo plug-in
	do something useful when compiled

	* plug-ins/cairo/diacairo.c : added 'PNG with alpha' rendering.
	Also some more #ifdefed backends usage.

2004-10-10  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.c: Better labels for color selector menu.

	* app/dia-props.c (diagram_properties_respond): 
	* app/preferences.c (prefs_get_value_from_widget): Don't assume
	that a dia color selector is of type DiaColorSelector:)

	* lib/widgets.[ch]: Color selector changed to dynamic menu.

	* lib/prop_attr.c (colorprop_set_from_widget): Don't assume
	DiaColorSelector. 

2004-10-09  Lars Clausen  <lars@raeder.dk>

	* lib/diaarrowchooser.c (dia_arrow_preview_init): Slightly wider
	arrow preview to avoid long arrow heads flipping.

	* lib/arrows.[ch]: Support for getting from name to arrow type,
	and for listing all arrow names.
	
	* lib/widgets.[ch]: Changed arrow selector to use dynamic menu.

	* lib/libdia.def: Added new global functions.

	* lib/persistence.[ch]: Two of the persistent_list functions to
	return whether the item was found in the list.

	* app/interface.c (create_sheets): Use DiaDynamicMenu to handle
	the growing number of sheets.

	* lib/widgets.[ch]: Add DiaDynamicMenu as a generalization of the
	font menu.

2004-10-05  Lars Clausen  <lars@raeder.dk>

	* objects/UML/association.c: Patch from Harvey Thompson
	<harveyandsu@yahoo.com>:  Better placement of association texts.

2004-10-03  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.c (dia_font_selector_add_menu_item): Make font menu
	use the fonts in question.  Can't set tooltips with the name since
	lib objects don't know the tool_tips thing, which is rather
	app-related.

2004-09-19  Hans Breuer  <hans@breuer.org>

        * plug-ins/xslt/*.xsl : s/apply-templates match/apply-templates select/
        fixes bug #148278, carlosrp@idea.com.py (Carlos Ra�l Perasso)

2004-09-19  Hans Breuer  <hans@breuer.org>

        * dia.desktop.in : string changes as proposed in bug #151822
        
        * lib/Makefile.am : remove -module from libdia_la_LDFLAGS,
        appearts not to be needed on Linux and breaks the build 
        on OSX. Fixes bug #152970
        
2004-09-18  Lars Clausen  <lars@raeder.dk>

	* app/commands.c (view_show_all_callback): Add a bit of border
	around Ctrl-E'd diagram, for easier select and better view of edges.

2004-09-19  Hans Breuer  <hans@breuer.org>

        * app/Makefile.am : trying to fix the fix from 2004-02-15
        Overwriting AM_LDFLAGS still gave a automake warning and it 
        also appeard to break linking against gtklibs in a differnt 
        prefix. Use dia_LDFLAGS instead.

        * plug-ins/svg/svg-import.c : initialize 'end' before usage
        patch from dcbw@redhat.com (Dan Williams), fixes bug #150548
        
        * lib/diarenderer.c : don't try to draw lines which are so much 
        degenerated that their point count became negative, fixes bug #148139
        
        * lib/font.c(layout_cache_equals) : don't crash on nonexisting 
        strings (NULL from g_strdup()) 

2004-09-10  Steffen Macke <sdteffen@web.de>

	* lib/libdia.def: added color_new_rgb(), focus_previous(),focus_next(),
	give_focus(),give_focus_to_object(),remove_focus(),reset_foci()
	* app/create_object.c:
	* app/diaunitspinner.c:
	* app/disp_callbacks.c:
	* app/makefile.msc:
	* app/modify_tool.c:
	* lib/prop_geomtypes.c:
	* lib/prop_geomtypes.h: made compile with msvc

2004-09-10  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.c: Insulate conversion from outside API by adding
	internal function to set value.  Adjustment not appropriate for
	units yet.

	* lib/prop_geomtypes.c (lengthprop_get_widget): Remove debug info

2004-09-07  Lars Clausen  <lars@raeder.dk>

	* app/diapagelayout.c: Include from widgets.c rather than
	diaunitspinner.

2004-09-03  Lars Clausen  <lars@raeder.dk>

	* objects/standard/box.c: Use PROP_TYPE_LENGTH for corner_radius
	as unit-based property testbed.

	* lib/prop_geomtypes.c (lengthprop_reset_widget): Implement length
	and fontsize widgets. 

	* app/Makefile.am (dia_core_files):
	* app/diaunitspinner.h: 
	* app/diaunitspinner.c: 
	* lib/widgets.h: 
	* lib/widgets.c (dia_unit_spinner_update): Move diaunitspinner to
	lib/widgets.[ch], as it's used in the properties code now.

2004-08-31  Steffen Macke <sdteffen@web.de>

	* doc/en/usage-objects-basic.xml: Mentioning supported image formats.

2004-08-30  Lars Clausen  <lars@raeder.dk>

	* app/textedit.c: 
	* app/diagram.c (diagram_remove_all_selected): Remove debugging
	information. 

	* lib/color.[ch]: 
	* app/undo.c: 
	* app/disp_callbacks.c: 
	* app/Makefile.am: 
	* app/create_object.c: 
	* app/textedit.[ch]: 
	* app/modify_tool.c: 
	* app/diagram.c: 
	* lib/text.c: 
	* lib/focus.[ch]: Change in focus mechanism to allow highlight of
	current input object, multiple inputs per object, and tabbing
	between objects.

2004-08-28  Steffen Macke <sdteffen@web.de>

	* makefile.msc: added bs to ALL_LINGUAS; adjusted .mo file creation to
	allow separate installer component "Translations"

2004-08-27  Akagic Amila  <bono@linux.org.ba>

        * configure.in: Added 'bs' to ALL_LINGUAS.

2004-08-26  Steffen Macke <sdteffen@web.de>

	* app/makefile.msc: using /subsystem:windows again
	* makefile.msc: updated ALL_LINGUAS

2004-08-21  Kjartan Maraas  <kmaraas@gnome.org>

	* configure.in: Add «nb» to ALL_LINGUAS.

2004-08-21  Steffen Macke <sdteffen@web.de>

	* plug-ins/dxf/dxf-export.c: Patch from 
	Takeshi Hamasaki <hma@syd.odn.ne.jp>, fixes text alignment

2004-08-17  Lars Clausen  <lars@raeder.dk>

	* config.h.win32: 
	* dia.spec (Release): 
	* doc/pl/dia.xml: 
	* doc/en/dia.xml: 
	* NEWS: 
	* configure.in: 

2004-08-13  Ankit Patel <ankit@redhat.com>

	* configure.in: Added "gu" in ALL_LINGUAS.

2004-08-07  Lars Clausen  <lars@raeder.dk>

	* configure.in:
	* config.h.win32: 
	* doc/pl/dia.xml: 
	* doc/en/dia.xml: 
	* dia.spec (Release): 
	* NEWS: New release 0.94-pre6

2004-08-07  Lars Clausen  <lars@raeder.dk>

	* app/highlight.c (highlight_reset_objects): Unhighlight inside
	groups as well.

	* app/load_save.c: 
	* plug-ins/shape/shape-export.c: String capitalization fix from
	Alan Horkan <horkana@tcd.ie>

	* objects/UML/class.c (umlclass_show_comments_callback): Make UML
	Class object menu kinda work, rather than blow up.  Doesn't do a
	proper undoable change yet.

2004-08-06  Lars Clausen  <lars@raeder.dk>

	* app/filedlg.c (file_save_as_callback): Don't remove related
	dialogs from the NULL diagram.

2004-08-02  Lars Clausen  <lars@raeder.dk>

	* config.h.win32: 
	* doc/pl/dia.xml: 
	* doc/en/dia.xml: 
	* dia.spec (Release): 
	* NEWS: Pre5 with leak fix.

	* lib/font.c (dia_font_build_layout): Don't try to save an
	allocation of LayoutCacheItem if it breaks layout cache hash.
	Also make hash function correct, remove explicit height entry
	(it's in pfd), and make sure things are correctly unreffed.
	Finally fixes #148141.

	* lib/text.c (text_set_attributes, text_set_font): Safely unref
	when changing font, and actually set the new font in
	text_set_font(!).
	(text_get_attributes): Ref copied font.

2004-08-01  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* configure.in: 
	* dia.spec (Release): 
	* config.h.win32: 
	* doc/pl/dia.xml: 
	* doc/en/dia.xml: Prerelease 4.

	* lib/font.c (dia_font_build_layout): Better comparision and
	freeing of font cache.

2004-07-31  Lars Clausen  <lars@raeder.dk>

	* lib/font.c (dia_font_build_layout): Faster update to avoid
	memory leaks.

	* app/app_procs.c: Fix from Tom Parker <palfrey@bits.bris.ac.uk>:
	Correctly initialize export filter variable.

2004-07-25  Lars Clausen  <lars@raeder.dk>

	* dia.spec (Release): 
	* configure.in: 
	* NEWS: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: Pre3 coming out.

	* lib/diarenderer.c (draw_polygon): 
	* plug-ins/dxf/dxf-export.c (export_dxf): Two fixes by Takeshi
	Hamasaki <hma@syd.odn.ne.jp>: Correct header to be a 0 (zero)
	rather than O (letter), and assert num_points > 1 rather than the
	other way around.

	* app/recent_files.c: 
	* app/filedlg.c: 
	* app/diagram.c: 
	* app/app_procs.c: Patch from Vitaly Lipatov <lav@altlinux.ru>:
	Make filenames conform to filesystem encoding.

	* RDP/.cvsignore: Added standard ignore.
	
	* shapes/network/Makefile.am (SHAPES): Use PNG instead of XPM for
	last entry patch-panel, too.

	* app/*.png:
	* shapes/Circuit/*.png:
	* shapes/Civil/*.png:
	* shapes/Contact/*.png:
	* shapes/Electric/*.png:
	* shapes/MSE/*.png:
	* shapes/Pneumatic/*.png:
	* shapes/SDL/*.png:
	* shapes/flowchart/*.png:
	* shapes/jigsaw/*.png:
	* shapes/network/*.png:
	* shapes/sybase/*.png:
	* samples/dia*.png:
	* dia_gnome_icon_large.png:
	* doc/pl/graphics/*.png: Set -kb for PNGs.
	
	* sheets/{ER,GRAFCET,Istar,Jackson,KAOS}: Added .png files.

2004-07-22  Lars Clausen  <lars@raeder.dk>

	* NEWS: 
	* config.h.win32: 
	* doc/en/dia.xml: 
	* doc/pl/dia.xml: 
	* dia.spec (Release): 
	* configure.in: Update to version 0.94-pre2.

	* app/load_save.c (diagram_data_write_doc): Use new namespace
	here, too.

	* lib/object.h (OBJECT_COMMON_PROPERTIES): Remove 'Dia' from
	hidden objects properties.

	* objects/standard/line.c: Remove halffinished line gap box from
	properties list.

	* app/paginate_psprint.c: 
	* app/filedlg.c: Patch from kimmidi@novell.com (Kiran Kumar
	Immidi): Close export and print dialog with diagram as well.
	(#129520)
	
	* lib/diaarrowchooser.[ch]: Patch from pborelli@katamail.com (paolo
	borelli):  Remove deprecated stuff (#137693)

	* app/dia-props.c (create_diagram_properties_dialog): Patch from
	kimmidi@novell.com (Kiran Kumar Immidi):  Close properties dialog
	on destroy.

2004-07-21  Ray Strode  <rstrode@redhat.com>

	* dia/dia.desktop.in: Add MimeType line to desktop file
	new mime sytem.

2004-07-18  Hans Breuer  <hans@breuer.org>

	* shapes/(Circuit|Contatct|MSE|network|Pneumatic|SDL|sybase)/Makefile.am 
	  sheets/UML/*.png : icons in png format
	Partial fixup of stuff broken with the following comment:
	"7 days : xpm->png, namespace fix, first rotation bits."

	* app/load_save.c(read_objects) : don't add objects to the layer.
	This function is called recursively and only the topmost objects
	belong in the layers object list. Fixes bug #145417 and is the
	the real fix for bug #142480
	
	* app/app_procs.c : make the --size hack even uglier, but work again
	
	* lib/dia_dirs.c(dia_get_absolute_filename) : must not free()
	but g_free() what is returned by g_build_filename()
	
	* objects/custom/custom_object.c(custom_destroy) : handle all enum
	values in switch to get rid of the warning
	
	* objects/custom/shape_info.c : use g_ascii_strtod(), get rid 
	of setlocale()/strtod()
	* lib/dia_svg.c : dito
	* lib/dia_xml.c : almost

	* plug-ins/python/group_props.py : use the string representation of 
	value to ensure "unique values". If the strings would not be different
	the user cann't see the difference either

2004-07-17  Lars Clausen  <lars@raeder.dk>

	* lib/persistence.h: Have "void" in prototypes (#142663)

	* lib/widgets.c (dia_font_selector_init): Better string handling
	(#142663) 

	* lib/persistence.c (persistence_save_type): Small fixes (#142663)

	* objects/standard/image.c (image_load): Use path of diagram
	rather than running directory as base for image file place.

	* doc/{diagram,sheet}.dtd: Move DTD namespace to new site, and
	syntactic fixes. 
	
	* app/disp_callbacks.c (ddisplay_canvas_events): Patch from
	Ambrose Li <a.c.li@ieee.org>:  Better IM context handling.

	* Re-added new sample diagrams binarily.

2004-07-17 Sagar Rastogi <rastogi@students.iiit.net>

	* app/disp_callbacks.c: Fixed #144962 (also in KNOWN_BUGS),
	Disabled keyboard accels when dragging an object.	

2004-07-14  Lars Clausen  <lars@raeder.dk>

	* app/grid.c (snap_to_grid): Use diagrams grid setting to
	determine hex grid snap.

	* doc/pl/Makefile.am: Avoid error based on backslash in comment.
	
	* app/interface.h: Avoid multiply defined symbols (#147396)

2004-07-10  Lars Clausen  <lars@raeder.dk>

	* app/sheets_dialog_callbacks.c (write_user_sheet): 
	* lib/sheet.c (load_register_sheet): Don't introduce double
	slashes in namespace.

	* lib/dia_xml.h (DIA_XML_NAME_SPACE_BASE): Keep consistent with
	old diagrams, or XSLT will barf all over.
	
	* shapes/RDP/place.shape: 
	* shapes/RDP/transition.shape: 
	* shapes/RDP/Makefile.am: Added .png entries to SHAPES and changed
	shapes to use those.

2004-07-07  Lars Clausen <lars@raeder.dk>

	* config.h.win32: 
	* doc/{en,pl}/dia.xml: 
	* dia.spec: 
	* configure.in: 
	* NEWS: First prerelease of version 0.94.  Now with release
	versions in a branch and main devel in the trunk.

2004-07-05  Hans Breuer  <hans@breuer.org>

	* */*.[hc] */*/*.c : a bunch of changes to make Dia compile with
	-std=c89. Mostly //-comments and M_PI -> G_PI
	[Istar, Jackson, KAOS were removed from build cause they
	simply have *too* much C++ comments ;]
	* object/UML/association.c : use g_strdup() not plain strdup()
	* app/paginate_psprint.c : avoid storage size of `pipe_action' 
	isn't known with more portable signal code
	
	* app/app_procs.c : don't call gtk_init() if just --version
	is requested (bug #144321, Vladimir Kondratiev)
	
	* lib/prop_attr.c(fontprop_set_from_offset) : only unref 
	DiaFont* if not NULL
	* objects/UML/class.c : moved fill_in_fontdata() to 
	umlclass_load() to avoid such trouble, though unsure if
	this really is an improvement...
	
	* shapes/network/makefile.am : patch-panel added here too

2004-07-04  Hans Breuer  <hans@breuer.org>

	* sheets/network.sheet.in shapes/network/patch-panel.xpm
	  shapes/network/patch-panel.xpm : added 24-Port-Patch-Panel
	fixes bug #136629, James McDonald

2004-07-04  Hans Breuer  <hans@breuer.org>

	* lib/persistence.c app/load_save.c app/sheet_dialog_callbacks.c
	  lib/object_defaults.c : revert changing of Dia's XML namespace
	* lib/dia_xml.h : #define DIA_XML_NAME_SPACE_BASE with a comment
	about its purpose and relation to real world urls.

	* lib/plug-ins.h : increment DIA_PLUGIN_API_VERSION and 
	added comment about when to do so
	[Should have been long time ago and probably multiple times
	to avoid crashing on older plug-ins]
	* RELEASE-PROCESS : mention DIA_PLUGIN_API_VERSION
	* plug-ins/xslt/xslt.c : use DIA_PLUGIN_CHECK_INIT

	* lib/object.c objects/UML/class.c : there are still compilers not 
	supporting C99 and other GCCISMs like allocating dynamic sized arrays 
	on the stack
	* objects/UML/class.h : there is a differnce between a list pointer
	and a list pointer pointer. We and GLib want the former.

	* plug-ins/pixbuf/pixbuf.c : don't use app_is_interactive () to detect
	if Gtk is initialized. Using gdk_display_get_default () avoids the
	app/* dependency and is also closer to the requirements of the
	plug-ins working.

	* plug-ins/cairo/diacairo.c : initialize "unique name" field. Also
	some #ifdefed support for Cairo backends not public available yet.

	* plug-ins/wmf/wmf.cpp : finally do extended linestyles if the
	windoze platform supports them. This should fix bug #109818, at
	least for the majority running NT or above ...
	* plug-ins/wmf/wmf_gdi.[hc] : portability stuff for the above

	* objects/makefile.msc : build Istar, Jackson and Kaos

	* objects/UML/class.c(umlclass_load) : don't wrap by default to 
	keep old diagrams as they were - instead of this nice new effect ;-)
	Also make "wrap_operations" PROP_TYPE_BOOL in PropDescriptions

	* objects/UML/class.c : mark for translation _("Wrap ...

	* objects/UML/class.c : more correct types, also some default properties
	dialog pages adjustment (triggering a bug in lib/prop_widgets.c ?;)

	* objects/UML/activity.c : removed a leftover from the 
	use-localization-for-font-substitution-hack

	* shapes/ChemEng shapes/Cybernetic shapes/Map/Isometric :
	'cvs admin -kb *.png' PNG files should already be *added* as binary,
	otherwise they are not readable on line-end-converting-platforms

	* plug-ins/python/use g_new0(Dia<Im|Ex>portFiler), avoids crashing 
	filter_get_by_name()

	* plug-ins/python/pydia-property.c : some more g_warnings for
	not implemented conversions

	* plug-ins/python/group_props.py : ensure unique property values
	at the right place. Now something like :
	- load an old UML class diagram
	- change one of the classes to wrap operations
	- select all classes (/Select/Same Type)
	- /Dialogs/Group Properties : check wrap_operations, select '1'
	- Ok, works like a charm :-)

2004-07-04  Lars Clausen  <lars@raeder.dk>

	* lib/diagdkrenderer.c (draw_string): Don't unref NULL
	pixbuf. (#145362)
	
2004-07-03  Lars Clausen  <lars@raeder.dk>

	* app/app_procs.c (do_convert): Two patches from Vitaly Lipatov
	<LAV@VL3143.spb.edu>: Fixes console output problems and some
	interactiveness problems.

2004-07-02  Lars Clausen  <lars@reader.dk>

	* plug-ins/pixbuf/pixbuf.c (dia_plugin_init): Don't load if the
	app isn't interactive.

2004-07-01  Lars Clausen  <lars@raeder.dk>

	* plug-ins/cairo/diacairo.c: Add init of last field of filter
	struct to remove crash.

	* sheets/Makefile.am (sheet_in_files): 
	* shapes/Makefile.am: 
	* sheets/ChemEng.sheet.in: 
	* shapes/ChemEng/Makefile.am: 
	* configure.in: 
	New sheet from "Federico Zenith" <zenith@chemeng.ntnu.no>:
	Chemical engineering shapes.
	
	* app/Makefile.am (run_dia.sh$(EXEEXT)): Changed $* to $@ to allow
	multiple arguments when using devel script.

	* app/display.c (new_display): 
	* app/dia-props.c: 
	* lib/diagramdata.c (new_diagram_data): 
	* lib/diagramdata.h: 
	* app/preferences.h: 
	* app/preferences.c: 
	* app/grid.c: 
	* app/diagram.c: 
	* lib/diagramdata.c (new_diagram_data): Patch from Peter Poulsen
	<peter_poulsen@stofanet.dk>: Add hexagonal grid!

	* HACKING: 
	* doc/pl/authors.xml: 
	* doc/en/authors.xml: 
	* lib/object_defaults.c (dia_object_defaults_save): 
	* readme.win32 (BTW): 
	* lib/persistence.c (persistence_save): 
	* app/load_save.c (diagram_data_write_doc): 
	* app/commands.c (help_about_callback): 
	* README: Fix links to home page.

	* lib/font.c: 
	* app/load_save.c (diagram_data_load): 
	* lib/prop_text.c (stringprop_load): Avoid NULL strings when
	loading, and guard against them when fonting.

	* lib/diarenderer.c (draw_rounded_polyline): Patch from
	anthonym@overture.com:  Make limited rounding a corner-specific
	rendering-only thing.

2004-06-30  Lars Clausen  <lars@raeder.dk>

	* lib/font.c (dia_font_build_layout): Return to 0.93.1 font size
	adjustment: If you can't fix it, at least don't change it.

	* objects/SADT/arrow.c (sadtarrow_draw): Use new rounded arrow
	code instead of individual code in here.

2004-06-29  Lars Clausen  <lars@raeder.dk>

	* objects/UML/association.c: Patch from Kiran
	Kumar Immidi <kimmidi@novell.com>:  Fix bounding box for line end
	text. 

	* lib/geometry.c: 
	* lib/geometry.h: 
	* lib/diarenderer.c (draw_rounded_polyline): 
	* objects/standard/polyline.c (polyline_draw): 
	* objects/standard/zigzagline.c (zigzagline_draw): 
	Patch from anthonym@overture.com:  Add rounded polylines.

2004-06-27  Lars Clausen  <lars@raeder.dk>

	* lib/font.c (dia_font_new_from_style): Initialize legacy name.

	* lib/widgets.c (dia_font_selector_get_family_from_name): Don't
	free family list before taking out the pointer we need. Also set
	the entry_nr correctly so we get the menu set up right.

2004-06-23  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.c (dia_toggle_button_new_with_images): Sink the
	images at the right place.

	* objects/Istar/actor.c
	* objects/Istar/goal.c
	* objects/Istar/istar.c
	* objects/Istar/istar.h
	* objects/Istar/link.c
	* objects/Istar/other.c
	* objects/Jackson/domain.c
	* objects/Jackson/jackson.c
	* objects/Jackson/jackson.h
	* objects/Jackson/phenomenon.c
	* objects/Jackson/requirement.c
	* objects/KAOS/goal.c
	* objects/KAOS/kaos.c
	* objects/KAOS/kaos.h
	* objects/KAOS/metaandorrel.c
	* objects/KAOS/metabinrel.c
	* objects/KAOS/other.c: Patch from Patch from Christophe Ponsard
	<cp@cetic.be>: Fix instability issues caused by not returning NULL
	in *_move_handle and *_move.  Also improved the headers with
	correct (c) information.

2004-06-22  Lars Clausen  <lars@raeder.dk>

	* objects/KAOS/goal.c:
	* objects/KAOS/other.c:
	* objects/Istar/actor.c:
	* objects/Istar/goal.c:
	* objects/Istar/other.c:
	* objects/Jackson/domain.c:
	* objects/Jackson/phenomenon.c: Patch from Christophe Ponsard
	<cp@cetic.be>: Fix resize issues.

	* app/filedlg.c (file_dialog_hide): Patch from Kiran
	Kumar Immidi <kimmidi@novell.com>: Check for null when removing
	related dialog. #129520.

	* app/dia-props.c (diagram_properties_show): Patch from Kiran
	Kumar Immidi <kimmidi@novell.com>: Make sure properties dialog is
	a child of its diagram. #129520.

	* objects/UML/association.c (association_load): Patch from Kiran
	Kumar Immidi <kimmidi@novell.com>: Update positions properly for
	text placement. #118313.

2004-06-17  Lars Clausen  <lars@raeder.dk>

	* objects/KAOS/Makefile.am: Add pixmaps/goal.xpm to EXTRA_DIST

	* Makefile.am: Make THANKS only be generated by maintainers.

	* doc/pl/Makefile.am: Removed usage+objects+basic.xml from
	Makefile, too.

	* configure.in: Added three missing Makefiles.

	* app/diagram.[ch]: 
	* app/filedlg.c:
	Patch from shuveb@yahoo.com (Shuveb Hussain): Remove
	diagram-related (save) dialog when closing diagram.  To be
	extended to other dialogs.

	* doc/pl/dia.xml: Removed reference to objects-basic. (#144527)

	* samples/Istar.dia:
	* samples/Jackson.dia:
	* samples/KAOS.dia:
	* sheets/Istar.sheet.in:
	* sheets/Jackson.sheet.in:
	* sheets/KAOS.sheet.in:
	* sheets/Istar/*:
	* sheets/Jackson/*:
	* sheets/KAOS/*:
	* objects/Istar/*:
	* objects/Jackson/*:
	* objects/KAOS/*:
	* configure.in: 
	* objects/Makefile.am (SUBDIRS): 
	* sheets/Makefile.am (SUBDIRS): 
	* samples/Makefile.am: Additions from Christophe Ponsard
	<cp@cetic.be>: Jackson, I* and KAOS diagram support.  Needs a bit
	of hacking still.

2004-06-12  Lars Clausen  <lars@raeder.dk>

	* lib/properties.h: 
	* lib/prop_geomtypes.[ch]: Preparation for selectable units.

	* lib/font.h: Toning down comments a bit:)

	* lib/font.c (dia_font_build_layout): Playing around with DPI 

	* objects/UML/association.c (association_load): Avoid crashes on
	strcmp with NULL.

	* objects/UML/association.c: Patch from kimmidi@novell.com:
	Improve placement of labels when vertical.  Part fix of #118313

	* lib/object.c (dia_object_is_selected): Grouped objects are not
	selected, only the group itself.  Thus, don't crash when grouping
	beziers. #143681

	* objects/UML/association.c: Patch from kimmidi@novell.com:  Agree
	on how to represent empty strings.  Fixes #143639.

	* lib/object.c (dia_object_is_selected): Added comment answer.

2004-06-12  Hans Breuer  <hans@breuer.org>

	* lib/diagramdata.c lib/object.c : deal with grouped objects
	not knowing their parent_layer, i.e. avoid crashing in 
	dia_object_is_selected() via group_draw() [ Triggered by
	playing with the Visio generated svg from bug #143455 ]

	* plug-ins/python/diasvg_import.py : started to implement
	transformation="translate(...)" and <style/> handling. Also
	use some other completely bogus values for em/ex scaling
	
2004-06-08  Lars Clausen  <lars@raeder.dk>

	* plug-ins/cairo/.cvsignore: CVS-ignore generated makefiles.

2004-06-07  Lars Clausen  <lars@raeder.dk>

	* app/layer_dialog.c (layer_dialog_set_diagram): 
	* app/display.c: Layer widget crash more properly dealt with in
	layer dialog code.
	
	* app/display.c (ddisplay_flush): Fixed crash when closing:  Layer
	widget deselect was called during destroy, but called
	ddisplay_flush, leading to a new display timeout after renderer
	was dead.

	* lib/widgets.c (dia_toggle_button_destroy): 
	* app/recent_files.c (recent_file_menuitem_create): 
	* lib/persistence.c (persistence_save_list): 
	* app/commands.c (edit_delete_callback): 
	* lib/object_defaults.c (dia_object_defaults_save): 
	* lib/parent.c (parent_list_affected_hierarchy): Killed leaks
	(#142669)
	
	* lib/widgets.c (dia_toggle_button_new_with_images): Remove
	debugging info.

	* lib/diagramdata.c (new_layer): Initialize connectibility.

	* app/display.c (ddisplay_obj_render): 
	* app/diagram.c (diagram_find_closest_connectionpoint): Take
	connectibility into account.

	* app/layer_dialog.h (struct _DiaLayerWidget): 
	* app/layer_dialog.c:
	Connectible toggle updates, now works fairly well.

	* app/select.c (select_transitive_callback): Make sure we're only
	selecting in the same layer.

2004-06-04  Lars Clausen  <lars@raeder.dk>

	* app/pixmaps/Makefile.am: Also install connectable images.
	
	* app/layer_dialog.c (dia_layer_update_from_layer): Initially set
	layer toggles from layer itself.  Also update diagram correctly
	for visibility.  Still need updates for connectivity behaviour.

2004-06-03  Hans Breuer  <hans@breuer.org>

	* plug-ins/wpg/wpg.c(draw_image) : take rowstride into account

	* lib/diagdkrenderer.c(set_linejoin) : actually set
	join_style not cap_style
	(set_dashes): with the correct number of dashes

2004-06-03  Lars Clausen  <lars@raeder.dk>

	* app/modify_tool.c (click_select_object): 
	* lib/text.c (text_set_cursor): 
	* app/disp_callbacks.c (ddisplay_canvas_events): Turn off text stuff.

2004-05-31  Hans Breuer  <hans@breuer.org>

	* lib/object_defaults.c : don't 'failed to load external 
	entity "NULL"' when the defaults file does not exist, 
	bug #108764 [again: somehow this got lost]

	* app/paginate_gdiprint.cpp : don guess the WMF export 
	filter used for printing but find it by unique name.
	Also update for export_func renaming
	* plug-ins/wmf/wmf.cpp plug-ins/cairo/diacairo.c
	provide some unique names

	* app/commands.c app/disp_callbacks.c app/paginate_psprint.c 
	  app/select.c : fix bug #140789 by always checking if there
	still is an active diagram before accessing it

	* app/defaults.c app/properties.c : user visible string should 
	not read DiaObject but stay as "Object defaults/properties"

	* app/app_procs.c : reduce the hack to pass --size to the
	export via user_data to the only filter supporting it. Other
	filters would crash on it or do worse ;(

	* plug-ins/wpg/wpg.c : not every 'Object' is a DiaObject ...

2004-05-31  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.h: 
	* lib/widgets.c: Use GtkType rather than guint for
	dia_size_selector_get_type. 

2004-05-29  Lars Clausen  <lars@raeder.dk>

	* app/diapsrenderer.c (fill_bezier): Use even-odd winding rule so
	that it matches the screen output for selfoverlapping polygons and
	beziers. 

2004-05-28  Hans Breuer  <hans@breuer.org>

	* app/load_save.c : ignore empty groups on load and don't
	write empty groups while saving
	* lib/group.h (group_update_data): there is no first object
	in empty groups and they probably don't need an update at 
	all. Maybe the shold just not exist ?

	* plug-ins/cairo/diacairo.c : fixed arc drawing, right aligned
	text positioning as well as drawing of images with alpha

	* plug-ins/wmf/wmf.cpp : include windows.h if eiher
	HAVE_WINDOWS_H or G_OS_WIN32 is defined

2004-05-28  Lars Clausen  <lars@raeder.dk>

	* app/pixmaps/Makefile.am (imagedir): 
	* app/pixmaps/visible.png:
	* app/pixmaps/visible-empty.png: New images for the visibility
	button in the layer dialog.

	* lib/widgets.c (dia_toggle_button_new_with_images): Remove even
	more border around the button.  Still some left when hovering the
	mouse or selecting, and the grey background is annoying.

	* app/layer_dialog.c (dia_layer_widget_init): Use real buttons for
	visibility connector.

2004-05-26  Lars Clausen  <lars@raeder.dk>

	* configure.in (DB2MAN): Better check for db2man docbook place.
	Need something even better.

	* doc/en/Makefile.am (dia.1): Conditional on having DB2MAN.

	* lib/widgets.c (dia_toggle_button_new_with_images): Remove
	extraeneous borders.

	* dia_logo.png:
	* dia_gnome_icon.png:
	* samples/render-test.dia: Rendering test from Hans.

2004-05-24  Hans Breuer  <hans@breuer.org>
 
        * lib/filter.h : renamed DiaExportFilter::export to
	_DiaExportFilter::export_func (should not use c++ 
	keywords (g++ specifc ?) in headers. Same for import
	out of pure symmetry reasons
	* plug-ins/shape/shape-export.c plug-ins/python/diamodule.c
	  app/diagram.c app/filedlg.c : reflect functions renaming

	* plug-ins/wmf/Makefile.am : finally compile the wmf plug-in
	under *NIX, too. [If you want something done, do it yourself ;-]
	* plug-ins/wmf/wmf_gdi.[hc] : some more stuff to catch up
	with wmf.cpp's GDI usage
	* plug-ins/wmf/wmf.cpp : compile even without HAVE_WINDOWS_H,
	[For the moment it does not much more than compiling, i.e. 
	the produced WMF files are invalid, if not created on windoze.]

	* configure.in : check for C++ to compile plug-in/wmf
	
	* objects/GRAFCET/boolequation.c : looks like fixing 
	another leak (untested)

2004-05-23  Hans Breuer  <hans@breuer.org>
 
        * acinclude.m4 : another attempt to fix 
	bug #142032 (still not sure it's the right one,
	but works for me(tm), which the other does not ;)
	
	* plug-ins/cairo/Makefile.am
	  plug-ins/Makefile.am 
	  configure.in : support building the new cairo
	plug-in, if given --with-cairo and the cairo
	packages are found, see http://cairographics.org
	and also http://hans.breuer.org/dia/dia-cairo.htm

	* plug-ins/cairo/diacairo.c : make it compile
	with DEBUG_CAIRO defined, too.

2004-05-23  Hans Breuer  <hans@breuer.org>

	* plug-ins/cairo/Makefile.am : initial attempt

	* plug-ins/cairo/diacairo.c : a new exporter based on
	Cairo http://cairographics.org rendering api. Currently
	it just can export PNG and PS but one day it might get
	PDF and more almost for free. [It is not yet included
	in the *NIX build system due to lack of auto* magic.]

	* plug-ins/pixbuf/pixbuf.c : always register the export
	filter part. If the user does not want it it can be 
	disabled by File/Plugins or explicit selected the other
	one in the Export Formats List

2004-05-23  Hans Breuer  <hans@breuer.org>

	* lib/dia_dirs.c : #include "message.h"
	  lib/widgets.c : #include "persistence.h"
	  lib/widgets.c(dia_font_selector_init) : still not C99
	  lib/persitence.h : removed unimplemented prototype
	  lib/persitence.c(persistence_load_list) : still not C99
	  app/create_object.c : #include "highlight.h"
	  app/layer_dialog.c : #include "widgets.h"
	  app/modify_tool.c : prototype functions before usage
	  lib/object.c : if there is G_END_DECLS there _must_ be G_BEGIN_DECLS
	[otherwise one will have a hard time to make C++ compile ;]
	  lib/dia_dirs.c : #include "message.h"
	  lib/font.c : #include <gtk/gtk.h> /* just for gtk_get_default_language() */
	  lib/

	* plug-ins/xfig/xfig-import.c : dont initialize an int with
	a string pointer

	* lib/dia_image.[hc](dia_image_rgba_data) : make it work
	as documented, i.e. _not_ copying. Plugs a memory leak in
	lib/dialibartrenderer.c

	* lib/diarenderer.c(*_rounded_rect) : renamed parameter rounding
	to radius to more of a clue what it is representing

	* */makefile.msc lib/libdia.def : updated

	ChangeLog : fixed some date copy&paste bug

2004-05-21  Lars Clausen <lars@raeder.dk>

	* NEWS: Release tag.

	* config.h.win32: Now 0.93+cvs

	* RELEASE-PROCESS: Update with new info about release branches.
	
	* Many files:  Moved devel branch back into main trunk.  Should
	have been done in the opposite way, with release in a branch.  
	
2004-05-20  Hans Breuer  <hans@breuer.org>
 
        * acinclude.m4 : disable setting of PYTHON_PREFIX
	and PYTHON_EXEC_PREFIX from prefix and exec_prefix
	as workaround for bug #142032 (the real fix would 
	involve some auto* knowledge which I don't have
	either;)
	
	* plug-ins/python/Makefile.am : more python 
	plug-ins to be installed (especially svg import,
	but also 'simple scale' should be useable 
	sometimes)
	
	* plug-ins/python/scascale.py : update display
	after modifying selected objects
	
	* plug-ins/python/diasvg_import.py : initialize
	stroke to none
	
2004-05-18  Lars Clausen  <lars@raeder.dk>

	* app/diagram_tree.c (select_node): Use
	diagram_remove_all_selected to kill selected list.

	* lib/font.c: Set language when using a different context.

	* plug-ins/svg/svg-import.c: Changed isdigit to g_ascii_isdigit
	and removed ctype include (#142661).

	* lib/paper.c (get_default_paper): Changed isalnum to
	g_ascii_isalnum and removed ctype include. (#142661)

	* objects/custom/shape_info.c: 
	* lib/dia_svg.c: 
	* app/diaunitspinner.c: Removed unrequired ctype.h include. (#142661)

2004-05-17  Hans Breuer  <hans@breuer.org>

	* lib/object_defaults.c : don't 'failed to load external 
	entity "NULL"' when the defaults file does not exist, 
	bug #108764

	* lib/widgets.c : fixed possible menu leak
	* lib/dialinechooser.c lib/diaarrowchooser.c : finally
	avoid finalization of floating references, bug #142307

2004-05-15  Lars Clausen  <lars@raeder.dk>

	* plug-ins/xfig/xfig-import.c: Handle default fonts and illegal
	fonts better (#138655)
	
	* doc/pl/Makefile.am (EXTRA_DIST): Also include all xml files here.

	* doc/en/Makefile.am (EXTRA_DIST): Including all required files in
	dist, xml, dbk and man.  Also the sub-xml files. (#142098)

	* Makefile.am (CLEANFILES): 
	* sheets/Makefile.am (EXTRA_DIST): Not distributing the
	translation-reports, they are generated automagically.  THANKS
	file not considered locally generated, so is not locally
	cleaned. (#133735) 

	* lib/widgets.[ch]: Changing dia_arrow_selector to be a gobject.

	* lib/diaarrowchooser.c: 
	* lib/prop_attr.c: Fixing naming for arrowselector.

	* objects/UML/object.c (objet_type): Oops, little too aggressive
	with the DiaObject thing here:)

	* objects/custom/shape_info.c (parse_svg_node): Use
	g_ascii_isdigit instead of isdigit.

	* app/diaunitspinner.c (dia_unit_spinner_update): 
	* lib/dia_svg.c (dia_svg_parse_style): Using g_ascii_isspace
	instead of isspace avoids char subscript issues (#142467).

	* lib/persistence.c (persistence_get_string): Fixed 0/NULL/FALSE
	return value conflict.

	* app/display.c (ddisplay_update_handler): Fixed 0/FALSE return
	value conflict.  Also improved signature. (#142466)

	* app/load_save.c (diagram_data_load): Don't overwrite the list in
	the layer, but instead free the returned list (#142480)

	* app/pixmaps/Makefile.am (IMAGES): Added png's to be installed
	for the grid widget.

	* doc/en/Makefile.am (dia.1): Make proper rule for making dia.1

	* configure.in (DB2MAN): Currently just check for two known
	positions for the docbook xsl.  Don't know a generic way to find
	this info.  Ought to add an option for it, but then it's really
	only required for maintainers, I think.  Maybe.

	* app/display.c (update_snap_grid_status): Remove nasty image
	toggling code not require for grid toggle button anymore. (#142475)

	* app/interface.c (create_display_shell): Use
	dia_toggle_button_new_with_images to create grid toggle button.
	Much nicer. (#142475)

	* app/menus.c (menus_initialize_updatable_items): Free the string
	along with the GString. (#142475)

	* lib/intl.c (free_alias_table): Free hash table entries in a
	proper way, avoiding duplicate frees. (#142475)

	* lib/object_defaults.c (_obj_store): Only free layer_name if it's
	not put in the hash (avoid reading freed memory). (#142476)

	* lib/widgets.c (dia_font_selector_set_styles): Stop leaking
	faces. (#142484)
	(dia_font_selector_get_family_from_name): Stop leaking
	families. (#142482) 

2004-05-14  Lars Clausen  <lars@raeder.dk>

	* Transfer of fixes from release branch.  Not the prettiest way to
	do it, this should be done during release, not afterwards.

	Tomasz Kłoczko <kloczek@pld.org.pl>:

	* acinclude.m4: minor fixes (added missing [] quotation).

	Lars Clausen  <lars@raeder.dk>:

	* app/interface.c (toolbox_delete): 
	* app/app_procs.[ch] (app_exit): Stop the delete event if the user
	cancels quit due to modified diagrams.

	Samúel Jón Gunnarsson  <sammi@techattack.nu>:

	* is.po: Added "is" to ALL_LINGUAS.

	Lars Clausen  <lars@raeder.dk>:

	* dia.spec: Updated as per mail from Zhang Lin-bo <zlb@lsec.cc.ac.cn>

	Hans Breuer  <hans@breuer.org>:

	* lib/makefile.msc : removed -DGTK_DISABLE_DEPRECATED; the 
	burden should be shared and not be win32 only ;) [this time 
	build was broken by adding GtkType to widget.h]

	* objects/standard/box.c objects/standard/ellipse.c :
	for code clarification compare (obj->aspect != FREE_ASPECT)
	and not (obj->aspect); no binary effect.

	* app/paginate_psprint.c : don't leak printcmd

	* objects/standard/box.c objects/standard/ellipse.c : fix gccisms :
	standard C requires variables to be declared at the beginning of 
	a block, also there is no fabsf() with msvc
	
	* app/win32print.[ch] : make win32_printer_close() return an
	error code, it's used as pclose replacement

	Lars Clausen  <lars@raeder.dk>:

	* RELEASE-PROCESS: Mention PATCH keyword in release process.

2004-05-06  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.[ch]: Utility function to make a widget with two
	images (selected and non-selected).

	* lib/diagramdata.h: Renamed selectable to connectable.
	Selectable will come later.

	* configure.in: 
	* app/pixmaps/Makefile.am (imagedir): 
	* app/pixmaps/connectable.png:
	* app/pixmaps/connectable-empty.png: New images for the
	selectability widget.  Proper installation, too.

	* app/layer_dialog.[ch]: Adding new button showing connectability
	status.  Much cleaner way of doing the button, but some problems
	with the item getting selected

	* lib/widgets.h: Reminder of how to install images for use by
	dia_get_image_from_file.

2004-05-05  Lars Clausen  <lars@raeder.dk>

	* objects/network/Makefile.am: 
	* objects/network/pixmaps/radiocell.xpm: 
	* objects/network/pixmaps/basestation.xpm: 
	* objects/network/network.c: 
	* objects/network/basestation.c: 
	* objects/network/radiocell.c: 
	Patch from W. Borgert <debacle@debian.org>: Radio cell and base
	station objects.

	* lib/arrows.[ch]: Patch from Anthony <anthonym@overture.com>:
	Backslash arrow head. 

	* app/pagesetup.c (pagesetup_respond): Do not free ps twice.
	Notify takes care.  Should maybe use that more.

	* lib/diagramdata.[ch]: 
	* app/filedlg.c (file_export_ok_callback): 
	* app/diagram.c (diagram_finalize): DiagramData now a GObject.

	* app/dia-props.c (diagram_properties_respond): 
	* app/diagram.c (diagram_set_modified): 
	* app/undo.c: 
	* app/disp_callbacks.c: 
	* app/commands.c: 
	* app/load_save.c (diagram_save): 
	Better handling of undo and modified status -- only diagram
	properties and page setup explicitly set modified status, all
	other important changes should be done through the undo stack
	now.

2004-05-04  Lars Clausen  <lars@raeder.dk>

	* app/app_procs.c (app_init): Consistently open a new diagram if
	none specified, with standard name Diagram1.dia.

	* app/layer_dialog.c: 
	* app/diagram.c (diagram_finalize): 
	* app/commands.c (dialogs_layers_callback): 
	* app/filedlg.c (file_export_ok_callback): 
	* app/app_procs.c (app_exit): 
	* app/display.c (display_set_active): 
	* app/interface.c (dia_dnd_file_drag_data_received): 
	* app/recent_files.c: 
	Undone attempt at unifying the multi-diagram windows (like
	layers).  It broke the layers and didn't make much sense for the
	diagram properties dialog anyway.

	* lib/group.c: 
	* lib/diatypes.h: 
	* lib/diagramdata.c: 
	* lib/object.h: 
	* lib/object.c: Undone attempts at GObject'ifying DiaObject -- too
	many subclasses have to be fixed.  Fixed remaining
	Object/ObjectType renaming issues.

2004-05-02  Lars Clausen  <lars@raeder.dk>

	* lib/object.[ch]: Making DiaObject a GObject.  Now can I avoid
	  having to make all the children objects conform to
	  GObject style at once?  Warning!  Does not compile right now.

	* many, many files: Rename Object to DiaObject in preparation for
	  making it a GObject.
	
	* app/diagram.[ch]: Turn diagram into a real GObject.

	* app/pagesetup.c: 
	* app/filedlg.c: Correctly ref and unref diagram. 

	* lib/diagramdata.h: Starting to turn it into a GObject as well.

2004-05-02  Lars Clausen  <lars@raeder.dk>

	* lib/object.[ch]: Starting to convert Object to DiaObject, son of
	GObject. 

	* app/dia-props.c: Undo the attempt at making it really
	multi-diagram, now going for a one-diagram dialog.

2004-04-30  Lars Clausen  <lars@raeder.dk>

	* app/undo.c: Undoing broken undo stuff for diagram properties and
	page setup.  Shouldn't be mixed into undo at all.

	* app/render_gdk.c (draw_pixel_line): Use the dash-setting
	function to avoid in particular the grid crawling.

	* lib/diagdkrenderer.[ch] (dia_gdk_renderer_set_dashes): Function
	to allow aligning dashes, so they don't crawl.

2004-04-28  Lars Clausen  <lars@raeder.dk>

	* app/Makefile.am: New files diacanvas.[ch]

	* app/interface.c (create_display_shell): Use new diacanvas that
	allows placing widgets on canvas, for text edit.

	* lib/object.h: 
	Early work towards rotation.  No implementation yet.

	* app/layer_dialog.c (undo_layer): 
	* objects/network/bus.c (bus_create_change): 
	* objects/standard/box.c (aspect_create_change): 
	* objects/standard/ellipse.c (aspect_create_change): 
	Use g_new0 for change struct.

	* app/undo.c (diagram_change_apply_or_revert): 
	Support for undo of diagram properties and page setup.

	* app/disp_callbacks.c (ddisplay_canvas_events): 
	* lib/text.h: 
	* lib/diagramdata.h: 
	* app/modify_tool.c (click_select_object): 
	* lib/text.c (text_register_editable): 
	Starting work on new text editing model.  Guarded by #ifdef so
	far. 

2004-04-07  Lars Clausen  <lars@raeder.dk>

	* app/recent_files.c (open_recent_file_callback): 
	* app/interface.c (origin_button_press): 
	* app/filedlg.c (file_open_ok_callback): 
	* app/display.c: 
	* app/diagram.[ch]: 
	* app/commands.c (dialogs_layers_callback): Using new
	diagram_set_current() function to ensure auxilliary windows are
	updated. 

	* app/layer_dialog.c: Trying to unify with dia-props.  Diagram
	menu now borken.  *sniff*

	* app/dia-props.c: Diagram properties window attempted
	persistentified.  Trying to make more like layer dialog (since it
	already changes when the diagram changes), but some things still
	borken.	

2004-04-06  Lars Clausen  <lars@raeder.dk>

	* lib/dialinechooser.[ch] (dia_line_chooser_set_line_style): 
	* lib/attributes.c (attributes_set_default_line_style): 
	* app/interface.c (create_lineprops_area): 
	Make line style persistent as well.  Added function to directly
	set the style and dashlength of a dialinechooser. 

2004-04-03  Lars Clausen  <lars@raeder.dk>

	* objects/standard/ellipse.c (ellipse_move_handle, ellipse_copy):
	Copy the ellipse extra handle correctly.

	* objects/standard/box.c (box_move_handle): Move definitions
	according to bug #138925.

2004-04-02  Lars Clausen  <lars@raeder.dk>

	* app/recent_files.c: Use absolute name for recent files list.

	* lib/attributes.c: Set start and end arrow types, correctly.

	* lib/widgets.c (dia_arrow_selector_set_arrow): Use new function
	to get arrow index.

	* lib/diaarrowchooser.[ch]: Support for setting arrow info.

	* app/interface.c (create_lineprops_area): Set persistently stored
	arrow info.

	* lib/arrows.[ch]: New function to get arrow index (in arrow_types)
	from arrow type.

	* lib/dia_dirs.c: dia_get_absolute_path now creates a canonical
	path (i.e. without '.' or '..').  Not tuned for Win32 yet.

	* plug-ins/xfig/xfig-import.c: Redone ordering of import to comply
	with what xfig does.  Text now converted from latin-1 to utf-8
	(latin-1, since that's what xfig seems to use.  Would like to see
	examples of non-latin-1 figs).  String case problems fixed.

2004-04-01  Lars Clausen  <lars@raeder.dk>

	* lib/attributes.c: 
	* app/interface.c: Default arrows now stored persistently, too.

	* lib/arrows.[ch]: New function to get arrow type from name.

	* app/color_area.c (color_area_create): 
	* lib/attributes.c: 
	* app/linewidth_area.c: Also persistent colors and line width.
	That was easy.  Arrows and line style will take a bit more work,
	but not much.

2004-04-01  Lars Clausen  <lars@raeder.dk>

	* app/preferences.c:   All preferences are now
	handled by persistence, old prefs load and store code is gone.

	* lib/persistence.[ch]: Added string and color persistents.  This is
	a different string from the one used in the printer dialog, that
	one has a GtkEntry attached -- may want to make that one an
	encapsulation of this one or something.

2004-03-31  Lars Clausen  <lars@raeder.dk>

	* app/app_procs.c: Do persistence before prefs.  Prefs are to be
	phased out anyway.
	
	* lib/persistence.[ch]: 
	* app/preferences.c: Adding persistence for integers, reals,
	booleans.  Fixed stupid list bug.  Test persistence for prefs.

2004-03-30  Lars Clausen  <lars@raeder.dk>

	* app/recent_files.c: 
	Debugging of deallocation.
	
	* lib/widgets.c: 
	Font menu now uses persistence.  Ordering needs fixing, or it must
	be sorted.

	* lib/libdia.def: 
	* lib/Makefile.am (libdia_la_SOURCES): 
	* app/Makefile.am (dia_core_files): 
	* app/persistence.[ch]: 
	* lib/persistence.[ch]: Moved to lib as widgets need it.  Also a
	number of fixes, including multiple entries now being read
	properly.  Still some oddity about the persistent list having the
	role as first entry (which makes the font menu crash after a few
	iterations). 

2004-03-26  Lars Clausen  <lars@raeder.dk>

	* app/persistence.c:
	* app/recent_files.[ch]: Redoing the recent-files list using
	persistence, reducing code by about 50%.  Still a problem when
	selecting an item from the menu -- possibly it doesn't like the
	menu being destroyed while in the callback?

2004-03-25  Lars Clausen  <lars@raeder.dk>

	* app/persistence.c (persistence_load_string): Missing semicolon?!?

2004-03-24  Lars Clausen  <lars@raeder.dk>

	* RELEASE-PROCESS: 

	* app/persistence.[ch]: 
	* app/paginate_psprint.c (diagram_print_ps): New type of data can
	be stored persistently:  Strings.  Only the printer command/file
	go in here now, but things like creator, organization, diagram
	comments etc could also be handled this way.

	* objects/standard/beziergon.c (beziergon_draw): Avoid control
	lines when the object is not selected.

2004-03-23  Lars Clausen  <lars@raeder.dk>

	* lib/connectionpoint.h: 
	* app/load_save.c: Allow connection points to have names, and
	handle that in load/store.

	* lib/dialibartrenderer.c: Better highlighting for text.

	* lib/diagdkrenderer.h (struct _DiaGdkRenderer): 
	* lib/diagdkrenderer.c: Better highlighting for all, using same
	principles as libart highlighter.

2004-03-22  Lars Clausen  <lars@raeder.dk>

	* lib/dialibartrenderer.[ch]: 
	* lib/diagdkrenderer.c: 
	* lib/object.h: 
	* app/object_ops.c:
	* app/diagram.[ch]:
	* app/display.[ch]:
	* app/Makefile.am: 
	* app/modify_tool.c: 
	* app/create_object.c: 
	* app/highlight.[ch]: 
	Added simple object highlighting.  In GDK rendering, highlights
	the bbox, in libart highlights the outline of the object (except
	for texts).

2004-03-22  Lars Clausen  <lars@raeder.dk>

	* RELEASE-PROCESS: Added info on how to do a branch for
	development during release process.

2004-03-20  Lars Clausen  <lars@raeder.dk>

	* RELEASE-PROCESS: Mention PATCH keyword in release process.

2004-03-19  Lars Clausen  <lars@raeder.dk>

	* xmldocs.make: Fixed apparent uninstall error.

	* config.h.win32: 
	* doc/en/dia-manual.xml: 
	* doc/pl/dia-manual.xml: 
	* dia.spec: 
	* configure.in: 
	* NEWS: Version 0.93-pre1.

	* lib/dialinechooser.[ch]: Patch from pborelli@katamail.com (paolo
	borelli):  Remove some deprecated stuff.

2004-03-18  Lars Clausen  <lars@raeder.dk>

	* Makefile.am: Try better uninstall thing for scrollkeeper.

	* objects/ER/entity.c: 
	* lib/arrows.[ch]: Patch from Georg Lothar Thimm
	<MGEORG@ntu.edu.sg>: Adds new ER arrows 1 or many, 0 or many, 0 or
	1, 1 exactly, as well as associative ER entities.

2004-03-17  Lars Clausen  <lars@raeder.dk>

	* Makefile.am: Make distcheck not complain about scrollkeeper
	problems (as per advice from James Henstridge).

	* doc/pl/*.{xml,sgml}: Converted SGML manuals to XML to get better
	standard installation.

	* objects/standard/ellipse.c: Better strings for object menu.

	* app/sheets_dialog_callbacks.c: Fixed crashes from broken caching
	of dialogs (shame on you, glade!)

	* objects/custom/custom_object.c (custom_setup_properties):
	Removed debugging output

	* app/paginate_psprint.c (diagram_print_ps): Slightly more
	readable printer error messages.

	* xmldocs.make: 
	* omf.make: 
	* doc/en/Makefile.am: 
	* doc/pl/Makefile.am: 
	New more standard way to install the XML-based manuals.  

2004-03-15  Lars Clausen  <lars@raeder.dk>

	* objects/standard/box.c (box_move_handle): More intuitive fixed
	aspect behaviour.

	* objects/standard/ellipse.c: 
	* objects/standard/box.c: 

	* lib/widgets.[ch]:
	* app/layer_dialog.[ch]:
	Patch from Steve Langasek <vorlon@debian.org>:
	Fixes startup crash on Alpha (bug #137169)
	
	* objects/standard/box.c: Aspect fixing like ellipses.

	* app/Makefile.am (dia_core_files): Include dia-app-icons.h

	* lib/pixmaps/Makefile.am (imagedir): Better Makefile.am for
	pixmaps, now can uninstall properly.

	* objects/standard/ellipse.c: Patch from dooms@info.ucl.ac.be:
	Fixed and circle aspect ratios for ellipses.  Bug #137156, #87966,
	#93940. 
	Added object menu access.

2004-03-07  Hans Breuer  <hans@breuer.org>

	* lib/diaarrowchooser.c lib/dialinechooser.c : #undef
	GTK_DISABLE_DEPRECATED (I'd rather like if these widgets
	would not use deprecated apis, but it's much simpler this way)

	* lib/makefile.msc : build the above new widgets and render_pixmap
	* lib/libdia.def app/dia.def app/makefile.msc : updated

	* app/disp_callbacks.c : fix gccisms (without being able to make much sense of 
	what I saw, i.e. how big is an empty array supposed to be ? ;-). 
	Previously it gave :
	disp_callbacks.c(188) : error C2059: syntax error : '}'
	disp_callbacks.c(191) : warning C4034: sizeof returns 0

	* app/interface.c : #include "dialinechooser.h"

	* lib/diagdkrender.c : make the !HAVE_FREETYPE case compile again
	[one more reason not to use it here : it's quite slow compared to
	 the native win32 font renderer ;]

	* app/app_procs.c app/filedlg.c : gtk_widget_destroy does not take
	a GtkDialog*, removed unneeded cast

	* app/render_eps.c : avoid assignment warning for void* user_data
	not being an int 

2004-03-06  Steffen Macke sdteffen@web.de>

	* shapes/Map/Isometric/Makefile.am: added Makfile for Isometric
	shapes

2004-03-06  Lars Clausen  <lars@raeder.dk>

	* lib/arrows.h (DEFAULT_ARROW_SIZE): Downed default arrow size to
	0.5, as per poll.

	* lib/font.c: Simple cleanup system for layout cache removes any
	layout that hasn't been used for 10 minutes, but only during idle
	time. 

2004-03-05  Lars Clausen  <lars@raeder.dk>

	* sheets/Electric.sheet.in: Added patch from padro@lsi.upc.es
	(lluis padro) (#130887): Extended Electric shapes with vertical
	versions. 

	* sheets/Cybernetics.sheet.in: Normalize shape descriptions (never
	start with "Create a" or "A", always capitalize first word).

	* objects/standard/ellipse.c: Patch from Grégoire Dooms
	<dooms@info.ucl.ac.be>: Add extra connection point in center of
	ellipse.  Additionally added a handle in the center, and resize is
	now around the center.

	* configure.in: 
	* sheets/Makefile.am (SUBDIRS): 
	* sheets/IsometricMap.sheet.in: 
	* shapes/Map/Isometric/*
	* shapes/Makefile.am (SUBDIRS): Added Isometric shapes.

2004-03-04  Lars Clausen  <lars@raeder.dk>

	* lib/Makefile.am: 
	* lib/pixmaps/Makefile.am: 
	* configure.in: 
	Better installation handling of pixmaps.
	
	* lib/diagdkrenderer.c: 
	* lib/diagtkfontsel.h (struct _DiaGtkFontSelectionClass): 
	* lib/diagtkfontsel.c (dia_gtk_font_selection_show_available_fonts): 
	Constness fixes.

2004-03-03  Lars Clausen  <lars@raeder.dk>

	* lib/diagtkfontsel.h (struct _DiaGtkFontSelection): 
	* lib/diagdkrenderer.c: 
	* lib/diasvgrenderer.c:
	* lib/dialibartrenderer.c:
	* lib/diainteractiverenderer.c: 
	* lib/prop_text.c (multistringprop_handle_key): 
	* lib/dia_dirs.c: 
	* lib/dia_image.c (dia_image_rgba_data): 
	* lib/widgets.c: 
	* lib/diagramdata.c (layer_set_object_list): 
	* lib/font.h: 
	* lib/font.c: 
	Getting rid of compile warnings.

	* lib/widgets.c: Handle destroy properly, i.e. unref the two extra
	images.  Also remove unused decls.

2004-03-02  Lars Clausen  <lars@raeder.dk>

	* lib/widgets.h: 
	* lib/widgets.c (dia_size_selector_init): Add images to the size
	selector chain widget.  Also new function to load installed images
	from files (better than from included XPM, IMHO).

2004-03-02  Lars Clausen  <lars@raeder.dk>

	* lib/libdia.def: 
	* lib/pixmaps/[un]broken-chain.xpm: Icons stolen from GIMP for the
	size selector.

	* lib/Makefile.am: 
	* lib/widgets.c (dia_size_selector_init): Work
	on getting proper icon onto the size selector.  Need simple image
	load mechanism in utils.

	* lib/text.c: 
	* app/display.[ch]:
	* app/disp_callbacks.c: Patch from kou@cozmixng.org: Show preedit
	strings, handle utf8 strlen properly.  Bug #135930.

2004-03-01  Lars Clausen  <lars@raeder.dk>

	* shapes/Cybernetics/*:
	* sheets/Cybernetics.sheet.in:
	* sheets/Makefile.am:
	* shapes/Makefile.am: 
	* configure.in: Patch from charly.meyer@t-online.de (Thorsten
	Roggendorf): Cybernetic shapes (#95553).

2004-03-01  Lars Clausen  <lars@raeder.dk>

	* app/Makefile.am: Fixed $(EXEEXT) warning from automake.

	* lib/diatypes.h: New type DiaSizeSelector.

	* lib/widgets.[ch]: New size selector widgets that selects two
	values (width and height, nominally) optionally linked to keep
	aspect ratio.

2004-03-01  Hubert Figuiere  <hfiguiere@teaser.fr>

	* plug-ins/svg/render_svg.c (new_svg_renderer): Add DTD declaration
	in front of file. Bug #128600.

	* app/Makefile.am:
	* app/interface.h:
	* app/lineprops_area.[ch]:
	* lib/Makefile.am:
	* lib/dialinechooser.[ch]:
	* lib/widgets.c (dia_line_style_selector_init): use line preview 
	instead of text labels. This involve moving away line_chooser to lib
	from app.

	* lib/diaarrowchooser.[ch] (close_and_hide): Make static to avoid
	symbol conflicts.

	* app/Makefile.am (dia_core_files): 
	* app/interface.c (create_lineprops_area):
	* app/render_pixmap.[ch]:
	* lib/Makefile.am:
	* lib/diaarrowchooser.[ch]:
	* lib/libdia.def:
	* lib/prop_attr.c:
	* lib/propdialogs.c:
	* lib/render_pixmap.[ch]:
	* lib/widgets.c (dia_arrow_fill_menu): Use arrow preview instead
	of text labels. This involve moving away arrow_chooser to lib from
	app.

2004-02-29  Lars Clausen  <lars@raeder.dk>

	* objects/UML/class.[ch]: Puny kludge to avoid GtkList objects
	being updated half-way through destruction.  To be removed when
	the lists are replaced by something better.

	* objects/UML/class_dialog.c: Patch from luc@handhelds.org:
	Accelerators for class dialog.  Bug #130995.
	Patch from luc@handhelds.org: Better aligning of widgets.  Bug #130994.

	* app/dia-props.c:
	* app/preferences.c:
	* lib/properties.c:
	* objects/GRAFCET/step.c:
	* objects/Misc/analog_clock.c:
	* objects/chronogram/chronoline.c:
	* objects/chronogram/chronoref.c:
	Change to american spelling (color, not colour) to ease
	translators job.  Note that a number of translations may need an
	update now.  Bug #120466.

2004-02-29  Lars Clausen  <lars@raeder.dk>

	* plug-ins/xfig/xfig-export.c: Patch from solworth@cs.uic.edu:
	Better arrow handling for missing arrows.

	* plug-ins/metapost/render_metapost.[ch]: Patch from
	phred@cs.berkeley.edu (Fred Reiss): Add font faces and font
	size. See bug #135363.

	* app/app_procs.c (app_init): If non-interactive, or if
	--log-to-stderr used, send all messages to stderr.  This should
	mean that old diaconv == dia --export-to-format=FOO BAR

2004-02-29  Hubert Figuiere  <hfiguiere@teaser.fr>

	* app/menus.c: Get rid of GNOME menus. Deprecated APIs in GNOME 2.

2004-02-28  Lars Clausen  <lars@raeder.dk>

	* lib/text.c (text_key_event): Patch from Kouhei Sutou
	<kou@cozmixng.org>: Fix wrong utf8 strlen handling.

2004-02-27  Lars Clausen  <lars@raeder.dk>

	* KNOWN_BUGS: Added info on most commonly reported bugs, with
	BugZilla numbers.
	
	* app/disp_callbacks.c (popup_object_menu): Unified properties
	entry, fixes bug #105080.

	* app/diagram.c (diagram_update_menu_sensitivity): 
	* app/menus.h (struct _UpdatableMenuItems): 
	* app/menus.c (menus_initialize_updatable_items): Menu items
	changed around, align menus flattened, properties entry ghosted,
	dialogs menu removed, more shortcuts added.  Closing bugs #94018,
	#117495, #135125.
	Also taking out Gnome menus for now.  They don't allow shortcuts,
	so what are they good for?

2004-02-27  Lars Clausen  <lars@raeder.dk>

	* app/menus.c (display_menu_items): 
	* app/commands.[ch]: Added duplicate menu item from Alan Horkan
	(bug #95546).

2004-02-24  Adam Weinberger  <adamw@FreeBSD.org>

	* configure.in: Added 'en_CA' (Canadian English) to ALL_LINGUAS.

2004-02-23  Lars Clausen  <lars@raeder.dk>

	* app/app_procs.c (app_init): Comments for translators.

2004-02-22  Hubert Figuiere  <hfiguiere@teaser.fr>

	* app/preferences.c (prefs_create_dialog): Change packing policy
	for widget to expand.

	* app/Makefile.am (run_dia.sh): Fixed a typo in wrapper that prevented
	running with a debugger.

2004-02-19  Lars Clausen  <lars@raeder.dk>

	* app/undo.[ch]: Adding last-saved information to undo to allow a
	diagram with all changes since last save undo to be marked as
	nonmodified.  Still needs integration with actual undo
	apply/revert calls.

	* app/diagram.h: 
	* app/diagram_tree.c (diagram_tree_update): 
	* app/diagram.c: 
	* app/display.c (update_modified_status): 
	* plug-ins/python/pydia-diagram.c (PyDiaDiagram_GetAttr): 
	* app/autosave.c (autosave_check_autosave): Encapsulate modifed
	test. 

	* app/render_eps.[c]: Restructure to better handle PS vs. EPS
	vs. EPSI, comment out EPSI until preview is in there.

	* lib/render.c: 
	* lib/diarenderer.c: Removing debugging printfs.

	* app/diapsrenderer.[ch]: Preparations for proper EPSI rendering
	(with preview)

	* objects/standard/arc.c (arc_update_handles): Check to avoid
	crash when start and end points are the same.

2004-02-19  Lars Clausen  <lars@raeder.dk>

	* objects/standard/bezier.c: 
	* objects/standard/line.c (line_load): 
	* objects/standard/polyline.c (polyline_load): 
	* objects/standard/zigzagline.c (zigzagline_load): 
	* objects/standard/arc.c (arc_load): 
	* lib/widgets.h (DEFAULT_ARROW_WIDTH): Use DEFAULT_ARROW_SIZE
	instead of hardcoding.

2004-02-18  Hubert Figuiere  <hfiguiere@teaser.fr>

	* app/disp_callbacks.c (popup_object_menu): append a menu item to 
	display properties.

2004-02-17  Hubert Figuiere  <hfiguiere@teaser.fr>

	* app/app_procs.c: declare rc properly with the proper #ifdef

2004-02-17  Lars Clausen  <lars@raeder.dk>

	* plug-ins/xfig/xfig-import.c: Correct ordering of imported FIG
	objects (which seemingly FIG itself breaks, or else there is no
	ordering).

2004-02-16  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xfig/xfig-export.c (figLineWidth): Check for minimum
	width renderable in xfig.  Helps on bug #133637, but does not
	quite fix it -- something about depth is wrong.

	* plug-ins/xslt/xslt.[ch]: Patch #133913 from phenning@lanl.gov:
	Extern definitions for Mac compilation.

	* app/app_procs.c: Patch #131159 from J. H. M. Dassen
	(jdassen@debian.org): Include fix.

	* app/interface.c: Patch #130100 from luc@handhelds.org:  Make
	sure the initial diagram size is correct.

2004-02-15  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/Makefile.am (AM_CPPFLAGS): Override AM_CPPFLAGS instead of
	CPPFLAGS, as per automake warning.
	* app/Makefile.am (AM_LDFLAGS): Override AM_LDFLAGS instead of
	LDFLAGS, as per automake warning.
	(run_dia.sh): More robust creation, and more easily moved.

	* app/undo.c (group_objects_revert): Don't double-free the objects
	list.  (#129221) Call object_add_updates on grouped objects.
	(ungroup_objects_revert): Call object_add_updates on grouped objects.

	* lib/diagramdata.c: Internal
	documentation. 

	* lib/polyshape.c (polyshape_update_data): Correctly calculate
	directions for polyshape corners (thanks, Valgrind!)

	* lib/attributes.c: 
	* lib/prop_attr.c (arrowprop_load): Use default arrow size.

	* lib/arrows.h: Default arrow size defined.  After all are using
	this, may lower to 0.4 or so.

	* app/lineprops_area.[ch]: New function to set the arrow type for an
	arrow chooser.

	* app/interface.c (create_lineprops_area): Set default line to
	have an arrow (fairly likely to be what's wanted, plus it shows
	the user where arrows are set).

	* app/app_procs.c: #ifdef HAVE_POPT popt args to process_opt

2004-02-14  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/metapost/render_metapost.c (draw_with_linestyle):
	Dotted lines should use dot_length, not dash_length.

2004-02-06  Hans Breuer  <hans@breuer.org>

	* app/interface.c : don't use gtk_drawing_area_size() to avoid
	the defaut size being also the minimum size. Instead use
	gtk_window_set_default_size() on the display shell. Fixes #130982.

	[fixing #131210, but umlauts in the 'main' filename still not really 
	 supported on systems where filesystem encoding != utf8
	(Problems with recent file menu and window title)]
	* lib/dia_xml.[hc] : add data_filename() and data_add_filename()
	to deal with possible differnces in filename encodings, see
	g_filename_<to|from>_utf8()
	* objects/standard/image.c : use them.

	* lib/widgets.c : handle possible encoding difference here, too.
	Also get rid of most warnings by using const and GTK casts where 
	appropriate; one wrong cast (probably causing a crash) was found/fixed 
	by this - the remaining give a hint on finally leaking FontSelectorEntry.

	* lib/widgets.[hc] : hide _DiaFileSelector and *Class in .c. Modified
	dia_file_selector_<get|set>_file to behave like the respective Gtk 
	functions do : encoding- and const-wise ;-)

2004-02-01  Robert Sedak  <robert.sedak@sk.htnet.hr>

        * configure.in: Added "hr" (Croatian) to ALL_LINGUAS.

2004-01-19  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c app/diaconv : 
	only call bind_textdomain_codeset when available, what's good 
	for The Gimp (bug #131215) can't be wrong for Dia : bug #125926
	* config.h.win32 : define HAVE_BIND_TEXTDOMAIN_CODESET

2004-01-19  Steffen Macke <sdteffen@web.de>

	* makefile.msc: updated for new GAIM-like installer build; sync'ed
	ALL_LINGUAS with configure.in

2004-01-18  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c (myXmlErrorReporting) : avoid possible crash 
	by not passing NULL to g_print()

	* app/interface.c (create_toolbox) : actually use
	persitence_register_window() to restore toolbox window size

	* app/makefile.msc lib/makefile.msc : allow to deselect
	building with Freetype by command line to nmake like :
		nmake -f makefile.msc "NOFT2=1"

	* plug-ins/python/diasvg_import.py : handle 'stroke-array' as
	far as possible with Dia's limited line style
	* plug-ins/python/pydia-property.c : allow to get and set
	Linestyle, style and dash(length)

	* lib/object.h : removed typedef for ObjectId not use anywhere

2004-01-17  Hans Breuer  <hans@breuer.org>

	* objects/custom/shape_info.[hc] objects/custom/custom_object.c
	  doc/shape.dtd doc/custom-shapes : 
	support for images in custom shapes, also removed some long-time
	dead code

	* doc/en/*.xml : fixed crippled line ends which get created
	when windoze line ends are checkin from the unix side

2004-01-13  Laurent Dhima  <laurenti@alblinux.net>

	* configure.in: Added "sq" to ALL_LINGUAS.

2004-01-11  Hans Breuer  <hans@breuer.org>

	[more less leaks ;-]
	
	* objects/SADT/annotation.c : use text_destroy() not g_free()
	
	* objects/chronogram/chronoline.c : neither leak chronoline::events
	nor chronoline::name

	* objects/wpg/wpg.c : don't g_free() but g_object_unref(renderer);

2004-01-11  Hans Breuer  <hans@breuer.org>

	* lib/properties.h :
	* objects/custom/custom_object.c : more properties optional
	to be backward compatible for older diagrams not having them 
	set. (Try to load samples/all_objects.dia)
	
	[less memory leaks thanks valgrind ;-]
	
	* app/recent_files.c (recent_file_history_write) : 
	g_free(history_filename);
	(recent_file_menu_item) : use g_path_get_basename() 
	which already strdups, free result of g_strescape()
	
	* app/filedlg.c (create_export_menu) : return of
	filter_get_export_filter_label() must be g_free()'d
	(create_open_menu) : same for import
	
	* app/export_png.c (export_png_ok) : destroy info ptr
	with png_destroy_write_struct()
	
	* app/app_procs.c (app_init) : g_free(export_format_string);
	
	* lib/font.c (dia_font_finalize) : finalize parent_class, too
	(dia_font_new_from_style) : stop leaking almost all DiaFont by not
	refing it a second time, g_type_create_from_instance() is enough
	
	* lib/object_defaults.c (_obj_store) : don't mess with names
	len 0 (should avoid 'Invalid read of size 1, but doesn't ;)
	
2004-01-11  Steffen Macke <sdteffen@web.de>

	* app/diapsftrenderer.c: including ftoutln.h
	* app/makefile.msc: updated for freetype build
	* lib/libdia.def: added dia_font_get_context()
	* lib/dialibartrenderer.c (draw_string): added cast
	
2004-01-10  Hans Breuer  <hans@breuer.org>

	* lib/diagdkrenderer.c (draw_string) : gdk_draw_line with
	transformed coordinates, fixes bug 130804

2004-01-10  Hans Breuer  <hans@breuer.org>

	* app/filedlg.c app/app_procs.c : don't try to destroy 
	'gtk_dialog_run'-dialogs dialogs by connecting to the "response"
	signal but simply by gtk_widget_destroy() after gtk_dialog_run()
	returns. Fixes 'has no handler' bugs like #121019

2004-01-10  Hans Breuer  <hans@breuer.org>

	* objects/UML/class.c objects/UML/class_dialog.c : 
	handle umlclass->name being empty to avoid, i.e. fix #127968

	[plugging memleaks, thanks valgrind :-]
	
	* lib/dia_xml.c (data_string) : don't leak return value
	of xmlNodeListGetString()
	
	* lib/dia_xml.c (xml_file_check_encoding) : g_free(buf)
	before returning, maybe alloca() would be the better 
	choice but anyway ;)

	* objects/custom/custom_object.c:306 : adde xmlFree(str) below
	
	* lib/font.c (dia_font_build_layout) : don't leak result
	of g_utf8_strdown()
	
	* lib/diagdkrenderer.c (draw_string) : don't leak rgba
	(this is the one which got me started using valgrind, see #130816)
	
2004-01-07  Sanlig Badral  <badral@openmn.org>

	* configure.in: Added "mn" to ALL_LINGUAS.

2004-01-04  Hans Breuer  <hans@breuer.org>

	* lib/diagdkrenderer.c : replace rendering of really small (height
	less than 2 pixels) with a simple dashed line, you wont notice the 
	differnce beside it being much faster. This allows ...
	* lib/diagdkrenderer.h : ... to remove gboolean rendertext ...
	* app/navigation.c : ... and lets you see an read rendered text even 
	in the nice navigation popup.

	* lib/dialibartrenderer.c : FONT_SCALE defined as 1.0 for G_OS_WIN32, too. 
	(draw_string) : don't leak temporary image

2004-01-04  Hans Breuer  <hans@breuer.org>

	* app/dia-app-icons.h : TODO : to be removed when autogenerated on *NIX, too.
	* app/interface.c : use dia-app-icons.h to give Dia window icons

	* lib/dia_image.c lib/color.c : _never_ call functions implemented
	in app/ from lib/. It is not portable and broken from design
	* app/app_procs.c : call color_init() and dia_image_init() conditional,
	i.e. only if running interactive.

	* lib/font.h : #include <time.h>

	* lib/libdia.def : updated externals

	* objects/UML/actor.c 
            objects/UML/association.c (todo)
	  objects/UML/branch.c
	  objects/UML/class.[hc] objects/UML/class_dialog.c
	  objects/UML/classicon.c
	  objects/UML/component.c 
	  objects/UML/constraint.c
	  objects/UML/dependency.c
	  objects/UML/generalization.c
	  objects/UML/implements.c
	  objects/UML/large_package.c
	  objects/UML/lifeline.c
	  objects/UML/message.c
	  objects/UML/node.c
	  objects/UML/object.c
	  objects/UML/realizes.c
	  objects/UML/small_package.c
	  objects/UML/state.c
	  objects/UML/usecase.c
	  objects/UML/
	: ported coloring of most UML objects (bug #97517, orginal
	  work Mathias Hasselmann)

	* lib/properties.h : add _OPTIONAL variants for 
	PROP_STD_(LINE|FILL|TEXT)_COLOUR which allows to load old -
	i.e. default colored - UML diagrams without complaining
	* lib/proplist.c lib/propoffsets.c : avoid setting _OPTIONAL,
	not set properties with the help of PXP_NOTSET. Otherwise 
	optional attributes would lead to wrong initialization.	

	* lib/widgets.[hc] : moved _DiaFontSelector from .h to .c
	to hide details and restict #undef GTK_DISABLE_DEPRECATED to .c
	Same for most other selectors which probably should be rewritten
	to the combo box with tree model from Gtk+ 2.4

2004-01-04  Lars Clausen  <lrclause@cs.uiuc.edu>

	* INSTALL (PLATFORM NOTES): Mention the Gnu gettext and iconv as
	being the Right Thing(tm) to use on Solaris.

	* objects/standard/bezier.c (bezierline_draw): Don't draw
	guidelines if not selected.

	* lib/object.[ch] (dia_object_is_selected): Function to check whether
	a given object is selected. O(n), where n is # selected objects.
	

2004-01-03  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/widgets.[ch]: Make sure old font is re-chosen when the Other
	Fonts dialog is closed without pressing Ok (bug #128646).

2004-01-02  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/Makefile.am: Quote arguments correctly for run_dia.sh (bug
	#130099). 

2004-01-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* INSTALL: Updated list of requirements (bug #129653)

	* doc/en/dia.dia: Beginning class diagram for Dia from Luc
	Pionchon <luc@handhelds.org>.

2003-12-31  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/diagdkrenderer.c (draw_string): Don't attempt to render
	empty or NULL strings (bug #130097).

2003-12-31  Chris Sperandio <sperandi@eng.usf.edu>
	
	* plug-ins/metapost/render_metapost.c: Fixed string colorization.
	Added checks against color_black.
 
2003-12-31  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xfig/xfig-export.c (figArrow): Output nothing for
	ARROW_TYPE_NONE.  Thanks to Jon A. Solworth for showing that this
	can happen.

	* objects/UML/component_feature.c: Patch from W. Borgert
	<debacle@debian.org>:  Add handle to component feature text.

	* lib/diagdkrenderer.c (draw_string): Remove poorly placed caching.

	* lib/font.c: Caching PangoLayout for better rendering speed.

2003-12-30  Lars Clausen  <lars@raeder.dk>

	* lib/dia_dirs.[ch] (dia_get_absolute_filename): New function to
	get absolute file name from relative.
	* app/recent_files.c (recent_file_history_add): Use absolute
	filenames for recent files menu so that files can be found when
	Dia is invoked from other places.  

	* app/app_procs.c (handle_all_diagrams): Fix for 1/3 of 130098:
	Actually load different diagrams if such are requested on command
	line.  

	* objects/UML/class_dialog.c (class_create_page): Fix from Luc
	Pionchon <luc@handhelds.org>: Correctly align labels for colors.

	* lib/diagdkrenderer.[ch]: From Luc: New option to GdkRenderer to
	remove text rendering.  May be turned into greeking at some later
	stage.

	* app/interface.c: 
	* app/Makefile.am (dia_core_files): 
	* app/navigation.[ch]: Patch from Luc Pionchon <luc@handhelds.org>:
	Adds navigation window a la Gimp, though without text being
	rendered at all.

2003-12-27  Luc Pionchon <luc@handhelds.org>

	* app/navigation.h: (new file)
	* app/navigation.c: (new file) creates a navigation window with a
	thumbnail view of the whole diagram.
	* app/Makefile.am (dia_core_files): added new files.

	* app/interface.c (create_display_shell): added a button between
	the scrollbars to popup a navigation window.

	* lib/diagdkrenderer.h (struct_DiaGdkRenderer): added rendertext
	boolean
	* lib/diagdkrenderer.c (renderer_init): set rendertext TRUE by default
	* lib/diagdkrenderer.c (draw_string): returns if the renderer do
	not want text rendering.	

2003-12-14  Lars Clausen  <lrclause@cs.uiuc.edu>

	* shapes/Circuit/hresistor.shape: Uses new extra attribute thing.

	* objects/custom/shape_info.[ch]: Cleanup.

	* objects/custom/custom_object.[ch]: Changed to use new props
	interface.

	* lib/properties.h: 
	* lib/prop_text.c: 
	* lib/prop_inttypes.c: 
	* lib/prop_geomtypes.c: Added *prop_get_data_size.

	* lib/libdia.def: Added object_load_props.

	* configure.in: Better FT2 version test, from bug #129225.

	* dia.spec (BuildRequires): Changed to match makefile (bug #129131)

	* plug-ins/xslt/dia-uml2python.xsl: Added Python sheet from Holger
	Lehmann <holger.lehmann@catworkx.de>.

	* plug-ins/xslt/Makefile.am: 
	* plug-ins/xslt/stylesheets.xml: Added Python, Component List,
	and OWL XSLT sheets.

2003-12-13  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/diagdkrenderer.c: Add implementation so text is still
	rendered.  May be improved later.

	* lib/dia_image.c: 
	* app/main.c: 
	* app/export_png.c: 
	* app/diagram.c: 
	* app/app_procs.c: Patch from W. Borgert <debacle@debian.org>:
	Allow running without a $DISPLAY!

	* lib/color.c: Remove warnings for non-interactive run.

	* doc/en/dia.dbk: 
	* app/export_png.c: 
	* app/diaconv.c: 
	* app/app_procs.[ch]: 
	Patch from W. Borgert <debacle@debian.org>: Allow a --size argument
	to specify size for PNG output.

	* app/lineprops_area.c (dia_arrow_preview_expose): Make arrows
	render a little smaller, so as to fit the big ones.

	* lib/arrows.[ch]: New arrow type from W. Borgert
	<debacle@debian.org>: Filled Dot and Triangle.

2003-12-02  Lars Clausen  <lrclause@cs.uiuc.edu>

	* doc/pl/Makefile.am (install-data-hook): Fixed installation bug
	for gif images.

	* plug-ins/xslt/dia-uml2owl.xsl: Added OWL XSLT from Dan Connolly.

	* acinclude.m4: Better Python configure code patch (can't find
	author, author please speak up!)

2003-12-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/diagdkrenderer.c (get_cached_text): Stupid bugs replaced by
	smarter ones.

2003-11-30  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/diasvg.py : initialize self.dash_length
	in constructor to avoid crashing if the renderer user
	does not set it before first usage.

2003-11-30  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/diagdkrenderer.c: Start of cache GDK text renderer -- not
	active yet.

	* configure.in: 
	* config.h.win32: Set version number to 0.92.2+cvs to distinguish
	development and stable versions.

	* lib/text.c (text_draw): Use new renderer function to draw the
	text.

	* lib/diarenderer.h: 
	* lib/diarenderer.c: New renderer function "draw_text" with
	default implementation.  This function should eventually be the
	main interface, as it will be able to handle width and caching of
	rendering internally.  All users of draw_string should convert to
	use Text objects and call either renderer->draw_text or text_draw,
	the latter if the text can be edited in-place (as should be the
	goal, eventually).

2003-11-29  Lars Clausen  <lrclause@cs.uiuc.edu>

	* shapes/Circuit/hresistor.shape: First example of extra
	attributes. 

2003-11-28  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/shape/shape-export.c: 
	* lib/diasvgrenderer.h: 
	* lib/diasvgrenderer.c: 
	* plug-ins/svg/render_svg.c (new_svg_renderer): 
	Actually store the font size, using DiaRenderer's font fields.

2003-11-27  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/custom/shape_info.[ch]: 
	* objects/custom/custom_object.[ch]: 
	Support for extra attributes in custom objects.
	
2003-11-23  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/diagram.c (diagram_update_menu_sensitivity): More
	intelligent checks for menu sensitivity.  Might be slow on huge
	diagrams, but I think other things outweigh it by a lot.

	* app/menus.[ch]: Make "Bring Forwards"
	and "Send Backwards" updateable.

2003-11-22  Steffen Macke <sdteffen@web.de>

	* shapes/Assorted/arrow-turn-up.shape:
	* shapes/Assorted/arrow-turn-up.png:
	* sheets/Assorted/Makefile.am:
	* sheets/Assorted.sheet.in: Added new arrow

2003-11-17  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/app_procs.c
	* app/color_area.c
	* app/commands.c
	* app/defaults.c
	* app/dia_embedd.c
	* app/diagram.c
	* app/diagram_tree.c
	* app/diagram_tree_menu.c
	* app/diagram_tree_window.c
	* app/diapagelayout.c
	* app/diaunitspinner.c
	* app/export_png.c
	* app/filedlg.c
	* app/interface.c
	* app/layer_dialog.c
	* app/lineprops_area.c
	* app/linewidth_area.c
	* app/menus.c
	* app/pagesetup.c
	* app/paginate_psprint.c
	* app/persistence.c
	* app/plugin-manager.c
	* app/preferences.c
	* app/properties.c
	* app/recent_files.c
	* app/sheets.c
	* app/sheets_dialog.c
	* app/sheets_dialog_callbacks.c
	* app/tool.c: Patch from Sebastien Tricaud <toady@gscore.org>:
	GTK-2 compatibility update, mostly gtk_foo -> g_foo.

	* TODO: Updated, note on EPS transparency.

2003-11-07  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/UML/class.c (umlclass_draw): Allow classes with no name
	without crashing.

2003-11-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* config.h.win32: 
	* doc/en/dia-manual.xml: 
	* dia.spec: 
	* configure.in: 
	* NEWS: Another Brown Bag release for parenting problems,
	including a crash bug fix.

	* app/connectionpoint_ops.c (diagram_update_connections_object):
	Also update connections when moving children.  This can cause
	move_handle to be called twice, so it must be idempotent.

	* app/load_save.c: Loading and saving of children totally redone.
	Now doesn't violate assumption that all objects in a layer are
	placed in order in XML file.

	* objects/UML/branch.c (branch_create): Don't lie about being
	resizable. 

	* objects/UML/node.c (node_create): 
	* objects/UML/large_package.c (largepackage_create): Drag with
	lower right-hand handle at creation like all other objects.

2003-10-28  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/disp_callbacks.c (ddisplay_drop_object): Change initial
	parenting drop to behave like a move inside, i.e. constrain place
	instead of trying to resize.  'Cause, resizing cannot be done for
	all objects (e.g. UML Class). Also simplified the algorithm a lot
	at the same time.

	* app/load_save.c: Saving and loading of connection points for
	children added.  Prototypes for static functions added.

	* lib/dynamic_obj.c: Removed debugging output.

2003-10-26  Lars Clausen  <lrclause@cs.uiuc.edu>

	* doc/en/dia-manual.xml: 
	* doc/pl/dia-manual.sgml: 
	* dia.spec: 
	* config.h.win32: 
	* configure.in: 
	* NEWS: Brown Bag release 0.92.1

	* lib/dynamic_obj.c: Fixed embarassing dynamic object removal bug.

2003-10-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/app_procs.c (app_init): Rearrangement for translators.

2003-10-24  Steffen Macke <sdteffen@web.de>

	* lib/text.c(text_key_event): enforcing the inserted text length now,
	fix for bug #125348

2003-10-22  Lars Clausen  <lrclause@cs.uiuc.edu>

	* MAINTAINERS: Change Debian maintainer to be the default address.

	* objects/Misc/analog_clock.c (analog_clock_move_handle): Reorder
	args to match prototype, thus removing crashbug #125159.

	* RELEASE-PROCESS: Note to self.

2003-10-22  Steffen Macke <sdteffen@web.de>

	* doc/en/dia-manual.xml: removed superfluous external references
	
2003-10-21  Steffen Macke <sdteffen@web.de>

	* lib/libdia.def: added filter_get_by_name
	* app/render_eps.c: moved extensions definition outside #ifdef

2003-10-19  Lars Clausen  <lrclause@cs.uiuc.edu>

	* Makefile.am: 
	* dia.1:
	Removed old Dia manual, put new one in doc/en/.  Translations
	should go in doc/??/.

	* doc/en/dia-manual.xml: 
	* doc/pl/dia-manual.sgml: 
	* dia.spec (Release): 
	* config.h.win32: 
	* configure.in: 
	* NEWS: 0.92 is here!

	* doc/en/dia.dbk: 
	* doc/en/dia.1: 
	* doc/en/Makefile.am (man_MANS): Added man page, thanks to Fredrik
	HallenBerg, W. Borgert.  Not currently autogenerated from dia.dbk,
	but it shall be.

	* doc/en/usage-objects.xml: Fixed lower-case PNG tags.

	* doc/en/usage-objects-selecting.xml: Commented out empty note.

2003-10-14  Lars Clausen  <lrclause@cs.uiuc.edu>

	* doc/pl/dia-manual.sgml: 
	* doc/en/dia-manual.xml: 
	* config.h.win32: 
	* NEWS: 
	* configure.in: 
	* dia.spec (Release): Pre7.

	* app/diapsrenderer.c (draw_string): Convert string to print based
	on current locale.  If conversion fails, fall back to UTF-8 (which
	is almost certain to be messy).

2003-10-13  Lars Clausen  <lrclause@cs.uiuc.edu>

	* doc/pl/dia-manual.sgml: 
	* dia.spec (Release): 
	* configure.in: 
	* NEWS: 
	* config.h.win32: 
	* doc/en/dia-manual.xml: Pre6.

	* plug-ins/pstricks/render_pstricks.c (draw_string): Don't escape
	TeX chars in strings -- must be possible to use TeX text in there.
	Also avoids infinite loop bug (#124464) Will get option for this
	later.

2003-10-11  Lars Clausen  <lrclause@cs.uiuc.edu>

	* shapes/Cisco/Makefile.am: Cisco shapes now install correctly.

	* doc/en/dia-manual.xml: 
	* doc/pl/dia-manual.sgml: 
	* dia.spec (Release): 
	* configure.in: 
	* config.h.win32: 
	* NEWS: pre5.

	* app/authors.h: Removed duplicate of M. C. Nelson.

	* plug-ins/pixbuf/pixbuf.c: Unique name for pixbuf export: gdkpixbuf.

	* app/export_png.c: Unique name for libart PNG export: png-libart.

	* app/render_eps.c: Unique names for the two eps export methods:
	eps-builtin, eps-pango.

	* lib/filter.h: Binary compatibility change: 
	Added unique name to export filters.  Can be NULL.
	* lib/filter.c (filter_get_by_name): Finding a filter by
	non-extension name.

	* app/app_procs.h: Changed prototype for do_convert.
	* app/app_procs.c (app_init): Support for non-extension file
	format selection for export.  Also allow extension to differ from
	that specified by the filters.  A bit of refactoring, too.

2003-09-28  Steffen Macke <sdteffen@web.de>

	* makefile.msc: added target po to update the translations

2003-09-27  Lars Clausen  <lrclause@cs.uiuc.edu>

	* config.h.win32: 
	* dia.spec (Release): 
	* NEWS: 
	* doc/pl/dia-manual.sgml: 
	* doc/en/dia-manual.xml: 
	Pre4 is given a short try.
	
	* configure.in: Give all necessary libs to PNG test.

	* lib/font.c: Added legacy entries for sans, serif and monospace.

	* app/app_procs.c (internal_plugin_init): 
	* app/render_eps.h: 
	* app/render_eps.c: 
	Added PS fonts output for Unix.

	* app/diapsrenderer.c (set_font): Adjusted height by the magic .7
	factor to make PS fonts stay in boxes.
	
2003-08-03  Hans Breuer  <hans@breuer.org>

	* config.h.win32 : close the version string

	* lib/libdia.def : with color_white, color_black being static
	on win32 they can not be exported anymore either

	* lib/dialibartrenderer.c : text rendering is back on win32,
	only by Gdk though; almost a year seems to be enough to
	wait for my patch at bug #94791 to be accepted ...

2003-09-23  Lars Clausen  <lrclause@cs.uiuc.edu>

	* shapes/network/{digitizing_board.png,plotter.png,
	laptop.png,telephone.png}: 22x22 icons.

2003-09-22  Lars Clausen  <lrclause@cs.uiuc.edu>

	* doc/pl/dia-manual.sgml: 
	* doc/en/dia-manual.xml: 
	* dia.spec (Release): 
	* configure.in: 
	* config.h.win32: 
	* NEWS: 
	pre3 improves font rendering speed.

	* app/app_procs.c (app_init): Don't do pango init here, it's done
	on demand in font.c now.

	* lib/font.c: Load pango context on demand rather than during
	init/all the time strikes a better balance between working font
	size and speed.  Still need to cache width calculations.

2003-09-18  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/dia_xml.c: Enable pretty printing.  Should have been added
	on 8/12. 

2003-09-11  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/arrows.c (calculate_arrow_point): Adjust arrow line
	adjustment a bit for half diamond and open round.

	* RELEASE-PROCESS: Added note about notifying translators and
	maintainers. 

	* doc/pl/dia-manual.sgml: 
	* doc/en/dia-manual.xml: 
	* dia.spec (Release): 
	* configure.in: 
	* config.h.win32: 
	* NEWS:
	Update to 0.92-pre2.
	
2003-09-10  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/arrows.c (calculate_arrow_point): Some fixing-up of arrow
	calculation for half diamond and open round.

	* lib/arrows.c: 
	* objects/UML/component_feature.c: 
	* lib/arrows.h: Patch from W. Borgert <debacle@debian.org>: Use
	arrows instead of specific little hacks.  Much nicer, but damn
	there's a lot of arrows.

	* lib/dialibartrenderer.c (begin_render): 
	* app/render_libart.c (begin_render): Use correct DPI for screen
	(well, actually the default DPI of 75 for now).

	* app/display.h: Informative notes on the DDISPLAY_*_ZOOM macros.

	* lib/diagdkrenderer.c (draw_string): Some reformatting.

	* app/app_procs.c (app_init): Note on what should be done for the
	pango context now, only it doesn't work:(

	* lib/font.c (dia_font_new): Make sure to load fonts that are
	used, using a reasonable pango_context.  Also a comment on the
	global_zoom_factor, 

2003-09-09  Lars Clausen  <lrclause@cs.uiuc.edu>

	* doc/pl/graphics/*.png:
	* doc/pl/Makefile.am: Added graphics to distro, avoiding empty
	loop (bug #121817).  PL translator may want to change the
	home_network png to be in Polish.  If the docs get translated into
	more languages, we'll want to find out how to share these things.

2003-09-08  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/splash.c (app_splash_init): Patch from Sébastien Tricaud
	<stricaud@mwsp.net>: Use g_signal_* instead of gtk_signal_* in
	splash.

	* app/filedlg.c (file_save_as_callback): Put filename setting
	together.  (Preparation for allowing default save dir.)

	* app/paginate_psprint.c (diagram_print_ps): Use $PRINTER
	correctly this time:)

	* app/dia-props.c (diagram_properties_show): 
	* app/properties.c (properties_show): Make sure the
	dialogs are transient for the correct diagram.

2003-09-07  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in: Make sure -lz -lm is passed into second png test
	as well (stupid AC_LINK_IFELSE can't take it as an argument).

	* plug-ins/xfig/xfig-import.c: Skip XFig comments to make certain
	comment-filled files readable.  Once we have a 'generic data'
	system, we can put comments in there.

2003-09-06  Steffen Macke <sdteffen@web.de>

	* plug-ins/pstricks/render_pstricks.c(tex_escape_string): using
	g_string_sized_new() instead of g_string_new() to make it compile
	* app/Makefile.am: including dia.ico and dia.rc in the tarball
	* plug-ins/wmf/wmf.cpp (set_linestyle): In WMF maximum linewidth is 1 
	for non-solid linestyles - otherwise custom linestyles have to be used.

2003-09-02  Steffen Macke <sdteffen@web.de>

	* app/commands.c(help_manual_callback): using dia-manual.chm instead of 
	dia.chm

2003-09-02  Christian Neumair  <chris@gnome-de.org>

	* sheets/Pneumatic.sheet.in: Slight unification fix.

2003-09-02  Lars Clausen  <lrclause@cs.uiuc.edu>

	* config.h.win32: 
	* configure.in: 
	* dia.spec (Release): 
	* doc/en/dia-manual.xml: 
	* doc/pl/dia-manual.sgml: 
	* NEWS: Update to 0.92-pre1.

	* app/properties.c (properties_key_event): Removing Esc/Enter
	handling for now, interferes to much with regular dialog usage.

	* plug-ins/pstricks/render_pstricks.c (tex_escape_string):
	Function to escape special TeX characters.  Not in use yet, as
	PSTricks output by default is TeX strings.  Should get a save-time
	selector. 

2008-09-01  Steffen Macke <sdteffen@web.de>

	* lib/paper.h: explanatory comment on width and height

2003-08-30  Steffen Macke <sdteffen@web.de>

	* lib/color.c:
	* lib/color.h: made color_white, color_black static on win32

2003-08-28  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in (PNG_LIBS): Something in the png tests added an
	extra -lpng to $LIBS.  Saving old $LIBS to avoid that.

2003-08-27  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in: Quote correctly for temporarily adding freetype
	cflags to CPPFLAGS.

	* app/preferences.c (prefs_save): Remove debugging g_print.

2003-08-26  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/flowchart/parallelogram.c (pgram_update_data):
	Directions for connections, better system for placing
	connectionpoints. 

2003-08-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/diagramdata.c (layer_find_closest_object_except): Look all
	the way through the object list, so the foremost object is selected.

	* lib/diagramdata.h: Removing dynamic_obj.h, it should only be
	included for diagramdata.c.

	* lib/prop_text.c (multistringprop_handle_key): Attempt at making
	newline in multistringprop not close the dialog.  Failed so far.

2003-08-25  Steffen Macke <sdteffen@web.de>

	* app/commands.c: using CHM instead of HTML on win32 if available
	* lib/diagramdata.h: including dynamic_obj.h

2003-08-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/properties.c (properties_key_event): Make Enter = Ok for
	properties dialogs.  Still some problems with this and Esc for
	Cancel, for instances escaping out of a menu closes the dialog.

	* objects/UML/association.c (association_get_properties): 
	* objects/UML/class_dialog.c (class_create_page): Grab appropriate
	focus. 

	* app/diapsft2renderer.c (draw_string): Use
	dia_font_scaled_build_layout to ensure similarity of text.

	* lib/diagramdata.c: Remove obj from dynobj list when removing
	from layer to avoid nasty race conditions.

	* app/undo.c (group_objects_revert): Make sure to unparent and
	remove from dynobj list when changing layers objects.

2003-08-23  Steffen Macke <sdteffen@web.de>

	* plug-ins/wmf/wmf.cpp (draw_image): replaced BitBlt() with 
	StretchBlt(); fixes #92249
	
2003-08-23  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/filedlg.c (file_save_as_callback): 
	* app/preferences.h: 
	* app/preferences.c (prefs_data): 
	* lib/diagramdata.h: 
	* lib/diagramdata.c (new_diagram_data): 
	* app/load_save.c (diagram_data_load): 
	Let the document remember whether it was compressed.  The user can
	still override this in the Save As... dialog, and that will still
	be remembered as the default for new diagrams.

2003-08-23  Steffen Macke <sdteffen@web.de>

	* plug-ins/xslt/Makefile.am: added dia-uml2componentlist.xsl

2003-08-22  Steffen Macke <sdteffen@web.de>

	* plug-ins/xslt/dia-uml.xsl:
	* plug-ins/xslt/dia-uml2componentlist.xsl: generate a HTML file with a
	table containing a list of components grouped by stereotype

2003-08-21  Steffen Macke <sdteffen@web.de>

	* lib/makefile.msc: added connectionpoint.obj
	* lib/libdia.def: added connpoint_update, find_slope_directions
	* app/disp_callbacks.c: including scroll_tool.h
	* obj/makefile.msc: added component_feature.obj
	* app/paginate_gdiprint.c: fixed loop initialization in 
	paginate_gdiprint(); partial fix for bug #85831 - the scaling is still
	wrong

2003-08-21  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/python/pydia-object.c (PyDiaObject_MoveHandle): Fix
	move_handle call.

	* lib/diagramdata.h: Colors added to prefs.
	* lib/diagramdata.c (new_diagram_data): Set diagram colors from prefs.
	New field for pagebreak color, which should
	behave the same as grid color and be settable for a diagram.

	* app/diagram.c (diagram_init): Update diagram pagebreak color
	from prefs. 

	* app/grid.c (pagebreak_draw): Draw using diagrams pagebreak
	colors. 

	* app/preferences.[ch]: Default diagram colors now #defines, so
	loading can use it.  Also, colors are now in NewDiagramData, so
	are passed nicely into new diagrams directly from prefs.  Yum.

	* app/load_save.c (diagram_data_write_doc, diagram_data_load): 
	Support for loading and saving grid and pagebreak colors with the
	diagram.  I'm inclined to make all the three Colors in diagram
	Color*s instead, so we can tell if they're specified for the
	diagram or merely the default setting.  There'd be no way for the
	user to tell if the color of a diagram is default, though, unless
	we add a 'reset to default' button to prefs.

	* app/dia-props.c: Adding widgets for dynamic grid, grid colour,
	pagebreak color.  Unsensitizing grid size when dynamic.

	* objects/UML/component.c: Patch from Krzysztof Foltman
	<kfoltman@onet.pl>: Add two new connectionpoints and adjust a
	third.  Makes the left side connections actually be on the line
	(gasp!). 

2003-08-20  Steffen Macke <sdteffen@web.de>

	* lib/libdia.def: added layer_find_closest_object_except
	* lib/diagramdata.c: added ; after GOTO to make MSVC compile 

2003-08-20  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/tool.h: 
	* app/tool.c: 
	* app/scroll_tool.c: 
	* app/interface.c: 
	* app/disp_callbacks.c: 
	* app/create_object.h: 
	* app/create_object.c: Patch from Krzysztof Foltman
	<kfoltman@onet.pl>: Middle button can scroll transiently when
	menu-bar-mode is on, and mouse wheels (hopefully) can scroll in
	various ways.

	* app/authors.h: 
	* sheets/UML.sheet.in: 
	* sheets/UML/receptacle.xpm: 
	* sheets/UML/Makefile.am: 
	* sheets/UML/eventsource.xpm: 
	* sheets/UML/eventsink.xpm: 
	* objects/UML/pixmaps/facet.xpm: 
	* objects/UML/uml.c (dia_plugin_init): 
	* objects/UML/Makefile.am (libuml_objects_la_SOURCES): 
	* objects/UML/component_feature.c: 
	Patch from W. Borgert <debacle@debian.org>:  Add event sources and
	event sinks.
	
2003-08-19  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/object.h: Turning some comments into doxygen style.

	* lib/object_defaults.c (dia_object_defaults_load)
	(dia_object_default_get, dia_object_default_create): 
	Fixing up existing documentation.

	* lib/object.h: Doxygen style documentation begun.

	* app/create_object.c: 
	* app/undo.c: 
	* app/connectionpoint_ops.c: 
	* app/disp_callbacks.c: 
	* app/modify_tool.c: 

	* objects/network/wanlink.c (wanlink_move_handle): 
	* objects/network/bus.c (bus_move_handle): 

	* objects/flowchart/parallelogram.c (pgram_move_handle): 
	* objects/flowchart/ellipse.c (ellipse_move_handle): 
	* objects/flowchart/diamond.c (diamond_move_handle): 
	* objects/flowchart/box.c (box_move_handle): 

	* objects/custom/custom_object.c (custom_move_handle): 

	* objects/chronogram/chronoref.c (chronoref_move_handle): 
	* objects/chronogram/chronoline.c (chronoline_move_handle): 

	* objects/SADT/box.c (sadtbox_move_handle): 
	* objects/SADT/arrow.c (sadtarrow_move_handle): 
	* objects/SADT/annotation.c (annotation_move_handle): 

	* objects/Misc/analog_clock.c (analog_clock_move_handle): 

	* objects/GRAFCET/vergent.c (vergent_move_handle): 
	* objects/GRAFCET/vector.c (arc_move_handle): 
	* objects/GRAFCET/transition.c (transition_move_handle): 
	* objects/GRAFCET/step.c (step_move_handle): 
	* objects/GRAFCET/condition.c (condition_move_handle): 
	* objects/GRAFCET/action.c (action_move_handle): 

	* objects/FS/function.c: 
	* objects/FS/flow.c: 
	* objects/FS/flow-ortho.c (orthflow_move_handle): 
	* objects/FS/flow-poly.c (flow_move_handle): 

	* objects/UML/usecase.c (usecase_move_handle): 
	* objects/UML/state_term.c (state_move_handle): 
	* objects/UML/state.c (state_move_handle): 
	* objects/UML/small_package.c (smallpackage_move_handle): 
	* objects/UML/realizes.c (realizes_move_handle): 
	* objects/UML/object.c (objet_move_handle): 
	* objects/UML/note.c (note_move_handle): 
	* objects/UML/node.c (node_move_handle): 
	* objects/UML/message.c (message_move_handle): 
	* objects/UML/lifeline.c (lifeline_move_handle): 
	* objects/UML/large_package.c (largepackage_move_handle): 
	* objects/UML/implements.c (implements_move_handle): 
	* objects/UML/generalization.c (generalization_move_handle): 
	* objects/UML/fork.c (fork_move_handle): 
	* objects/UML/dependency.c (dependency_move_handle): 
	* objects/UML/constraint.c (constraint_move_handle): 
	* objects/UML/compprop.c (compprop_move_handle): 
	* objects/UML/component.c (component_move_handle): 
	* objects/UML/branch.c (branch_move_handle): 
	* objects/UML/association.c (association_move_handle): 
	* objects/UML/actor.c (actor_move_handle): 
	* objects/UML/activity.c (state_move_handle): 
	* objects/UML/class.c (umlclass_move_handle): 

	* objects/standard/ellipse.c (ellipse_move_handle): 
	* objects/standard/zigzagline.c (zigzagline_move_handle): 
	* objects/standard/textobj.c (textobj_move_handle): 
	* objects/standard/polyline.c (polyline_move_handle): 
	* objects/standard/polygon.c (polygon_move_handle): 
	* objects/standard/line.c (line_move_handle): 
	* objects/standard/image.c (image_move_handle): 
	* objects/standard/bezier.c (bezierline_move_handle): 
	* objects/standard/arc.c (arc_move_handle): 
	* objects/standard/beziergon.c (beziergon_move_handle): 
	* objects/standard/box.c (box_move_handle): 
	
	* objects/ER/relationship.c (relationship_move_handle): 
	* objects/ER/participation.c (participation_move_handle): 
	* objects/ER/entity.c (entity_move_handle): 
	* objects/ER/attribute.c (attribute_move_handle): 
	
	* lib/polyshape.c (polyshape_move_handle): 
	* lib/polyshape.h: 
	* lib/orth_conn.c (orthconn_move_handle): 
	* lib/orth_conn.h: 
	* lib/neworth_conn.c (neworthconn_move_handle): 
	* lib/neworth_conn.h: 
	* lib/element.c (element_move_handle): 
	* lib/element.h: 
	* lib/connection.c (connection_move_handle): 
	* lib/connection.h: 
	* lib/beziershape.c (beziershape_move_handle): 
	* lib/beziershape.h: 
	* lib/bezier_conn.c (bezierconn_move_handle): 
	* lib/bezier_conn.h: 
	*BINARY COMPATIBILITY CHANGE*
	Update prototype for *_move_handle() to include connectionpoint,
	and also pass on modifiers.  Pass in connectionpoint where
	applicable. 
	
	* lib/dummy_dep.h (dummy_dep): Adding dummy dependencies for new
	file connectionpoint.c.

2003-08-17  Danilo Šegan  <dsegan@gmx.net>

	* configure.in: Added "sr" and "sr@Latn" to ALL_LINGUAS.

2003-08-15  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/object.c (object_copy): Use g_malloc0 instead of g_malloc.

	* lib/beziershape.c (beziershape_update_data): Autoroute
	directions for beziershapes!

	* lib/connectionpoint.c (find_slope_directions): 
	* lib/connectionpoint.h: Function for finding the available
	directions on a slope.

	* lib/polyshape.c: Reasonable directions for
	connectionpoints. 	

2003-08-14  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/Misc/analog_clock.c (analog_clock_update_arrow_tips): 
	* objects/GRAFCET/vergent.c (vergent_update_data): 
	* objects/GRAFCET/transition.c (transition_update_data): 
	* objects/GRAFCET/action.c (action_update_data): 
	* objects/GRAFCET/step.c (step_update_data): 
	* objects/FS/function.c (function_update_data): 
	* lib/connpoint_line.c (connpointline_putonaline): 
	* objects/ER/attribute.c (attribute_update_data): 
	* objects/ER/entity.c (entity_update_data): 
	* objects/ER/relationship.c (relationship_update_data): 
	* objects/chronogram/chronoline.c (chronoline_update_data): Set
	directions for connection points.

	* objects/UML/component.c (component_create): Set to allow
	parenting. 

	* app/create_object.c (create_object_button_press): 
	* app/diagram.[ch] (diagram_find_clicked_object_except): 
	* lib/diagramdata.[ch] (layer_find_closest_object_except): 
	Avoid parenting to objects you're connecting to (otherwise you
	couldn't make a connection out of a parenting object).  To do
	this, added functions to find the nearest object except a given
	list of objects.
	
	* app/render_libart.c: Rearrange libart include to avoid multiple
	include program (and put libart includes inside #ifdef!)

2003-08-13  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/dialibartrenderer.c: Don't include art_config.h if others
	also do, as it isn't #ifdef'd.

	* objects/flowchart/ellipse.c (ellipse_update_data): Add
	directions for connection points.

2003-08-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/flowchart/box.c (box_update_data): Add directions, use
	connpoint_update. 
	(box_load): Use g_malloc0.

	* lib/Makefile.am (libdia_la_SOURCES):
	* lib/connectionpoint.c (connpoint_update): 
	Function to call to update a connection point info in _update_data().
	
	* lib/connectionpoint.h: Convenience DIR_ macros.

	* app/preferences.c (prefs_data): Make pretty formatted XML the
	default.

	* lib/dialibartrenderer.c: 
	* app/render_libart.c: Make sure art_config.h is included, cause
	some libart headers are broken.

	* configure.in (HAVE_FREETYPE): Restore CPPFLAGS to old value
	after test.  Add freetype-config cflags to cflags variable.

2003-08-11  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/authors.h: Credits for Krzysztof.

	* sheets/Flowchart.sheet.in: Updated descriptions from Krzysztof
	Foltman <kfoltman@onet.pl>.  It occurs to me that the name (rather
	than the description) is visible in the title of the properties
	dialog.  That ought to be a short description (translatable),
	though we still want long descriptions for the tooltips.  Hmmm...

	* configure.in: Updated to use AC_LINK_IFELSE instead of
	AC_TRY_COMPILE, also force to link to check libs on Solaris.

	* objects/ER/entity.c (entity_load): 
	* objects/ER/attribute.c (attribute_load): 
	* lib/attributes.c (attributes_set_default_font): 
	Check if font is non-null before unreffing.
	
2003-08-08  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/diagram.c (diagram_ungroup_selected) 
	(diagram_group_selected): Use the undo apply to make sure grouping
	and ungrouping is done in consistent manners.  This removes a fair
	amount of duplicated code from diagram.c.

	* app/undo.c (ungroup_objects_revert, ungroup_objects_apply) 
	(group_objects_revert, group_objects_apply): Working undo/redo for
	diagram tree updates.  The initial actions still don't quite work.

2003-08-07  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/create_object.c (create_object_button_press): 
	* app/undo.[ch]: 
	* app/diagram.c: Undo support for parenting.  Uses apply/revert in
	undo only for manipulating the parent/child relationships.  Things
	like removing an object doesn't use the undo functions for
	parenting, so any updates to come (like to diagramtree) should be
	done in those, too.

2003-08-03  Hans Breuer  <hans@breuer.org>

	* app/create_object.c : minor formating and g_new0 for
	tool creation

	* lib/bezier_conn.[hc] lib/beziershape.[hc]
	  lib/prop_geomtypes.c (prop_geomtypes_register)
	  objects/standard/bezier.c objects/standard/beziergon.c :
	ability to set bezpoints via StdProp api

	* plug-ins/python/pydia-property.c : convert list of tuples
	to BEZPOINTARRAY

	*  plug-ins/python/diasvg_import.py : use it to
	implement part of path parsing. Also minor improvements
	like inheritance of group attributes to members,
	whitespace, title and style:text/css ignoring ;-)

2003-08-02  Hans Breuer  <hans@breuer.org>

	* lib/connections.c (connection_move_handle): return
	something to make it compile
	* lib/object.c(190) : error C4033: 'object_list_move_delta_r' 
	must return a value -> dito
	[Is there a warnings-as-errors switch we could use with gcc 
	 to avoid such in future ?]

	* plug-ins/python/pydia-object.h : define *_Check macros
	* plug-ins/python/diamodule.c : provide dia.group_create()
	* plug-ins/python/pydia-diagramdata.c : add 
	DiaDiagramData.add_layer()
	* plug-ins/python/pydia-property.c : allow to set color by
	tuple of doubles

	*  plug-ins/python/diasvg_import.py : based on the above
	implement a) group support, b) rgb(1,2,3) color handling,
	and somewhat fishy data:image/png;base64 support (create
	temporary files from inline image data)
	d) dump the import errors as text into an 'Error' layer

	*  plug-ins/python/diasvg.py : add xmlns:xlink, removed a
	stray " in draw_rect and corrected error message formating 

	* plug-ins/pydia/pydia-geometry.c : removed ## to make it
	compile with gcc 3.3, fixes bug #117204. Thanks to Daniel 
	Jacobowitz.
	
2003-08-01  Hubert Figuiere  <hfiguiere@teaser.fr>

	* app/magnify.c (create_magnify_tool): allocate with g_new0()

	* app/preferences.c (prefs_create_dialog): use checkboxes for boolean 
	preferences values (see bug 118570). Also group items into a GtkFrame.

2003-07-31  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/menus.c:
	* app/menus.h:
	* app/commands.h: 
	* app/commands.c (objects_unparent_children_callback): 
	* app/diagram.h: 
	* app/diagram.c (diagram_unparent_selected,
	(diagram_update_menu_sensitivity): 
	Added unparenting of single children.

	* lib/bezier_conn.c:
	* lib/bezier_conn.h:
	* lib/beziershape.c:
	* lib/beziershape.h:
	* lib/connection.c:
	* lib/connection.h:
	* lib/element.c:
	* lib/element.h:
	* lib/group.c:
	* lib/neworth_conn.c:
	* lib/neworth_conn.h:
	* lib/object.h:
	* lib/orth_conn.h:
	* lib/poly_conn.c:
	* lib/poly_conn.h:
	* lib/polyshape.c:
	* lib/polyshape.h:
	* objects/EML/instantiation.c:
	* objects/EML/interaction-ortho.c:
	* objects/EML/interaction.c:
	* objects/EML/process.c:
	* objects/ER/attribute.c:
	* objects/ER/entity.c:
	* objects/ER/participation.c:
	* objects/ER/relationship.c:
	* objects/FS/flow-ortho.c:
	* objects/FS/flow-poly.c:
	* objects/FS/flow.c:
	* objects/FS/function.c:
	* objects/GRAFCET/action.c:
	* objects/GRAFCET/condition.c:
	* objects/GRAFCET/step.c:
	* objects/GRAFCET/transition.c:
	* objects/GRAFCET/vector.c:
	* objects/GRAFCET/vergent.c:
	* objects/Misc/analog_clock.c:
	* objects/SADT/annotation.c:
	* objects/SADT/arrow.c:
	* objects/SADT/box.c:
	* objects/UML/activity.c:
	* objects/UML/actor.c:
	* objects/UML/association.c:
	* objects/UML/branch.c:
	* objects/UML/class.c:
	* objects/UML/classicon.c:
	* objects/UML/component.c:
	* objects/UML/constraint.c:
	* objects/UML/dependency.c:
	* objects/UML/fork.c:
	* objects/UML/generalization.c:
	* objects/UML/implements.c:
	* objects/UML/large_package.c:
	* objects/UML/lifeline.c:
	* objects/UML/message.c:
	* objects/UML/node.c:
	* objects/UML/note.c:
	* objects/UML/object.c:
	* objects/UML/realizes.c:
	* objects/UML/small_package.c:
	* objects/UML/state.c:
	* objects/UML/state_term.c:
	* objects/UML/usecase.c:
	* objects/chronogram/chronoline.c:
	* objects/chronogram/chronoref.c:
	* objects/custom/custom_object.c:
	* objects/flowchart/box.c:
	* objects/flowchart/diamond.c:
	* objects/flowchart/ellipse.c:
	* objects/flowchart/parallelogram.c:
	* objects/network/bus.c:
	* objects/network/wanlink.c:
	* objects/standard/arc.c:
	* objects/standard/bezier.c:
	* objects/standard/beziergon.c:
	* objects/standard/box.c:
	* objects/standard/ellipse.c:
	* objects/standard/image.c:
	* objects/standard/line.c:
	* objects/standard/polygon.c:
	* objects/standard/polyline.c:
	* objects/standard/textobj.c:
	* objects/standard/zigzagline.c:
	Binary compatibility update:  Added return value for foo_move() and
	foo_move_handle().  Orthconn derivatives also returns change from
	orthconn_move_handle().
	
	* lib/orth_conn.c: Undo support for autorouting.  Neworthconn
	doesn't support it yet.

	* lib/object.c (object_list_move_delta_r, object_list_move_delta):
	Add returning ObjectChange from object moves.  Needs to handle
	multiple object moves.

	* app/modify_tool.c (modify_motion, modify_release): Add
	ObjectChange from move & move_handle to undo stack.

	* objects/EML/instantiation.c (instantiation_move): Removing
	duplicate move & update.

2003-07-30  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xfig/xfig-export.c: Added support for arrow head
	export.  Many arrow types not supported by XFig, replacing those
	with standard arrows.  Not sure whether it'd be better to render
	them as a group of lines instead.  You'd lose the arrow-ness for
	further editing, but preserve the actual shape of it.  Also added
	support for dash length.

	* plug-ins/xfig/xfig-import.c: Added support for dash length settings.

	* plug-ins/xfig/fig-format-3.2: Added copy of Fig format
	description for version 3.2, for reference.

	* plug-ins/xfig/xfig-import.c: Added import of arrows.

	* app/menus.c: Removed prefs item from Gnome diagram menu.  Made
	Align Vertical Adjacent call _v rather than _h.

2003-07-29  Hubert Figuiere  <hfiguiere@teaser.fr>

	* app/scroll_tool.c (create_scroll_tool): 
	* app/modify_tool.c (create_modify_tool): use g_new0() to
	initialize the tool

2003-07-29  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in: Added proper settings for XSLT_LIBS and XSLT_CFLAGS.

2003-07-24  Pablo Saratxaga  <pablo@mandrakesoft.com>

	* configure.in: Added Macedonian (mk) to ALL_LINGUAS

2003-07-23  Dmitry G. Mastrukov  <dmitry@taurussoft.org>

	* configure.in: Added Belarusian to ALL_LINGUAS.

2003-07-19  Hans Breuer  <hans@breuer.org>

	[
	 Make the xslt plug-in work on win32, too. It appears
	 to require a quite recent version of libxml and libxslt,
	 otherwise windoze pathes aren't translated correctly
	 during file processing
	]

	* plug-ins/xslt/xslt.h : #include <glib.h> before 
	using G_OS_WIN32

	* plug-ins/xslt/xslt.c : plugged some memory leaks and do
	the 'script' file finding similar to how it is done
	with the python scripts (no need for hardcoded pathes,
	removed the 'plugin' part from the path)

	* plug-ins/xslt/stylesheets.xml : added again. It does
	not have any path but only the pure filename again

	* plug-ins/xslt/stylesheets.xml.in : removed

	* plug-ins/xslt/Makefile.am : removed 'plugin' and the
	rule to process stylesheets.xml.in

	* plug-ins/makefile.msc : added xslt

2003-07-19  Hans Breuer  <hans@breuer.org>

	Finally Dia learned to remember the recent selected sheet

	* app/preferences.[hc] : added prefs.recent_sheet
	* app/interface.c : restore and remember the sheet-option-menu
	history, but only if the respective number is stiil available.
	This additional adds robustness against running Dia without
	any sheet (e.g. installation problems)
	* app/app_procs.c : call prefs_safe() in app_exit() to remember
	changes which are not done by the prefernces dialog

	* app/diagram_tree_menu.c app/diagram_tree_menu_callbacks.c :
	removed every call (especially the conditional ones) to prefs_safe().
	Before prefs_safe() was called _many_ times during Dia startup
 
2003-07-18  Hans Breuer  <hans@breuer.org>

	* app/makefile.msc lib/makefile.msc lib/libdia.def :
	updated win32 build

	* lib/color.c : use gtk_widget_get_default_visual();
	as suggested in #114536

	* app/interface.c app/disp_callbacks.c :
	moved round_up () to the latter file where it is used

	* app/linewidth_area.c : #include "interface.h" for
	interface_get_toolbox_shell()

2003-07-18  Hubert Figuiere  <hfiguiere@teaser.fr>

	* plug-ins/pixbuf/.cvsignore
	* shapes/Cisco/.cvsignore: 
	added cvsignore

2003-07-17  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/dia-props.c (diagram_properties_retrieve): Use
	diagram_get_name() to add the diagram name to the diagram
	properties dialog.

	* app/diagram.h: 
	* app/diagram.c (diagram_get_name): New function to get a
	reasonable diagram name.

	* lib/diagramdata.h: Added major_lines, dynamic and colour to grid
	info.  Still need to be able to set dynamic grid.  Also ought to
	follow Gnome style and have instant apply.

	* app/preferences.h: 
	* app/preferences.c (prefs_data): Remove option to use stippled
	grid, add option for major line offset.  Default to 5 minor lines
	per major line.
	Add option for dynamically sized grid.

	* app/display.c (ddisplay_render_pixmap): Call pagebreak_draw as well.

	* app/grid.c: Pagebreak drawing separated out.  Grid drawing using
	stippled/solid to display minor/major grid lines.  Line drawing in
	separate functions away from calculating line distance.

	* app/grid.h: Split page break drawing out of grid_draw.

	* app/layer_dialog.c (layer_dialog_show): Patch from Hubert
	Figuiere <hfiguiere@teaser.fr>:  Layer dialog show go to front
	when menu item is selected.

2003-07-15  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in: Removed -Winline flag to make way for important
	warnings. 

	* samples/UML-demo.dia: Adjusted for 0.91 font size, saved as
	non-compressed.  Should fix bug #117381, also look prettier.
	
	* Makefile.am: 
	* dia.desktop.in: Patch from Mark McLoughlin <mark@skynet.ie>:
	Set up desktop info more properly.

2003-07-13  Lars Clausen  <lrclause@cs.uiuc.edu>

	* activity.c:
	* actor.c:
	* branch.c:
	* class.c:
	* classicon.c:
	* component.c:
	* large_package.c:
	* lifeline.c:
	* node.c:
	* note.c:
	* object.c:
	* small_package.c:
	* state.c:
	* state_term.c:
	* usecase.c: 
	Autorouting directions patch from Krzysztof Foltman
	<kfoltman@onet.pl>.

	* app/menus.c: Wrong GNOME paren fixed.  Correct callbacks for
	GNOME parent menu items.
	
	* app/authors.h: Added Vadim to contributors list.

2003-07-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/commands.[ch]: 
	* app/create_object.c: 
	* app/disp_callbacks.[ch]: 
	* app/diagram.[ch]: 
	* app/interface.c: 
	* app/load_save.c: 
	* app/menus.[ch]:
	* app/modify_tool.c
	* app/undo.[ch]:
	* lib/Makefile.am:
	* lib/group.c: 
	* lib/object.[ch]: 
	* lib/parent.[ch]:
	* objects/UML/large_package.c: Patch from Vadim Berezniker
	<vadim@berezniker.com>: 
	Objects may "parent" other objects, i.e. contain them within
	themselves, restrain them and move them along.  Some more stuff is
	needed, such as selection and individual unparenting.  This adds
	parenting to UML - Large Package rather than Box.

2003-07-11  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/linewidth_area.c: Patch from Krzysztof Foltman
	<kfoltman@onet.pl>: Make linewidth dialog conform to HIG (well,
	conform more, at least:).

	* plug-ins/metapost/render_metapost.[ch] : Applied patch from
	Chris Sperandio <sperandi@eng.usf.edu>:  Fixed linewidths and
	arcs.  Implemented images (though there is some pixelization and
	banding in the output).  Changed output file format to be a little
	more readable.  

	* app/app_procs.c (app_exit): Added message for double exit, which
	shouldn't happen any more.  Also preventing strange g_object_unref
	messages by having a printf after gtk_main_quit.  This is really
	weird.

	* app/interface.c (toolbox_delete): Avoid double app_exit call by
	removing handler for destroy when delete is called.

2003-07-07  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/display.h: 
	* app/display.c (ddisplay_scroll_to_object,
	ddisplay_scroll_center_point):  New function for easy scrolling to
	object or point.

2003-07-06  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xslt/Makefile.am: Patch from Hubert Figuiere:  Add
	$(srcdir) on stylesheets.xml.

	* app/menus.c: Patch from Hubert Figuiere: Adds help menu to
	diagram menus (since they're at the top by default now).  Also
	move the Properties... menu item from Dialogs to Objects.  Dialogs
	menu should disappear at some point.

	* autogen.sh: Patch from Hubert Figuiere: Don't automatically call
	./configure from ./autogen.sh, as configure may need to be run
	from a different directory.  (Also more standard this way.)

	* app/app_procs.c (app_init): 
	* app/Makefile.am (INCLUDES): Gnome standardization patch from
	Alex. 

2003-07-03  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/flowchart/parallelogram.c (pgram_update_data):
	Left/right alignment for parallelograms.  Doesn't use all
	available space, but then pgrams also ignore their shear value.
	This thing needs a loving hand.

2003-07-01  Hans Breuer  <hans@breuer.org>

	* lib/properties.h : introduce PROP_FLAG_OPTIONAL
	* lib/proplist.c : don't complain if optional attr is missing
	* lib/orth_conn.h : make "orth_autoroute" optional to
	stop complaining with older files.

2003-06-13  Guntupalli Karunakar  <karunakar@freedomink.org>

	* configure.in: Added "ml" for Malayalam in ALL_LINGUAS.

2003-06-05  Andrew Halper  <ashalper@cox.net>

	* app/diagram_tree.c : add scrolling of drawing area
	to desired object on "Locate".  Patch modified to use new ddisplay
	function ddisplay_scroll_to_object().

2003-06-11  Lars Clausen  <lars@raeder.dk>

	* lib/diagramdata.h: Added major_lines, dynamic and colour to grid
	info.  Before next version, the grid dialog (view dialog, really)
	must be redone to allow a) instant apply, b) apply to all
	diagrams, and c) setting colour, dynamic, major lines.

	* app/preferences.h: 
	* app/preferences.c (prefs_data): Remove option to use stippled
	grid, add option for major line offset.  Default to 5 minor lines
	per major line.
	Add option for dynamically sized grid.

	* app/display.c (ddisplay_render_pixmap): Call pagebreak_draw as well.

	* app/grid.c: Pagebreak drawing separated out.  Grid drawing using
	stippled/solid to display minor/major grid lines.  Line drawing in
	separate function away from calculating line distance.

	* app/grid.h: Split page break drawing out of grid_draw.

2003-05-15  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/diasvg.py : add xlink definition,
	also avoid to put spaces into attribute values. At least
	Sodipodi doesn't like them in width/height attributes

	* plug-ins/python/diasvg_import.py : add simple scaling.
	Some (more) handling for <svg>, <desc>, <circle>	

	* plug-ins/python/scascale.py : (new file) which does
	some experimental scaling via StdProp api

	* plug-ins/python/pydia-cpoint.c 
	  plug-ins/python/pydia-handle.c : return PyDiaPoint for
	obj.pos not simple tuples. PyDiaPoint has a tuple interface
	so this may even be api compatible ...

2003-05-11  Hans Breuer  <hans@breuer.org>

	* app/line_area.c : add window position persitence

	* lib/poly_conn.[hc] lib/polyshape.[hc] : allow to set 
	'poly_points' via StdProp api
	* lib/neworth_conn.h : don't rely on OrthConn and 
	NewOrtConn having the same struct offsets

	* lib/properties.h : introduce PROP_FLAG_WIDGET_ONLY
	to help separating 'useful' properies - in terms of
	the PyDia access

	* objects/custom/custom_object.c
	  objects/UML/*.c
	add the missing prop_desc_list_calculate_quarks to
	all the *_describe_props()

	* objects/standard/beziergon.c objects/standard/bezier.c :
	explicit initializtion of default_user_data
	* objects/standard/polygon.c objects/standard/polyline.c :
	Same here. Also use POLY<CONN|SHAPE>_COMMON_PROPERTIES

	* plug-ins/python/diamodule.c : implement dia.register_import

	* plug-ins/python/makefile.msc : need to link with Pango
	for pango_color_parse()

	* plug-ins/python/pydia-property.c : add a bunch of type
	conversions to PyDiaProperty_ApllyToObject()

	* plug-ins/python/diasvg_import.py : (new file) which currently
	is mainly a stress test for PyDia but for some files already
	produces better results than svg-import.c

2003-05-06  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/UML/uml.c (uml_get_operation_string): Avoid ':' on
	type-less operations.

003-05-03  Hasbullah Bin Pit  <sebol@ikhlas.com>

        * configure.in(ALL_LINGUAS): Added "ms".

2003-05-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xslt/xslt.c (xslt_ok): 
	* plug-ins/shape/shape-export.c (new_shape_renderer): 
	* plug-ins/svg/render_svg.c (new_svg_renderer): 
	* plug-ins/hpgl/hpgl.c (export_data): 
	* plug-ins/dxf/dxf-export.c (export_dxf): 
	* plug-ins/metapost/render_metapost.c (export_metapost): 
	* plug-ins/pstricks/render_pstricks.c (export_pstricks): 
	* plug-ins/xfig/xfig-export.c (export_fig): 
	* plug-ins/wpg/wpg.c (export_data): 
	* plug-ins/cgm/cgm.c (export_cgm): 
	* app/render_eps.c (export_eps): 
	* app/export_png.c (export_png_ok): 
	* app/load_save.c (diagram_data_save): Adding and standardizing
	output file error messages to include fopen error message.

2003-05-01  Steffen Macke <sdteffen@web.de>

	* app/persistence.c: do not use unistd.h for MSVC build

2003-04-30  Lars Clausen  <lrclause@cs.uiuc.edu>

	* sheets/Assorted.sheet.in
	* sheets/Circuit.sheet.in
	* sheets/Contact.sheet.in
	* sheets/EML.sheet.in
	* sheets/ER.sheet.in
	* sheets/Electric.sheet.in
	* sheets/FS.sheet.in
	* sheets/Flowchart.sheet.in
	* sheets/GRAFCET.sheet.in
	* sheets/Logic.sheet.in
	* sheets/MSE.sheet.in
	* sheets/Misc.sheet.in
	* sheets/Pneumatic.sheet.in
	* sheets/SADT.sheet.in
	* sheets/SDL.sheet.in
	* sheets/UML.sheet.in
	* sheets/chronogram.sheet.in
	* sheets/ciscohub.sheet.in
	* sheets/ciscomisc.sheet.in
	* sheets/cisconetwork.sheet.in
	* sheets/ciscorouter.sheet.in
	* sheets/civil.sheet.in
	* sheets/network.sheet.in
	* sheets/sybase.sheet.in:
	Patch from Jan-Willem Harmanny <jwharmanny@zeelandnet.nl>
	standardizes shape descriptions to use no articles, no 'create
	...'.
	
	* app/interface.c (tool_data): Standard objects follow same
	standard as sheets.

2003-04-29  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/color_area.c (color_area_edit): More informative title on
	color selection dialog.

	* app/disp_callbacks.c (ddisplay_drop_object): Update menu
	sensitivity when dropping object in.  Also reset tool to pointer.

	* objects/flowchart/diamond.c (diamond_update_data): 
	* objects/flowchart/parallelogram.c (pgram_update_data): Added
	left and right alignment options.

2003-04-28  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/flowchart/box.c: Added left and right alignment options.

2003-04-26  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/persistence.c (persistence_load): Test existence of
	persistence file before trying to open it.

2003-04-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/properties.c: Escape now closes properties dialogs.

2003-04-25  Hans Breuer  <hans@breuer.org>

	* app/config.h.win32 : bump version to 0.91+cvs

	* app/makefile.msc lib/makefile.msc lib/libdia.def : updated

	* lib/dia_dirs.c : G_OS_WIN32: #define mkdir(s,a) _mkdir(s)

	* app/commands.c : don't leak "netscape" if getenv("BROWSER")
	returns NULL

	* app/presistence.c : need to #include "dia_xml_libxml.h"
	for xmlDiaParseFile

	* app/layer_dialog.c : make delayed creation work by protecting
	all non static layer_dialog_*() with :
	   if (layer_dialog == NULL || layer_dialog->dialog == NULL)
	     create_layer_dialog();
	* app/app_procs.c : removed /* create_layer_dialog(); */

	* objects/uml/association.c : give it a minimal StdProp
	implementation to fix bug #108896
	* lib/object_defaults.c : don't try to copy props if there
	is no obj->ops->describe_props

2003-04-24  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/image.c (image_create): 
	* objects/standard/ellipse.c (ellipse_create): 
	* objects/standard/box.c (box_create): 
	* objects/flowchart/ellipse.c (ellipse_create): 
	* objects/flowchart/diamond.c (diamond_create): 
	* objects/flowchart/box.c (box_create): 
	* objects/custom/custom_object.c (custom_create): 
	* objects/ER/relationship.c (relationship_create): 
	* objects/ER/entity.c (entity_create): 
	* objects/ER/attribute.c (attribute_create): Initialize
	elem->height to DEFAULT_HEIGHT instead of DEFAULT_WIDTH.

	* lib/dia_svg.c (dia_svg_parse_style): Added case to set center
	alignment. 

	* configure.in: 
	* plug-ins/Makefile.am: 
	* plug-ins/xslt/Makefile.am: 
	* plug-ins/xslt/xslt.c (dia_plugin_init): 
	Patch from Götz Waschk <waschk@informatik.uni-rostock.de> uses
	automake-style if to only include xslt dir when needed.  Works
	with automake 1.4 and up, at least.

2003-04-22  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/diasvgrenderer.c (draw_string): 
	* lib/dia_svg.c (dia_svg_parse_style): Use
	text-anchor:(start|middle|end).

	* lib/diasvgrenderer.c (draw_polygon, fill_polygon): Use svg
	polygon rather than polyline & avoid missing line pieces.
	(get_draw_style): Set fill-opacity to 0 on draw_style to avoid
	black-filled things.

2003-04-21  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/persistence.c (persistence_load): Check that persistence
	file exists before trying to read it.
	(persistence_update_window): Removed printf.

	* objects/GRAFCET/step.c: Don't copy defaults for name and id.

	* lib/autoroute.c: Take badness into the layouters again, as some
	of them know they can do things that are pretty but would be
	counted as ugly by the default calculation.

	* objects/UML/large_package.c: Shrink package name box when no
	stereotype is present.

	* lib/orth_conn.h (ORTHCONN_COMMON_MENUS): 
	* lib/orth_conn.c: Added object menu item for autorouting.

	* objects/FS/flow-ortho.c (orthflow_get_object_menu): 
	Autorouting, plus set initial dragging handle to be the end, not
	the middle.
	(orthflow_draw): Flipped arrow place to be at the end, as
	originally intended (got lost in arrow update).

	* objects/standard/zigzagline.c (zigzagline_get_object_menu): 
	* objects/UML/dependency.c (dependency_get_object_menu): 
	* objects/UML/association.c (association_get_object_menu): 
	* objects/UML/realizes.c (realizes_get_object_menu): 
	* objects/SADT/arrow.c (sadtarrow_get_object_menu): 
	* objects/GRAFCET/vector.c (arc_get_object_menu): 
	* objects/ER/participation.c (participation_get_object_menu): 
	* objects/EML/instantiation.c (instantiation_get_object_menu): 
	* objects/UML/generalization.c (generalization_get_object_menu): 
	* objects/EML/interaction-ortho.c (interaction_ortho_get_object_menu): 
	Autorouting setup (currently disabled for SADT/arrow).
	
2003-04-19  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/autoroute.c: Removed printfs.

	* lib/orth_conn.c: 
	* lib/autoroute.[ch] (autoroute_layout_orthconn): Handle
	non-connected orthconns too.

2003-04-18  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/orth_conn.h: 
	* lib/orth_conn.c: Function to set autorouting on/off, use
	autorouting in move_handle (turns off when a middle handle is
	moved), added to standard orthconn props. 

	* app/disp_callbacks.c (create_object_menu, popup_object_menu):
	Stopped signal emission for check menu items being set to on/off.

	* objects/standard/zigzagline.c: Added autorouting object menu item.

	* lib/autoroute.c: Added last cases of autoroute layout, fixed
	floating point comparison bug, cleaned up layouters, tweaked
	badness to allow kinks.	

2003-04-17  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/connectionpoint.h: Changed DIR_* macros to go around the
	clock. 

	* lib/orth_conn.[ch] (orthconn_set_points): New function to set all
	points at once.
	* objects/standard/zigzagline.c (zigzagline_move_handle): Removed
	old cruft, added call to autoroute (currently cannot be turned
	off).  Need to check what undo thinks about this.
	* lib/autoroute.[ch]: Fairly working simple layout.

	* lib/Makefile.am (libdia_la_SOURCES): Added autoroute files.
	* lib/autoroute.[ch]: Start of proper autorouting functionality.

2003-04-10  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/prop_widgets.c: Show labels on ListProp.

2003-04-11  Steffen Macke <sdteffen@web.de>

	* doc/en/dia-manual.xml: removed reference of non-existing authors 
	note.
	* doc/en/usage-objects-selecting: commented out misleading section
	references.

2003-04-10  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/app_procs.c (app_init): Layer window now opened at startup
	only if needed.

	* lib/prop_widgets.c: Show labels on ListProp.

2003-04-09  Steffen Macke <sdteffen@web.de>

	* doc/en/*.sgml: removed files
	* doc/en/*.xml: added files
	* doc/en/Makefile.am: switched to XML DocBook

2003-04-09  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xslt/xslt.c (dia_plugin_init): 
	* configure.in: Added --with-xslt-prefix to allow other XSLT
	placements than /usr/lib.

2003-04-09  Steffen Macke <sdteffen@web.de>

	* lib/makefile.mingw: updated to include latest files, including 
	and linking libintl
	* lib/geometry.h: don't define isinf and finite for mingw gcc build

2003-04-08  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/persistence.h:
	* app/persistence.c (persistence_register_window_create): 
	* app/app_procs.c (app_init): 
	Register window function that doesn't create the window unless it
	should be open.  Other windows should move to this, so startup
	speed can be reduced.
	
	* app/persistence.h: Removed call prototype for update_window, now
	done internally.
	* app/persistence.c (persistence_register_window): A number of
	fixes.  Doesn't forget position when window is closed.  Now
	actually loads prefs.

	* app/layer_dialog.c (create_layer_dialog): Removed extraneous
	event connect.

	* app/preferences.c (prefs_data): 
	* app/diagram_tree_window.h: 
	* app/diagram_tree_window.c: Added persistence registering.
	Removed prefs items storing size and openness. 

	* app/sheets_dialog.c (create_sheets_main_dialog): Added
	persistence registering.  

	* app/Makefile.am (dia_core_files): Added persistence files.

	* lib/dia_dirs.h: 
	* lib/dia_dirs.c (dia_config_ensure_dir): New function to ensure
	that dirs are present.

	* app/app_procs.c (app_init): Loads persistent values on startup.
	(app_exit): Saves persistent values on exit.

	* app/layer_dialog.c (create_layer_dialog): Registers the layer
	window for persistence.

	* app/persistence.[ch]: New files handling various kinds of
	persistence.

2003-04-04  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/arrows.c: Adjusted arrow head spacing, more systematic arrow
	head spacing calculations.  Added half-circle arrow from Matthieu
	Sozeau <mattam@netcourrier.com> 

2003-04-03  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/app_procs.c (app_init): Moved layer dialog init to allow
	tooltips to be initialized.

	* app/interface.c (create_display_shell): More tooltips.

	* app/linewidth_area.c (linewidth_area_create) 
	(linewidth_area_events): 
	* app/color_area.c (color_area_events, color_area_create): 
	Made tooltips work by embedding drawing_area in event_box.

	* app/interface.c (create_display_shell,
	(create_lineprops_area, create_color_area): Added a few tooltips.

2003-04-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/pixmaps/off-grid.xpm: 
	* app/pixmaps/on-grid.xpm: 
	* app/Makefile.am (EXTRA_DIST): Added snap to grid icons.

	* app/display.h: 
	* app/commands.c (view_snap_to_grid_callback): 
	* app/display.c (ddisplay_set_snap_to_grid) 
	(update_snap_grid_status): 
	* app/interface.c (create_display_shell, grid_toggle_snap): 
	Added snap-to-grid status button.

2003-03-31  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/app_procs.c (app_init): Create a new diagram if a file on
	the command line isn't found.

2003-03-17  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/dialibartrenderer.c (draw_string): Correct color handling
	for AA.

2003-03-14  Lars Clausen  <lrclause@cs.uiuc.edu>

	* NEWS: 
	* doc/en/dia-manual.sgml: 
	* doc/pl/dia-manual.sgml: 
	* configure.in: 
	* dia.spec (Release): 
	Version 0.91 is here!

2003-02-10  Steffen Macke <sdteffen@web.de>

	* plug-ins/wmf/wmf.cpp: patch from Ken Tsukahara 
	<ken.tsukahara@tmt-d.co.jp>, fixes windows printing and WMF export of
	non-ANSI characters, closes #107980

2003-03-04  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in: 
	* NEWS: 
	* dia.spec (Release): 
	* doc/en/dia-manual.sgml: Upping to pre6.

	* configure.in: Missing comma broke HAVE_IEEEFP_H test.

	* app/lineprops_area.c (dia_arrow_chooser_new): Fixing bug
	#107511:  Make arrow selector for correct arrow type.

2003-03-03  Lars Clausen  <lrclause@cs.uiuc.edu>

	* shapes/Circuit/Makefile.am (SHAPES): Added hjumper.png to
	EXTRA_DIST.

2003-03-02  Lars Clausen  <lrclause@cs.uiuc.edu>

	* doc/en/dia-manual.sgml: 
	* configure.in: 
	* NEWS: 
	* dia.spec (Release): Upping to pre5.

	* configure.in: Add freetype-config derived libs to the
	AC_CHECK_LIB statement for freetype.

2003-02-28  Hans Breuer  <hans@breuer.org>

	[fix for bug #107203]

	* lib/diarenderer.c : add warning 'implementation'
	for fill_rect to avoid crashing with a renderer
	which does not implement this required function.

	* plug-ins/dxf/dxf-export.c : provide - still empty -
	'implementations' for fill_rect and fill_polygon 
	to suppress the above warnings. Now it works like
	in version 0.90 

2003-02-28  Steffen Macke <sdteffen@web.de>

	* samples/all_objects.dia: New sheet containing all dia shapes
	and objects; one layer per sheet
	
2003-02-28  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/prop_text.c (multistringprop_get_widget,
	multistringprop_reset_widget, multistringprop_set_from_widget): 
	Now uses GtkTextView instead of deprecated stuff, and also works:)

	* configure.in: Slightly more informative error message for isinf.

	* dia.spec (Requires): Require libxml2 rather than libxml.

2003-02-28  Steffen Macke <sdteffen@web.de>

	* shapes/Circuit/hjumper.png:
	* shapes/Circuit/hjumper.shape: added missing icon for horizontal
	jumper shape
	
2003-02-26  Lars Clausen  <lrclause@cs.uiuc.edu>

	* doc/en/dia-manual.sgml: 
	* configure.in: 
	* dia.spec (Release):
	* NEWS: New prerelease 0.91pre4, two important fixes.

2003-02-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xslt/Makefile.am (EXTRA_DIST): Also dist
	stylesheets.xml.in 

	* app/commands.c (help_manual_callback): More correct URL for help
	page (include file://, was broken on Dillo without it).

2003-02-24  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/disp_callbacks.c: Set modifed when text is changed.

	* app/modify_tool.c (modify_button_release): Allow undo for moving
	objects.

2003-02-16  Lars Clausen  <lrclause@cs.uiuc.edu>

	* dia.spec: 
	* doc/en/dia-manual.sgml: 
	* NEWS: 
	* configure.in: New prerelease with important bugfix.
	* shapes/network/digitizing_board.png:
	* shapes/network/plotter.png: Re-adding with -kb.
	
2003-02-17  Abel Cheung  <maddog@linux.org.hk>

	* app/app_procs.c (app_init): Add comment for translators.

2003-02-16  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/filter.c (filter_register_import, filter_register_export):
	Don't accept filters with NULL description.

	* lib/plug-ins.c (dia_plugin_load): Fail if there's no description
	(as we assume the description is available in other places).

2003-02-15  Lars Clausen  <lrclause@cs.uiuc.edu>
	
	* app/disp_callbacks.c (ddisplay_vsb_update, ddisplay_hsb_update): 
	* app/display.c (ddisplay_resize_canvas): Use
	ddisplay_add_update_all().
	(ddisplay_add_update_all): Free display and update lists when
	doing update_all, as they'll be regenerated immediately to cover
	all visible area.  Fixes bug #106165, crash when resizing.  This
	appears to be the original AA crash bug, believed long extinct.

2003-02-13  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/commands.c (help_manual_callback): Use file: protocol for
	help. 

	* plug-ins/xslt/.cvsignore: Ignore .o files, please.

	* plug-ins/xslt/stylesheets: Removed old-style config file.
	
	* plug-ins/xslt/stylesheets.xml.in: New XML-based config file.

	* plug-ins/xslt/Makefile.am: 
	* plug-ins/xslt/xslt.c: Applied patch from Matthieu, improved path
	handling (no more DIA_PLUGIN_PATH).

2003-02-11  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/svg/render_svg.c: 
	* lib/diasvgrenderer.c: Fixed numeric localized output issues.

2003-02-10  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/SADT/arrow.c (sadtarrow_draw): Clamp cosa, cosb to 
	[-1.0, 1.0].  Shouldn't be necessary, but in some cases the
	side of the triangle is longer than the hypotenuse.  Rounding
	error suspected.

2003-02-09  Lars Clausen  <lrclause@cs.uiuc.edu>

	* NEWS: 
	* configure.in: 
	* doc/en/dia-manual.sgml: Update for pre2.

	* app/menus.c (display_menu_items): Fixed wrongly place separators.

	* objects/flowchart/box.c (box_update_data): Applied patch from
	Eivind Tagseth <eivind-gnome@multinet.no> to allow resize (with
	comment). 

	* app/paginate_psprint.c (print_page): Set paper name, so it
	convinces ps printers to use to right size.

2003-02-07  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/properties.c (properties_show): Hide the dialog if the
	object is NULL (get rid of 'no properties' randomly popping up).

2003-02-06  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/pixbuf/pixbuf.c (export_data): Adjust width and height
	for diagrams not starting at origo.

2003-02-05  Lars Clausen  <lrclause@cs.uiuc.edu>

	* dia.spec (BuildRequires): Use libxml2-devel.

	* plug-ins/pixbuf/Makefile.am: Added to CVS.

	* RELEASE-PROCESS: Note on RPM version numbers.

	* app/interface.c (create_display_shell): Don't set as toolbar
	under Unix, either.  Especially not the diagram shell.  It removes
	it from the taskbar and makes it unresizable, always-on-top with
	OpenBox.  TOOLBAR != TOOLBOX.  Setting toolbox to the only
	appropriate thing, UTILITY, is not good either, you lose resizing
	and minimizing/maximizing under OpenBox.

	* app/menus.c (display_menu_items): Set delete item to use Delete.

2003-02-04  Lars Clausen  <lrclause@cs.uiuc.edu>

	* dia.spec (BuildRequires, Requires): Updated for Gtk2
	requirements.

	* app/disp_callbacks.c (ddisplay_canvas_events): Only add a
	display flush when getting focus in, or we may get an update after
	the diagram has been destroyed in some cases.  Fixes bug #105221.

	* plug-ins/xfig/xfig-import.c: Notes on the splines used by XFig.

	* lib/diarenderer.c: Notes on the basis matrix for our beziers.

	* app/app_procs.c (app_init): Fixed missing popt context for Gnome
	- gnome-compiled Dia will now read files specified on the command line.

2003-02-03  Lars Clausen  <lrclause@cs.uiuc.edu>

	* INSTALL (REQUIREMENTS): Updated requirements section.

	* configure.in: Better finite() check from Mårten Svantesson
	<f95-msv@nada.kth.se>.  Doesn't seem to generate strange dangly
	if's. 
	
2003-02-03  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xfig/xfig-import.c: Notes on spline conversions.

	* app/app_procs.c (debug_break): Added some code to avoid
	over-eager optimizations removing the call.  Surely there's a
	nicer way, but I'm not sure how.

	* app/diapsft2renderer.c (draw_bezier_outline): Removed paps relic
	that set text to black.

2003-02-02  Lars Clausen  <lrclause@cs.uiuc.edu>

	* NEWS: Mention of Twiki as doc source for Python.

	* plug-ins/pixbuf/pixbuf.c: Export with pixbuf if
	libart/libpng is not available.  Later when we have a way of
	letting the user pick options in the file select dialog we shall
	allow the choice when applicable.

2003-02-02  Steffen Macke <sdteffen@web.de>

	* doc/en/usage-loadsave.sgml:
	* doc/en/usage-objects.sgml: patch from
	James K. Lowden <jklowden@schemamania.org> to fix
	some docbook errors
	
2003-02-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/Makefile.am (SUBDIRS): 
	* plug-ins/pixbuf/pixbuf.c: 
	* plug-ins/pixbuf/Makefile.am: 
	* configure.in: 
	Added pixbuf plugin to Makefile.am, but for import only.  PNG
	export handled by libart, which is better. JPG export is
	discouraged.  BMP is not much used on Unix.  Next release will
	integrate libart to allow all outputs.

2003-02-01  Hans Breuer  <hans@breuer.org>

	* app/preferences.c :
	* app/pagesetup.c :
	the last two dialogs with 'old' button order finally
	are converted to gtk2, no GnomeDialog in all of Dia 
	anymore :-) 

2003-02-01  Hans Breuer  <hans@breuer.org>

	* app/filedlg.c : don't try to use a button as
	'overwrite-file-dialog'-parent, use the FileSelDialog
	instead

	* plug-ins/pixbuf/pixbuf.c : make it work with 
	system-visual-depth < 24. Remove 'bmp' from output
	format extensions, it just was wishful thinking.

	* plug-ins/python/Makefile.am : added the four new python 
	plug-ins mentioned below to pyplugin_DATA and EXTRA_DIST

2003-02-01  Hans Breuer  <hans@breuer.org>

	* NEWS : updated content beside dependencies

2003-02-01  Hans Breuer  <hans@breuer.org>

	* lib/arrow.h : arrow_types needs to be declared as DIAVAR
	to make it useable across DLL boundaries
	* app/lineprops_area.c : same code to access arrow_types
	on all platforms

	* objects/UML/class.c : the non empty string is e.g.
	comment != NULL && comment[0] != '\0'
	* objects/UML/uml.c : same here, don't bother with
	empty operation stereotypes

2003-02-01  Steffen Macke <sdteffen@web.de>

	* app/lineprops_area.c: latest changes do not work on
	windows, using old code without tooltips
	* makefile.msc: fixed copying of wmf.dll
	* plug-ins/makefile.msc: 
	* app/makefile.msc:
	* lib/makefile.msc: now linking libintl
	* config.h.win32: enabling native language support

2003-01-31  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xslt/Makefile.am (libxslt_filter_la_LDFLAGS): Removed
	-ldl and -lglib.  May or may not work on windows...awaiting verdict.

2003-01-31  Daniel Yacob  <locales@geez.org>

	* configure.in: Added am (Amharic) to ALL_LINGUAS.

2003-01-31  Steffen Macke <sdteffen@web.de>

	* objects/UML/class.c (umlclass_calculate_data): fixed crash
	when comments were visible, no class comment available and
	a attribute comment
	 
2003-01-31  Lars Clausen  <lrclause@cs.uiuc.edu>

	* RELEASE-PROCESS: Updated to fit new install-module syntax.
	* Prerelease 0.91-pre1 released on a suspecting public.  Tagging
	with DIA_0_91_PRE1.

2003-01-30  Lars Clausen  <lrclause@cs.uiuc.edu>

	* config.h.win32: 
	* NEWS: 
	* configure.in:
	* dia.spec:
	Prerelease version changes, version 0.91-pre1.

	* app/sheets_dialog_callbacks.h: 
	* app/sheets_dialog_callbacks.c: 
	* app/sheets_dialog.c (create_sheets_main_dialog): 
	* app/sheets.c (sheets_dialog_create): More destroy stuff.  Trying
	to handle destruction of main dialog cleanly, but it's a mess.

	* configure.in: Downgraded ieeefp test to make it not produce
	illegal shell code.

	* lib/widgets.c (dia_arrow_selector_set_arrow): 
	(dia_line_style_selector_set_linestyle): Select menu dot
	correctly set.

	* lib/arrows.c (calculate_arrow_point): Fix of wrong arrow
	adjustment for diamondheads.

	* lib/plug-ins.c (dia_plugin_load): Fixed typo.

	* app/properties.c (create_dialog): Destroy properties dialog and
	box correctly.

	* app/sheets_dialog_callbacks.c
	(on_sheets_dialog_button_edit_clicked): Only create a new dialog
	if the old one is destroyed.

2003-01-29  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/export_png.c (export_png_ok): Added info on resolution.
	Should (next release) improve export dialog to allow setting
	resolution instead of pixels.

	* app/lineprops_area.c (dia_arrow_chooser_new): Use menudesc list
	to generate arrowheads as well as tooltips.

	* lib/arrows.c: Added hollow diamond to menudesc list.

	* lib/arrows.[ch]: 
	* lib/widgets.[ch]: Moved arrow name list into arrows.[ch] to
	unify with rendered menu.

	* lib/diarenderer.c (draw_line_with_arrows)
	(draw_polyline_with_arrows, draw_arc_with_arrows)
	(draw_bezier_with_arrows): Fixed linestyle change bug (#104488)
	without changing renderer API.  Thanks to David Scherba for
	providing inspiration.

2003-01-28  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/interface.c (create_display_shell):
	* app/display.h: Patching from Hubert Figuiere
	<hfiguiere@teaser.fr>:  Better types for menu bar widgets, and
	correct menu items.

2003-01-26  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/defaults.c (defaults_show): Fixed defaults closing bug.
	Thanks to Hans for pointing it out.

2003-01-25  Hans Breuer  <hans@breuer.org>

	* app/commands.c : don't warn about crashing libart renderer
	on win32. It simply doesn't render text anymore :-(

	* app/filedlg.c : use GtkMessageDialog for 'file overwrite'

	* objects/UML/class.c : don't access umlclass->properties_dialog
	after calling gtk_widget_destroy(umlclass->properties_dialog->dialog)
	which sets the former to NULL by destroy_properties_dialog() callback.

	* plug-ins/wmf/wmf.cpp : use dia_image_rowstride()

	* plug-ins/python/pydia-font.c : fix PyDiaFont_GetAttr()

	* plug-ins/python/pydia-image.c : add image.uri member
	not only useful for SVG rendering

	* plug-ins/python/diasvg.py : (new file) a more advanced
	example. A full blown SVG Renderer, currently only
	registered for .svgz

	* plug-ins/python/export-object.py : write text props

	* plug-ins/python/debug_objects.py : write prop.type and
	prop.visible 

2003-01-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/UML/association.c (association_update_data): Better
	bounding box for assoc with arrows.

	* lib/properties.h: New flag for properties with multiple values
	in groups.

	* app/lineprops_area.c (dia_arrow_chooser_dialog_show): Correct
	arrow updating in dialog.  Was broken due to changes from destroy
	fix:(

	* app/commands.c (view_aa_callback): AA warning only for Windows
	-- I trust the Unix side well enough.

	* app/render_libart.c (get_text_width): 
	* lib/dialibartrenderer.h (struct _DiaLibartRenderer): Font and
	font height can be taken from parent instance.

	* lib/dialibartrenderer.c (dia_libart_renderer_class_init) 
	(get_text_width): Proper cursor positioning for libart renderer.
	Ought to have a DiaInteractiveRenderer that these two can inherit
	from, that knows about transform.

2003-01-25  Steffen Macke <sdteffen@web.de>

	* plug-ins/xslt/xslt.h: don't use dlfcn.h on win32. XSLT
	plug-in still not working on win32
	
2003-01-24  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/disp_callbacks.c (ddisplay_canvas_events): Moved
	gdk_window_get_pointer to avoid destroy crash.  Simpler than I
	thought.

2003-01-23  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/app_procs.c (app_init): Run gtk_init before popt so we don't
	bail out on gtk options.

	* lib/message.c (gtk_message_internal): Better handling of destroy
	event.

2003-01-22  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/color_area.c (color_area_edit): 
	* lib/widgets.c (dia_file_selector_browse_pressed) 
	(dia_color_selector_pressed): 
	* app/plugin-manager.c (get_plugin_manager): 
	* app/filedlg.c (file_open_callback, file_save_as_callback) 
	(file_export_callback):
	* app/diagram_tree_window.c (diagram_tree_window_new): Correct
	handling of destroy event.

2003-01-22  Alan Horkan <horkana@tcd.ie>

	* app/commands.c (file_new_callback): Changed Untitled to Diagram
	for default name.

2003-01-21  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/preferences.c (prefs_create_dialog): 
	* app/linewidth_area.c (linewidth_create_dialog): 
	* app/lineprops_area.c (dia_arrow_chooser_dialog_show): 
	* app/layer_dialog.c (create_layer_dialog)
	(layer_dialog_edit_layer): Correct handling of destroy signal. 

	* app/diapsft2renderer.c (set_font): Adjust silly random factor
	for change in font.c

	* lib/widgets.c: Avoid warning when font menu file doesn't exist.

	* lib/font.c (dia_font_build_layout): Let's all use the same weird
	factor here.

	* app/lineprops_area.c (dia_arrow_chooser_dialog_show): 
	* app/layer_dialog.c (create_layer_dialog) 
	(layer_dialog_edit_layer): 
	* app/filedlg.c (file_open_callback, file_save_as_callback) 
	(file_export_callback): 
	* app/dia-props.c (create_diagram_properties_dialog): 
	* app/defaults.c (defaults_dialog_destroyed): 
	* app/color_area.c (color_area_edit): Dialog destroy event handling.

2003-01-19  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/defaults.c (defaults_dialog_destroyed): Reset cache when
	defaults dialog destroyed.

2003-01-19  Steffen Macke <sdteffen@web.de>

	* objects/makefile.msc: added bondgraph
	* plug-ins/makefile.msc: added GDK_PIXBUF_LIBS in order
	to compile pixbuf.dll
	* makefile.msc: copying all objects and dlls now
	
2003-01-19  Hans Breuer  <hans@breuer.org>

	* app/diagram.[hc] : provide dia_open_diagrams(), make
	open_diagrams variable static
	* app/dia.def : export it (to be used by PyDia)
	* app/app_procs.c app/autosave.c app/diagram_tree_window.c
	  app/display.c app/dynamic_refresh.c app/layer_dialog.c
	  app/load_save.c : make use of dia_open_diagrams()

	* app/interface.c : don't set GDK_WINDOW_TYPE_HINT_TOOLBAR
	on win32. It removes the diagram window from the taskbar and
	shrinks it's window title to toolbar style (newest gtk2.2 cvs)

	* app/menus.c : add '...' to menu entries where a dialog 
	gets invoked
	* app/recent_files.c app/dia_embedd.c : reflect the above in 
	menus_get_item_from_path() calls

	* lib/libdia.def : add dia_image_rgba_data

	* lib/properties.h lib/prop_text.[hc] : add new property
	type StringList
	* objects/UML/class.[hc] object/UML/class_dialog.c : use
	StringList for attributes_strings and operations_strings to
	make this calculated data accessible via the Property API

	* plug-ins/python/diamodule.c : use dia_open_diagrams() and
	provide dia.new() to create a new diagram, dia.registered_types()
	to get on Dia's type registry, dia.message() for simple dialogs

	* plug-ins/python/pydia-diagram.c : implement DiaDiagram.display()
	to create a new display from a diagram. Let diagram.extents and
	diagram.bg_color return the same types as in diagramdata.*

	* plug-ins/python/pydia-geometry.c : add a read-only 
	'sequence interface' to DiaPoint and DiaRectangle

	* plug-ins/python/pydia-property.c : allow to get on StringList
	from Python

	* plug-ins/python/pydia-render.c : fix typo to make it compile

	* plug-ins/python/python-startup.py : removed 'import pygtk'
	again. This file does not need any gtk UI, and some python
	plug-ins don't do either

	* plug-ins/python/gtkcons.py : ported to GTK2 interface, now
	it should actually work as intended again

	* plug-ins/python/group_props.py : (new file) a prototype for
	one the most requested features: Change properties of selected
	objects in one step. Requires pygtk.

	* plug-ins/python/select_by.py : (new file) select objects by 
	common properties. Requires pygtk.

	[Start of 'PyDia Self Documentation Series']

	* plug-ins/python/pydiadoc.py : (new file) generates a new 
	diagram which contains all objects of dir(dia)
	
	* plug-ins/python/otypes.py : (new file) generates a new diagram 
	which contains all the currently registered object types sorted 
	by their containing package

2003-01-18  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in: Added check for Pango >= 1.1.5, which appears to
	be enough to have text work.
	(INTLOBJS): Added dummy subst cause gettext doesn't always seem to
	do it.  AC_SUBST should be idempotent, though.

2003-01-17  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in (HAVE_FREETYPE): Better test for freetype version
	using neat macro.
	Now actually sets HAVE_IEEEFP_H, needed for Solaris.

	* lib/font.c: Renamed global_size_one to global_zoom_factor to
	avoid confusion, and added comment.  Set scale factor in
	dia_font_build_layout to 1.0 for Unix side.  This fixes at least
	my weird scaling problems.  Fonts are now of the expectable size,
	i.e. the space between lines at size 1.0 is 1.0.  If we want a
	compatibility fix, we should scale fonts by about 1/0.75 from 0.90
	diagrams, though there will always be differences.

2003-01-15  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/python/python-startup.py: 
	* plug-ins/python/gtkcons.py: Require gtk 2.0 for pygtk

	* plug-ins/python/python.c (dia_plugin_init): Added warning
	message for missing startup file.

	* lib/dialibartrenderer.c (draw_image): Alpha rendering!  Yay!
	
	* lib/dia_image.c (dia_image_rgb_data): 
	* app/diapsrenderer.c (draw_image): Fixed rowstride problems
	involving EPS.  Can't do transparency in EPS yet.

	* lib/dia_image.h: 
	* lib/dia_image.c (dia_image_rgba_data): New function to get RGBA
	data as one chunk.  Documentation for the RGB data getting funcs.
	(dia_image_rgb_data): Added comment.

	* lib/dialibartrenderer.c (draw_image): Correct rowstride handling
	(bug #103565)

2003-01-13  Steffen Macke <sdteffen@web.de>

	* lib/dia_image.c: dia_image_rgb_data() is working for
	non-alpha images now. Fixes #93762
	* Makefile.am: added makefile.msc to EXTRA_DIST
	
2003-01-10  Steffen Macke <sdteffen@web.de>

	* app/paginate_psprint.c: Closing print dialog when file
	could not be written. Fixes #84746
	
2003-01-04  Steffen Macke <sdteffen@web.de>

	* doc/custom-shapes: incomplete description of <svg:text>

2003-01-03  Steffen Macke <sdteffen@web.de>

	* makefile.msc(new): new makefile to create file
	structure suitable for running dia win32 under
	$(TOP)/dia/build/win32
	
2003-01-02  Steffen Macke <sdteffen@web.de>
	
	* lib/dia_svg.c: including stdlib.h
	* lib/makefile.msc: added gdk_pixbuf libs to linker
	* app/makefile.msc: added gdk_pixbuf libs, made libart
	libs compatible with gnuwin32 package
	
2003-01-01  Hans Breuer  <hans@breuer.org>

	* lib/font.c : more comment about global_size_one

	* app/menus.c : <control>[<shift>]A for plain gtk build too.

	* plug-ins/wmf/wmf.cpp : some type juggling to make 
	msvc7 happy

2002-12-31  Steffen Macke <sdteffen@web.de>

	* app/makefile.msc: added hint on how to enable console output
	
2002-12-17  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/textobj.c (textobj_load): Get the handle type
	right, at least to be the same as when created.

2002-12-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/dialibartrenderer.c (draw_string): Removed extra 'is'.

2002-12-08  Hans Breuer  <hans@breuer.org>

	* app/commands.c : fixed bug #85315 'give diagram properties, 
	instead of no object selected error' almost a one-liner

	* app/splash.c : don't make having the logo pixmap
	mandatory. Fixes bug #96068. 

	* app/defaults.c : avoid crashing from open-dialog,esc,open-dialog
	sequence by connecting to the "delete_event"
	* app/objects/uml/class_dialog.c : handle "destroy" for 
	the same reason.

	* lib/libdia.def : remove diaXmlNewChild again

	* app/paginate_gdiprint.cpp : reflect Dia's page setting
	portrait/landscape in the windoze print dialog

	* objects/makefile.msc : only UML needs to link against
	$(GTK2_LIBS) and only custom against $(LIBXML2_LIBS)

2002-12-08  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/ellipse.c (ellipse_distance_from): 
	* lib/geometry.c (distance_ellipse_point): Ellipse now uses the
	correct distance function.  Could be faster, but it's not really
	essential. 

2002-12-07  Lars Clausen <lrclause@cs.uiuc.edu>

	* lib/font.c: Changed global_size_one to more correct 28.35.
	Looks better, too.

	* app/load_save.c:
	* lib/dia_xml.h: 
	* lib/dia_xml.c: Removed pretty print hack, the libxml thing works
	after all.

2002-12-07  Hans Breuer  <hans@breuer.org>

	* lib/widgets.c : g_file_get_contents() silently assumes
	a binary file. Reflect when creating the font_menu file
	to get rid of junk in font menus

2002-12-06  Hans Breuer  <hans@breuer.org>

	* app/diapsrenderer.[hc] app/diapsft2renderer.[hc] :
	removed 0xD 0xD 0xA line ends which get created by
	cvs if windoze line ends 0xD 0xA are checked in from
	*nix and checked out on win32.

	* app/preferences.c : changed toolbox_on_top default to
	false. It is currently not possible to change the behaviour
	at runtime, at least not on win32.

	* lib/dialibartrenderer.c : bug #94791 'rendering to 
	bitmap without PangoFt2' got delayed to milestone future 
	so wrap libart text rendering into PANGO_WIN32_FUTURE. 
	It is not available without my Pango patch in bugzilla.

	* lib/font.c : added comment to global_size_one and adapt
	the arbitrary size scaling in dia_font_build_layout() for
	win32, too. This is needed to get an acceptable font size 
	approximation for Dia 0.90 and earlier files.
	Also #include "message.h".

	* app/makfile.msc app/dia.def lib/makefile.msc lib/libdia.def :
	reflect movement of group.[hc]
	* lib/group.h : export group_type which gets used by app/*

	* lib/diagtkfontsel.c : added #undef GTK_DISABLE_DEPRECATED
	to get the GtkTypeInfo definition

	* plug-ins/makefile.msc : dxf and xfig don't need to link
	against app/ anymore now that group is moved to lib/

	* plug-ins/python/pydia-render.c : remove massive leaking
	of self, i.e. PyDiaRenderer

	*  plug-ins/python/makefile.msc : remove linking against
	GTK libs

2002-12-06  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/line.c: Removed properties options for gaps,
	until release is done.

	* configure.in: Check for freetype version.

	* lib/text.c (text_insert_char): Fixed small buffer overflow for
	length = 0.

	* lib/dialibartrenderer.c (draw_string): Removed debugging printf.

	* app/diapsft2renderer.h: 
	* app/diapsft2renderer.c: 
	* app/diapsrenderer.h: 
	* app/diapsrenderer.c: Split ps rendering into standard and freetype.

	* app/render_eps.c (export_eps, new_psprint_renderer): Using
	PS_FT2 renderer when available.  Old render stuff killed.  Yay!

	* lib/properties.h: Fixed bad frame end def.

	* app/Makefile.am (dia_core_files): Added diapsft2renderer.[ch].

	* lib/dia_xml.c (data_add_string): Avoid #-less strings.
	
	* objects/bondgraph/Makefile.am: Removed unneeded EXTRA_DIST.

2002-12-05  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/font.c: Now checking for the proper dia-style standard fonts.

	* lib/Makefile.am: 
	* app/Makefile.am: Moving group.[ch]

	* plug-ins/dxf/dxf-import.c: 
	* plug-ins/xfig/xfig-import.c: 
	* plug-ins/xfig/xfig-export.c: Now can refer directly to group.h.

	* app/object_ops.c: 
	* app/object_ops.h: 
	* lib/object.c (object_list_move_delta, object_copy_list): 
	* lib/object.h: Moved some object-related functions from
	object_ops to object to	assist moving group.c.

	* lib/diatypes.h: Added Group typedef.

	* lib/group.h: 
	* lib/group.c: Moved from app to lib to a) resolve plug-ins
	references, and b) make groups more "real" objects.

	* lib/Makefile.am (libdia_la_SOURCES): Added diatyps.h

2002-12-03  Lars Clausen <lrclause@cs.uiuc.edu>

	* lib/font.c (dia_font_init): Added check that the three standard
	fonts exist.

2002-12-02  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/dia_xml.[ch]:
	* app/load_save.c: Linebreaks in dia files, no indentation.
	Should help text tools.  xmlNewChild wrapped in diaXmlNewChild for
	this. 
	
	* objects/standard/line.c: Small but important fixes to the line
	gap code.

	* lib/dia_xml.h: 
	* lib/dia_xml.c (diaXmlNewChild): 
	* app/load_save.c (diagram_data_write_doc, write_objects): Simple
	XML prettyprinting wrapper.

2002-12-03  Steffen Macke <sdteffen@web.de>

	* shapes/Cisco/Makefile.am:
	* shapes/Cisco/*.shape: finished conversion of Cisco icons
	to *.png
	
2002-12-02  Steffen Macke <sdteffen@web.de>

	* doc/en/Makefile.am:
	* doc/en/usage-objects.sgml:
	* doc/en/graphics/line_icon.png: (new) added line icon
	
2002-12-02  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/line.c: Binary search object edge line gap.

2002-12-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in: Added Cisco makefile, sorted Makefiles list.

	* shapes/Makefile.am (SUBDIRS): Added Cisco dir

	* configure.in: Now checks for availability of PangoFT2 and
	FreeType, raising an error if not found.

	* app/Makefile.am (dia_core_files): Adding diapsft2renderer from
	Hans.

2002-12-01  Steffen Macke <sdteffen@web.de>
	
	* doc/en/usage-loadsave.sgml: updated information on import
	and export formats
	
2002-11-28  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/commands.c (edit_copy_callback): Freeing copy_list.

2002-11-28  Steffen Macke <sdteffen@web.de>
	
	* app/render_libart.c: art_config.h was included twice

2002-11-27  Lars Clausen  <lrclause@cs.uiuc.edu>

	* sheets/.cvsignore: More ignorance.

	* lib/diagdkrenderer.c (draw_string): Removed silly #ifdef 1.

	* lib/prop_widgets.h: Two (currently unused) settings for frame
	foldability.

	* lib/prop_widgets.c (frame_beginprop_get_widget): Frames are now
	(by default) foldable. 

	* lib/propinternals.h: 
	* lib/propdialogs.c (prop_dialog_add_raw_with_flags): Way to add
	widgets in a more controlled manner.

	* objects/standard/line.c (line_update_data): Line gap things
	inserted.  Can do xeyes now:)

2002-11-26  Christian Neumair  <chris@gnome-de.org>

	* .cvsignore: Changed.
	* objects/bondgraph/.cvsignore, plug-ins/metapost/.cvsignore,
	plug-ins/xslt/.cvsignore, shapes/Assorted/.cvsignore, shapes/Misc/.cvsignore:
	Added.

2002-11-26  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/pixmaps/delete.xpm: Trashcan stolen from Gimp.

	* lib/widgets.c (dia_font_selector_get_font): Fixed wrong name
	passing to font hash.

	* app/filedlg.c (file_save_as_ok_callback): Check that filename is
	utf-8 or locale-convertible before adding to dialog text.  This
	probably needs done in a number of places where we get text from
	the environment and send it to GTK to display.

	* lib/widgets.c: Fixed case problems for font menu entries.

	* objects/SADT/annotation.c: Don't run the event test (but leave
	it here for inspiration).

	* lib/widgets.c: 
	* lib/widgets.h: Allowing setting preview text for fonts.

2002-11-26  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/bondgraph/Makefile.am: 
	* objects/bondgraph/bondgraph.c: 
	* configure.in: 
	* objects/Makefile.am: Added bond graph dir.

2002-11-26  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/text.c (text_calc_boundingbox, text_draw): Better cursor size.

2002-11-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/text.c (text_calc_boundingbox, text_draw): Better cursor
	positioning. 

	* app/diapsrenderer.c: Freetype rendering is back in force.

	* app/disp_callbacks.c: Added missing updates for pre-text-change.

2002-11-25  David Hoover <jazzdaq@yahoo.com>

	* app/render_libart.c: Added missing #include line for libart.

	* lib/geometry.h:
	* lib/geometry.c: Added point_convex function.  This computes
	points inside a line segment (0 <= alpha <= 1) or outside the
	line segment (alpha < 0 | alpha > 1).

	* objects/standard/line.c: Line now has additional code/attributes
	which permit the line to extend past the line anchors (gap < 0) or
	leave a gap without reaching the anchor (gap > 0).  If no gap is
	specified, the default gap of 0 will result in identical line
	behavior as before.  If the 'fractional' attributes are TRUE, the
	gap length is not fixed, but a percentage of the line length.  I
	did not know how create the GTK widgets so the gap code currently
	cannot be used without adding XML attributes by hand.

2002-11-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/diagdkrenderer.c (draw_string): Removed timing bits.

	* lib/Makefile.am (libdia_la_SOURCES): Added fontsel files to SOURCES.

2002-11-24  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/font.c: Debugging functionality in separate functions.

	* lib/widgets.c: Using fontsel with context.

	* lib/diagtkfontsel.[ch]: Context-aware copy of the GTK fontsel.

	* objects/custom/custom_object.c: Orientation handling for shapes,
	patch thanks to Martin Hans <opfinder@gmx.net>.

	* objects/standard/zigzagline.c (zigzagline_move_handle): Starting
	work on even better orientation handling.

	* app/menus.c (menus_get_item_from_path): Fixed sily warnings from
	casting NULL pointers.  Should be unnecessary in an upcoming GTK
	release. 

2002-11-18  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/font.h:
	* lib/font.c:
	* lib/widgets.c: Now uses correct context to get font families.

	* lib/diagdkrenderer.c (get_text_width, draw_string): 
	* lib/dialibartrenderer.c (draw_string): 
	* lib/font.h: 
	* lib/font.c (dia_font_init): Removed old kludgy font name compare.
	(dia_font_build_layout): Unified the twiddle factors into a use of
	global_size_one.  But I deeply distrust Pango for seeming to
	change size of fonts every time I turn my back.

	* app/display.c: 
	* app/diagram.c: 
	* app/menus.c:
	* app/menus.h: Updated some more methods to also be more specific
	on the types.

	* app/menus.h:
	* app/recent_files.c: 
	Changed to return most specific type, to avoid run-time type errors.

	* app/menus.c (menus_get_item_from_path): Non-gnome version now
	gets menu_item rather than widget, which works better.

2002-11-17  Cyrille Chépélov  <cyrille@chepelov.org>

	* app/display.c: (new_display):
	* app/menus.c: (menus_get_item_from_path):
	Relying on the tearoff to locate the input methods menu wasn't a
	good idea: tearoffs seem to be an endangered species nowadays.
	Anyway, the IM menu seems to be working now.

	* app/interface.c: hinted the window manager that the toolbox window
	is a toolbox window. Not that my (fairly default configuration)
	sawfish cares, but other NETWM compliant WMs may.

	* app/commands.c: 
	* app/defaults.c: 
	* app/dia-props.c:
	* app/filedlg.c: 
	* app/interface.c: 
	* app/layer_dialog.c: 
	* app/linewidth_area.c: 
	* app/properties.c: 
	* app/sheets_dialog.c: 
	* app/splash.c: 

	The GTK doc says to avoir gtk_window_set_wmclass() and 
	gtk_window_set_policy(), and use gtk_window_set_role() and
	gtk_window_set_resizable(), respectively.
	
	* app/preferences.c: (prefs_create_dialog):
	* app/preferences.h:
	* app/display.c: (display_set_active):
	Added a preference to have the toolbox hover over diagram windows.
		
2002-11-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/diagdkrenderer.c (get_text_width, draw_string):
	Freetype-based string drawing now works.  Not very fast, though.
	I wish I could use the graphics card for this:(  I'm doing three
	bitmap loops where I should be doing one.  The size is not correct
	either, despite having get_text_width give the right thing.

2002-10-21  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/connectionpoint_ops.c (diagram_update_connections_object):
	Allows more than one connectionpoint on an object to be moved at a
	time (bug #96306).

2002-10-18  Stanislav Brabec  <sbrabec@suse.cz>

	* configure.in: Added cs to ALL_LINGUAS.

2002-10-17  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/paginate_psprint.c: Removed unnecessary decl of autosave
	stuff.

	* app/display.c (ddisplay_set_renderer): Calls to begin/end render.

	* app/export_png.c (export_png_ok): Saving more variables from the
	evil setjmp.

2002-10-16  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/dialibartrenderer.c (begin_render):
	(end_render): Correct pushing and popping of font contexts.
	(draw_string): Double zooming eliminated, strange twiddle factor
	introduced (grumble).  Close to working now, but there are still
	strange differences from font to font.  In particular, some fonts
	really mess with the cursor and extents.

	* app/render_eps.c (export_eps): 
	* app/diapsrenderer.c (dia_ps_renderer_finalize): 
	Fixed file closing confusion, no longer dependent on PS/EPS.

	* app/diagram.c (diagram_place_down_selected) 
	(diagram_place_up_selected): Now implemented.

	* lib/font.c (dia_font_init): 
	* lib/font.h: 
	Redesigned the font init/context pushing code.  Start of fix for
	font name differences.
	
2002-10-15  Kjartan Maraas  <kmaraas@gnome.org>

	* app/sheets_dialog_callbacks.c: Fix a typo.
	
2002-10-15  Hans Breuer  <hans@breuer.org>

	* app/diapsrenderer.[hc] : (new files, old content :-)
	simple base class for post script rendering. Does neither 
	use Pango/FT2 nor does it handle non latin1 characters. 
	The fancy stuff which nowadays appears to be needed should 
	probably be done in derived class(es)

	* app/makefile.msc app/Makefile.am : added new files

	* app/paginate_psrint.c : re-enabled and used as test
	for the simple ps renderer above.

	* app/render_eps.[hc] : ripped out common ps code and
	moved to DiaPsRenderer. The rest of the file is mostly
	disabled. And I don't understand enough of it to 
	change port it.

	* app/diaepsrenderer.h : short lived, removed.

2002-10-15  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/plug-ins.c (dia_register_plugin): Don't try to load libdia
	as a plugin (thanks to Torben Nielsen).

2002-10-14  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/diaepsrenderer.h: 
	* app/render_eps.h: 
	* app/paginate_psprint.c: 
	#ifdef'd out enough ps stuff to allow compile.  Now we just need
	to convert it.
	
2002-10-12  Hans Breuer  <hans@breuer.org>

	[last plug-in ported]

	* plug-ins/xfig/xfig-export.c : ported to new renderer api

	* plug-ins/xfig/xfig-import.c(fig_create_object) : need to
	scale color values to [0..1.0] to properly reconstruct
	user colors

	* plug-ins/xfig/xfig-common.c : some cleaning

2002-10-12  Hans Breuer  <hans@breuer.org>

	[decrease inter-plug-in-dependencies]

	* objects/custom/shape_info.[hc] : move parse_style()
	to lib/dia_svg.[hc] as dia_svg_parse_style(); Namespace
	the related structs and constants.
	* objects/custom/custom_object.c : reflect namespace
	changes

	* lib/dia_svg.[hc] : new files
	* lib/makefile.msc lib/Makefile.am : add new files
	* lib/libdia.def : updated externals

	* plug-ins/svg/svg-import.c : use dia_svg_parse_style()

	* plug-ins/svg/svg.c : enable svg import for win32 (and
	probably for other non ELF builds)

	* plug-ins/makefile.msc : enable svg import

2002-10-11  Hans Breuer  <hans@breuer.org>

	* plug-ins/metapost/render_metapost.[hc] : ported

	* plug-ins/pstricks/render_pstricks.[hc] : dito

2002-10-11  Hans Breuer  <hans@breuer.org>

	* plug-ins/cgm/cgm.c : ported, appears to work as before,
	but graphic apps available to me can't import the generated 
	files (the could not with Dia-0.90 cgm as well) ...

	* plug-ins/dxf/dxf-export.c : Ported to new renderer api.
	Removed all those function which did emulate 'complex' 
	drawing ops with basic ones (e.g. rect by line) cause this
	stuff is already provided by the base class
	* plug-ins/dxf/dxf-import.c : removed render.h include

	* plug-ins/python/pydia-font.[hc]
	  plug-ins/python/pydia-text.c : finally ported to new font api

	* plug-ins/python/pydia-layer.c : add extra parameter
	to layer_find_closest_connectionpoint()

	* plug-ins/python/pydia-render.c : ported to DiaRenderer api

	* plug-ins/python/python.c : added missing copyright notice

	* plug-ins/hpg/hpgl.c plug-ins/wpg/wpg.c plug-ins/wmf/wmf.cpp : 
	actually use the renderers set_font implementation

	* plug-ins/renderer.inc : unused now, removed
	* plug-ins/Makefile.am : reflect it

2002-10-08  Hans Breuer  <hans@breuer.org>

	* app/render_gdk.c : don't add the InteractiveRenderer
	interface multiple times (it's added to the type, not
	the object)
	* app/render_libart.c : dito. It's currently added
	unconditional cause eport_png uses it, but claims
	to be non-interactive. Probably set_size should be moved
	to the DiaRenderer interface.

	* lib/dialibartrenderer.c : add implementations for
	get_<width|height>_pixels. Libart rendering works again.
	DiaLibartRenderer::draw_image : use dia_image_rowstride()
	instead of width*3

	* lib/diatransform.c(dia_transform_coords_double) :
	don't ROUND() the returned values

	* plug-ins/pixbuf/pixbuf.c : added import function. It
	simply creates a wrapping "Standard - Image" object.

	* plug-ins/shape/shape-export.c : use the more direct
	method to call base class methods

2002-10-07  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/font.c (dia_font_init): Changed dia_font_init to return old
	pango context, to allow stacked contexts (for printing while
	antialiased).
	
	* lib/arrows.h
	* lib/bezier_conn.h
	* lib/beziershape.h
	* lib/boundingbox.h
	* lib/color.h
	* lib/connection.h
	* lib/connectionpoint.h
	* lib/create.h
	* lib/dia_image.h
	* lib/diagdkrenderer.h
	* lib/diagramdata.h
	* lib/dialibartrenderer.h
	* lib/diamenu.h
	* lib/diarenderer.h
	* lib/diasvgrenderer.h
	* lib/diatransform.h
	* lib/element.h
	* lib/filter.h
	* lib/focus.h
	* lib/font.h
	* lib/geometry.h
	* lib/handle.h
	* lib/neworth_conn.h
	* lib/objchange.h
	* lib/object.h
	* lib/orth_conn.h
	* lib/paper.h
	* lib/plug-ins.h
	* lib/poly_conn.h
	* lib/polyshape.h
	* lib/properties.h
	* lib/ps-utf8.h
	* lib/sheet.h
	* lib/text.h
	* lib/textattr.h
	* lib/widgets.h
	* lib/diatypes.h
	Moved all externally visible struct typedefs into diatypes.h, as
	per Hans' suggestions.

2002-10-07  Steffen Macke <sdteffen@web.de>

	* lib/Makefile.am: removed a '\' causing problems

2002-10-07  Hans Breuer  <hans@breuer.org>

	[Libart Renderer resurrected; almost it's compiling but
	 almost instantly crashing :-]

	* lib/dialibartrenderer.[hc] : new files, ported to DiaRenderer
	* app/render_libart.[hc] : ported to DiaInteractiveRenderer
	* lib/diatransform.[hc] : added dia_transform_coords_double()

	* app/display.c : the right parameters for new_renderer_libart()
	* app/export_png.c : ported, removed the blind Display hack

	* app/makefile.msc lib/makefile.msc 
	  lib/Makefile.am : updated

	* lib/dia<|gdk|interactive>renderer.c : properly copyrighted

2002-10-06  Hans Breuer  <hans@breuer.org>

	* plug-ins/pixbuf/pixbuf.c : (new file)
	there is a new export plug-in called 'Pixbuf' which uses 
	DiaGdkRenderer to export to gdk-pixbuf supported bitmap
	formats (currently only PNG and JPEG).

2002-10-06  Hans Breuer  <hans@breuer.org>

	See also: 
	http://mail.gnome.org/archives/dia-list/2002-October/msg00027.html

	* lib/dia-enums.h lib/diatransform.[hc]
	  lib/diarenderer.[hc] lib/diainteractiverenderer.c
	  lib/diagdkrenderer.[hc] lib/diasvgrenderer.[hc]
	: new files 

	* lib/makefile.msc lib/makefile.am : added new files

	* lib/plug-ins.c : g_module_error() returns a locale
	string, convert to utf8 before further usage 

	* lib/render.h : #error out. Everything including this
	needs porting
	* lib/*.[hc] : ported to new renderer api

	* app/diaepsrenderer.h : unfinished DiaEpsRenderer interface
	just to make the rest compile
	* app/render_eps.c : temporary disabled all of this
	* app/render_eps.h : removed RendererEPS

	* app/render_gdk.[hc] : a small wrapper around the new
	DiaGdkRenderer form lib/*

	* app/render_libart.h : removed RenderLibart definition
	* app/render_libart.c : not yet ported to new DiaRenderer
	but having an implementation to untie form FT2 dependency
	at least on win32. It is using new Pango api form bug #94791

	* app/render_pixmap.[hc] : a small wrapper around the new
	DiaGdkRenderer form lib/*

	* app/display.h : removed render_*.h includes
	* app/display.c : the only place where specific 
	renderers need to be known

	* app/connectionpoint_ops.c app/grid.c app/handle_ops.c
	use new DiaInteractiveRenderer interface

	* app/*.c : ported to new renderer api
	* object/*/*.c : ported to new renderer api
	s/render.h/diarenderer.h/
	s/Renderer/DiaRenderer/
	s/renderer->ops/renderer_ops/
	add in every draw method:
  	DiaRendererClass *renderer_ops = DIA_RENDERER_GET_CLASS (renderer);

	* plug-ins/hpgl/hpgl.c : 
	  plug-ins/wmf/wmf.cpp 
	  plug-ins/wpg/wpg.c : ported to be DiaRenderer based
	* plug-ins/shape/shape-export.c
	  plug-ins/svg/render_svg.c : ported to be DiaSvgRenderer based
	  (nice how small these files became :-)

2002-09-28  Hans Breuer  <hans@breuer.org>

	* */makefile.msc : updated

	* app/defaults.c : don't gdk_invalidate_rect(NULL)
	* app/disp_callbacks.c : 
	can't cast GtkWindow to GdkWindow, use shell->window
	(ddisplay_unrealize) don't use already unrefed im_context
	* app/display.c :
	can't cast from GtkMenu to GtkMenuItem
	(ddisp_destroy) : mark im_context as unrefed

	* lib/dia_xml (data_font) : prefer new font format over old one
	(data_add_font) : write the legacy name to allow file exchange
	with pre Pango versions of Dia, which would otherwise crash 
	on missing font 'name' attribute.
	* lib/font.c (dia_font_get_legacy_name) : improved implementation
	to get a better match.

	* lib/libdia.def : updated

	* lib/messages.c : don't gdk_widget_show(NULL)

	* lib/prop_text.c : don't gtk_entry_set_text() with NULL string 

	[make Dia compile, link _and_ work with mingw/gcc3.2]

	* config.h.win32 : #define LIBXML, this gets defined from libxml
	header but only for _MSC_VER. The mingw build did access an 
	unitialized function pointer for xmlFree.

	* */makefile.mingw : updated (some plug-ins have build issues)
	
	* lib/handle.h lib/object.h :	there appears to be no 
	forward declaration of the form 
		typedef enum _HandleId HandleId 
	(at least not with GCC 3.2 for C++) ../lib/handle.h:22: 
	use of enum `_HandleId' without previous declaration

	* app/paginate_gdiprint.cpp : added a hack to avoid g++
	naming conflict on 'export'

	* app/paginate_gdiprint.h : forward declare Diagram

	* objects/SADT/annotaion.c : use g_random_double()

2002-09-26  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/modify_tool.c: Made motion not happen until sufficiently
	large or past double-click interval, to avoid accidental moving
	when doubleclicking.  Got the double-click time right, and fixed
	some issues with release.  There are some corner cases that may
	exhibit strange behaviour, will look at those later.  Nah, let's
	not care about those, they are rare and not dangerous.

2002-09-26  Cyrille Chépélov  <cyrille@chepelov.org>

	* app/layer_dialog.c: 
	* app/load_save.c: 
	* plug-ins/dxf/dxf-import.c: 
	* plug-ins/python/pydia-diagram.c: 
	* lib/diagramdata.c:
	* lib/diagramdata.h:
	Improved the consistency of the obj->parent_layer backlinks (esp.
	during reloads)

	* lib/Makefile.am:
	* lib/dummy_dep.h:
	* lib/dynamic_obj.[ch] (NEW):
	* app/Makefile.am:
	* app/app_procs.c: 
	* app/dynamic_refresh.[ch] (NEW):
	* objects/Misc/analog_clock.c: 
	Added support for dynamic refresh (animated objects).
		
2002-09-25  Cyrille Chépélov  <cyrille@chepelov.org>

	Patch from Owen Taylor <otaylor@redhat.com>:	
	* doc/en/Makefile.am:
	* doc/en/dia-manual.sgml:
	* doc/en/usage-objects.sgml:
	* doc/en/usage-quickstart.sgml:
	* doc/pl/Makefile.am:
	* doc/pl/dia-manual.sgml:
	* doc/pl/usage-objects.sgml:
	* doc/pl/usage-quickstart.sgml:

	- Change the DTD declration from an outdated GNOME one to a
	standard DTD.
	
	- Remove close tags for <graphics> which aren't allowed for
	docbook SGML
	
	- A hacky fix for a problem where some versions of db2html don't
	create *.css files. (If *.css doesn't match anything, then you get
	the global explicitely.)

	(Closes: #92061)
	
2002-09-24  Cyrille Chépélov  <cyrille@chepelov.org>

	* objects/custom/custom_object.c: 
	* objects/custom/shape_info.[ch]: GE_TEXT display lists elements 
	were never properly prepared for use when reloading a shape with
	<svg:text> elements. Thanks to Scott Frazer <frazer@nc.rr.com> for
	reporting the problem and coming up with a fix! (Closes: #93974)

	* app/menus.c: patch from Alan Horkan <horkana@tcd.ie>: review
	the menu shortcuts towards better GNOME HIG compliance (Closes: #87157)

	* app/menus.c:
	* app/display.c: updated menu item paths Alan's patch had moved.
	
	* app/interface.c: Fixed a crash when gdk-pixbuf doesn't want to
	load the sheet-provided icon (libpng versions mismatch, grrr.).
	
	* configure.in:
	* objects/Makefile.am:
	* objects/Misc/Makefile.am (NEW):
	* objects/Misc/libmisc.c (NEW):
	* objects/Misc/analog_clock.c (NEW):
	* objects/Misc/pixmaps/analog_clock.xpm (NEW):
	* sheets/Misc.sheet.in: just a little experiment...

2002-09-23  Cyrille Chepelov  <cyrille@chepelov.org>

	* plug-ins/xlst/Makefile.am: found a way to silence automake while
	not forcing everyone to build using libxslt.

	* lib/font.c: 
	* lib/message.c:
	* lib/object_defaults.c:
	* lib/intl.[ch]:
	* lib/render.c:
	* lib/properties.[ch]:
	* lib/propobject.c:
	* objects/standard/box.c: 
	* objects/UML/state_term.c:
	* objects/FS/box.c:
	* objects/FS/flow-ortho.c:
	* app/app_procs.c:
	* app/autosave.c:	
	* app/commands.c:
	* app/diagram_tree.c:
	* app/display.c:
	* app/disp_callbacks.c:
	* app/export_png.c:
	* app/filedlg.c:
	* app/lineprops_area.c:
	* app/menus.c:	
	* app/preferences.c:
	* app/render_eps.c:	
	* app/sheets.c:
	* app/sheets_dialog_callbacks.c:
	* plug-ins/xslt/xslt.c:
	* plug-ins/metapost/render_metapost.c:
	* plug-ins/xfig/xfig-export.c:
	* plug-ins/shape/shape-export.c:
	
	Killed most gcc-3.2 warnings (const-correctness and derived warnings, 
	unused variables, mostly)

	* app/display.c:
	* app/menus.c: enabled GTK Input Methods (thanks Lars!)

	* app/Makefile.am: modified run_dia.sh so that we recover the
	ability to run a debugger despite libtool's hacks.

	* plug-ins/dxf/Makefile.am: 
	* app/Makefile.am
	"make distcheck" fixes.
	
2002-09-19  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/UML/uml.c (uml_get_operation_string): Patch from Mauf
	<mfranzoni@madd.it>:  Check for the type being NULL.

2002-09-16  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c (set_font): Re-tweaked font size for printing.

2002-09-12  Cyrille Chepelov  <cyrille@chepelov.org>

	Patch from Angus Ainslie <angusa@deltatee.com>:
	* plug-ins/dxf/dxf-import.c:
	* plug-ins/dxf/autocad_pal.h: Import from visio 2002 improvements.

	(plus a couple extra fixes by me, such as the removal of printf's,
	adapting for recent changes, and killed a couple warnings) 

	* app/authors.h: a 60K patch isn't insignificant, is it?
	
2002-09-09  Tor Lillqvist  <tml@iki.fi>

	* configure.in: Check for both pangoft2 (using PKG_CHECK_MODULES,
	as before) and -lfreetype (using AC_CHECK_LIB). At least on
	Solaris with Sun's compiler (Forte C), you need to link also the
	dia application with -lfreetype, even if it is implicitly linked
	to by -lpangoft2. Rename FREETYPE_CFLAGS and _LIBS to PANGOFT2_*,
	which is what they actually mean. Use FREETYPE_LIBS for
	-lfreetype.

	Don't look for libsunmath if isinf() is not found in math.h (as on
	Solaris). The sunmath library is part of Forte C and not present
	on all machines. Besides, even if isinf was found in libsunmath,
	we didn't use it in the Makefile.am.
	
	Fix a couple of bashisms.

	AC_SUBST also Z_LIBS, need to link the dia application to -lz,
	too, on Solaris with Forte C.

	Don't try to use the gcc flags with other compilers.
	DIA_CHECK_CFLAG gives a false indication that Forte C understands
	the gcc -f switches, but in fact they get interpreted meaning
	something completely different.

	Define the automake conditional HAVE_CGC.
	
	* app/Makefile.am (dia_LDADD): Add Z_LIBS and FREETYPE_LIBS.

	Use -export-dynamic only with gcc.

	* */Makefile.am
	* */*/Makefile.am: Modify according to the FREETYPE_CFLAGS -> 
	PANGOFT2_CFLAGS rename.

	* lib/geometry.h: Drop HAVE_SUNMATH_H and <sunmath.h> per above.
	
	* lib/dia_xml.c: Include geometry.h for the isinf() stuff on
	Solaris.

	* lib/paper.c: Workaround for gccism: Can't use inline this way with
	Forte C, either.

2002-09-08  Cyrille Chepelov  <cyrille@chepelov.org>

	* lib/text.c(set_string): fixed a memory leak (char* ain't no
	std::auto_ptr<char> !).

	* app/display.[ch]:
	* app/interface.[ch]:
	* app/ddisp_callbacks.[ch]: Added some basic support for input 
	methods (GtkIMContext-based)

	* lib/Makefile.am:
	* app/Makefile.am: made libdia a shared object (per Tor
	Lillqvist's suggestion/request), to cope for platforms with a less
	than par dynamic library loader.

	* app/display.c: disabled the input method menu (I really don't
	see where and how to put them. Blame Frozen Bubble )
	
2002-09-06  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/flowchart/box.c (box_update_data): Made resizing
	possible again (only set width & height when resized too small).

	Patch from Soeren Sandmann <sandmann@daimi.au.dk>:

 	* app/disp_callbacks.c (ddisplay_canvas_events): Handle
 	GdkScrollEvents.
	
2002-09-05  Cyrille Chepelov  <cyrille@chepelov.org>

	* app/authors.h: now showing Akira TAGOH's name in the native script.

2002-09-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xslt/xslt.c: Removed glib warning for unset
	DIA_PLUGIN_PATH.

2002-09-01  Cyrille Chepelov  <cyrille@chepelov.org>

	* plug-ins/svg/render_svg.c: Applied (reversed...) patch from
	Mike Sowka <msowka@rogers.com>. This fixes a problem with the
	sweep flag in arcs.

2002-08-31  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/UML/class.c: Fixed showing of empty stereotypes and got
	the string placed correctly.

2002-08-30  Hans Breuer  <hans@breuer.org>

	* lib/font.c (dia_font_get_style) : don't shift already
	shifted DIA_FONT values.

	* lib/libdia.def : updated externals

	* app/disp_callbacks.c : on win32 GdkEventKey::string already
	is in UTF-8. (Longterm this probably should be handled on the
	gtk api level)

	* app/command.[hc] app/display.[hc] app/menus.c : add code to 
	switch display renderers again. The libart renderer is very 
	useful for win9x with it's limited GDI.

	* app/render_gdk.c : use g_warning instead of printf which gets
	nowhere on win32 (non console apps)

	* app/render_libart.c : make it compile without FREETYPE

	* objects/makefile.msc plug-ins/makefile.msc : added clean target

2002-08-29  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c (postscript_draw_contour): Debugging statement
	that allowed me to figure out font problems.

	* lib/widgets.c (dia_font_selector_set_styles): Use radio menu
	items for font styles.

	* objects/FS/flow-poly.c: 
	* objects/FS/flow-ortho.c: 
	* objects/FS/flow.c: Further conversion away from GTK dialogs.
	Can't set a default label right now:(

	* app/interface.c (fill_sheet_wbox): Added initialization for mask.

2002-08-27  Cyrille Chepelov  <cyrille@chepelov.org>
	Patch from Andrew Ferrier  <andrew@new-destiny.co.uk>:
 
 	* Makefile.am: rules relating to AUTHORS and THANKS
 	altered.
 	* AUTHORS: file content changed to more accurately
 	reflect guideline requirements.
 	* TODO: warning added about Gnome BTS.
 	* KNOWN_BUGS: warning added about Gnome BTS.

	---

	* AUTHORS: added full copyright info.
	* mkauthors-placeholder: (removed) 
	
2002-08-27  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/paginate_psprint.c (print_page): Fixed text printing after
	tip from Dov Grobgeld.

2002-08-26  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/paginate_psprint.c (print_page): Fixed color of clip
	region.

2002-08-26  Cyrille Chepelov  <cyrille@chepelov.org>

	* sheets/Makefile.am: enabled intltool-merge translation cache for
	sheets.

	* Makefile.am:
	* mkauthors-placeholder:
	* AUTHORS: revived that file (in a placeholder form) so that
	automake stops yelling.
	(derived from a patch by Andrew Ferrier <andrew@new-destiny.co.uk>) 
	(Closes: #91144)

	Heh, by the way, thanks Christophe. I feel better now.
	
2002-08-25  Christophe Merlet  <christophe@merlet.net>

	* app/command.c: Removed invalid multibyte sequence in Chepelov.

2002-08-24  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/dia_image.c (dia_image_rgb_data): 
	Bugfixes in image data retrieval.
	
	* app/render_eps.c: Refactoring of new_*_renderer.

2002-08-23  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c: 
	* lib/dia_image.h: 
	* lib/dia_image.c: Support for rowstride != width (odd width images)

2002-08-20  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/paper.c (get_paper_info): Fixed NULL prefs problem.
	* plug-ins/xfig/xfig-import.c: Removed assertion.

2002-08-18  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/paper.c: Removed app/preferences.h reference.

2002-08-14  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/svg/svg-import.c: 
	* plug-ins/xfig/xfig-import.c: 
	* lib/Makefile.am (libdia_a_SOURCES): 
	* objects/standard/Makefile.am (libstandard_objects_la_SOURCES): 
	* lib/create.h:
	* objects/standard/create.h:
	* objects/standard/polygon.c (polygon_create): 
	* objects/standard/polyline.c (polyline_create): 
	* objects/standard/beziergon.c (beziergon_create): 
	* objects/standard/bezier.c (bezierline_create): 
	Moving create.h into lib.

2002-08-13  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_libart.[ch]: Work on PNG font export.  Something's
	still fishy with the scaling, I don't get it.

	* app/display.c: 
	* app/interface.c: Replaced broken zoom combo with entry+menu.
	Now works beautifully.  Removed WITHOUT_ZOOM_COMBO stuff.

	* app/render_gdk.c (get_text_width): Checks for validity of text.
	Temporary help while debugging input -- should only activate on
	invalid input.

	* objects/SADT/annotation.c: 
	* objects/GRAFCET/transition.c: 
	* objects/FS/function.c: Removal of gtk.h include.

	* objects/UML/state.c (state_load): Warnings about using State
	object for initial/final states.

	* plug-ins/cgm/cgm.c (init_fonts): Proper Pango interfacing.

2002-08-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c: Text rendering that scales correctly.  Too bad
	the standard fonts don't get selected right.

2002-08-09  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/diagramdata.h: 
	* lib/paper.c (get_paper_info): 
	* lib/paper.h: 
	* plug-ins/xfig/xfig-import.c: 
	Committed before testing.  I am so embarrased.  This compiles, now
	that the includes are in the right order.
	
	* app/diagram.c (diagram_init): 
	* app/app_procs.c (do_convert): 
	* app/preferences.h: 
	* lib/diagramdata.h: 
	* lib/diagramdata.c (new_diagram_data): 
	* lib/paper.h: 
	* lib/paper.c (get_paper_info): 
	Moved new_diagram part of prefs into lib/diagramdata.h.  More
	could be done in new_diagram_data() now.

2002-08-08  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c: Better scaling of fonts at non-normal zoom.

2002-08-07  Cyrille Chepelov <cyrille@chepelov.org>

	* configure.in: removed silly user-visible comment

	(actually, this is a dummy entry before I manually run nemo; for
	some dist-upgrade related reason, this morning's run aborted before
	the snapshots were created)
	
2002-08-06  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/network/wanlink.c: 
	* objects/network/bus.c: 
	stdprop compliance!

	* objects/custom/custom_object.c: 
	* objects/network/wanlink.c: 
	* objects/flowchart/parallelogram.c: 
	* objects/flowchart/ellipse.c: 
	* objects/flowchart/diamond.c: 
	* objects/flowchart/box.c: 
	Removed GTK defaults stuff.
	
	* objects/UML/fork.c: 
	* objects/UML/object.c: 
	* objects/UML/lifeline.c: 
	* objects/UML/branch.c: 
	* objects/GRAFCET/transition.c: 
	* objects/FS/function.c: Removed GTK include.

	* objects/FS/flow-ortho.c: 
	* objects/FS/flow.c: Made the label behave again.
	Also removed GTK defaults stuff.

2002-08-06  Hans Breuer  <hans@breuer.org>

	* app/autosave.c : ported to GDir which is the improved
	cross platform replacement for <dirent.h>

	* app/makefile.msc : build autosave.obj

	* app/font.c : some (bad?) code calls 
	dia_font_scaled_decent() not only with empty string but 
	with NULL. Handle it gracefully.

	* lib/paper.c : don't depend on ../app. Although IMO
	this shouldn't be allowed on any platform it is only
	disabled for win32, where it simply doesn't work
	this way

	* lib/widget.c (strcase_equal) : pass char* to g_strcasecmp()

	* objects/fs/flow.c : conditionalize debug spew, disabled
	and 'ported' to use g_print. Simple printf won't work with
	standard win32 gui apps, may even crash them.

	* plug-ins/makefile.msc : DISABLED svg-import cause it
	depends on ../objects/custom. This not only break the
	build for all non ELF systems but IMO also isn't acceptable
	from a design point of view. See dia-list mail on subject.

	* plug-ins/python/makefile.msc :
	  plug-ins/python/python.c : remove all references to dirent	

2002-08-05  Cyrille Chepelov  <cyrille@chepelov.org>

	* configure.in: added ro to ALL_LINGUAS

	* po-checktrans:
	* po-checktrans.py:
	* ../translation-graphs/transgraph.py: added support for fuzzy
	translations. Enlarged the graphs.

2002-08-05  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/disp_callbacks.c (ddisplay_canvas_events): Now translates
	key events according to locale.  No clue if this works for
	advanced stuff.

2002-08-04  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/text.c: Various UTF8 related fixes, in particular in
	deleting.  Text_insert_char is fine, far as I can tell.

	* app/interface.c (create_display_shell): 
	* app/commands.c: Now uses gtk_clipboard functions, for they are
	much simpler.  Also handles Win32 clipboard.  Non-ascii chars
	don't seem to get handled correctly by text_insert_char in
	lib/text.c.
	
	* app/commands.c (received_selection_handler): Got utf8 handling
	on paste, and individual char handling out of commands.c.  Pasting
	non-ASCII is still broken, somehow.  It's all lib/text.c's fault.

	* lib/message.c (gtk_message_internal): Message dialog re-shown
	when new message appears.  Maybe it should even move to top?

	* lib/font.c: 
	* lib/widgets.c: 
	* app/render_eps.c (create_eps_renderer): Fonts now lowercase
	(again) and case-insensitive.

	* objects/GRAFCET/condition.c (CONDITION_FONT): Changed to
	BASIC_SANS_FONT. 

2002-08-02  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/commands.c (edit_cut_text_callback): 
	* lib/text.c (text_delete_all): Now functioning undo for text cut.
	
	* app/commands.c (edit_cut_text_callback): Now removes text.
	Undo is broken, though.

2002-08-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/diagram.c (diagram_update_menu_sensitivity): 
	Making cut_text active.
	
	* app/commands.h: 
	* app/commands.c: Using PROP_TYPE_TEXT to find text to copy to
	clipboard.  Also removed AA callback.	

2002-08-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/chronogram/chronoref.c: 
	* objects/chronogram/chronoline.c: 
	* objects/SADT/annotation.c: 
	* objects/SADT/arrow.c: 
	* objects/SADT/box.c: 
	* objects/GRAFCET/vergent.c: 
	* objects/GRAFCET/vector.c: 
	* objects/GRAFCET/step.c: 
	* objects/GRAFCET/condition.c: 
	* objects/GRAFCET/action.c: 
	* objects/ER/participation.c: 
	* objects/ER/relationship.c: 
	* objects/ER/entity.c: 
	* objects/ER/attribute.c: 
	Removing unnecessary GTK references.

2002-07-31  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/image.c: 
	* objects/standard/textobj.c: 
	* objects/standard/ellipse.c: 
	* objects/standard/polygon.c: 
	* objects/standard/beziergon.c:
	* objects/standard/box.c: 
	Making default default properties.
	
	* objects/standard/image.c: 
	* objects/standard/arc.c: 
	* objects/standard/box.c: 
	* objects/standard/zigzagline.c: 
	* objects/standard/polyline.c: 
	* objects/standard/line.c: 
	* objects/standard/ellipse.c: 
	* objects/standard/polygon.c: 
	* objects/standard/beziergon.c: Removing vestigal GTK stuff.

	* lib/object_defaults.c (dia_object_default_create): 
	* lib/proplist.c: 
	* lib/properties.h: 
	* lib/object.c (object_copy_using_properties): 
	* lib/propdialogs.c: 
	* lib/propinternals.h: 
	* lib/propobject.c (object_create_props_dialog)
	(object_copy_props): 
	Removing the standard (toolbox) properties from defaults dialogs.

2002-07-30  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/font.c (dia_font_scaled_string_width) 
	(dia_font_scaled_ascent, dia_font_scaled_descent): Account for
	zoom factor.
	* lib/text.c (text_calc_boundingbox): Take descent into account.

	* objects/standard/bezier.c (bezierline_draw): 
	* lib/render.c (draw_bezier_with_arrows): 
	Better arrow drawing for beziers.  Doesn't change the mouse-click
	area either.

	* lib/arrows.h: Some const-ness.

	* lib/arrows.c (calculate_arrow_point): Initialize zero-length moves.

	* lib/render.c (draw_arc_with_arrows): 
	* objects/standard/arc.c (arc_draw): Better arrow drawing for
	arcs.  Doesn't change the mouse-click area yet.

	* app/menus.c: Forgotten fix:  Redraw menu item for non-Gnome.

	* lib/render.h: 
	* lib/render.c: 
	Arc arrow prework.

2002-07-29  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/group.c (group_draw): Forgotten commit: Groups to draw as
	objects (using default routines).

	* app/object_ops.h: 
	* app/diagram.h: 
	* lib/diagramdata.h: 
	* lib/diagramdata.c (layer_find_closest_connectionpoint): 
	* objects/standard/zigzagline.c (zigzagline_move_handle): 
	* app/diagram.c (diagram_find_closest_connectionpoint): 
	* plug-ins/python/pydia-diagram.c
	(PyDiaDiagram_FindClosestConnectionPoint):
	* app/object_ops.c (object_connect_display) 
	(object_find_connectpoint_display) 
	* app/create_object.c (create_object_button_press) 
	(create_object_motion): 
	* app/modify_tool.c (modify_motion): 
	Adding object param to allow connectionpoint and handle coinciding.

	* objects/standard/zigzagline.c (zigzagline_check_orientation): 
	Fixing minor problems.

	* objects/standard/ellipse.c (ellipse_update_data): 
	Added direction hints.

	* lib/diagramdata.c: 
	* lib/object.c: 
	* lib/object.h: 
	* lib/diagramdata.h: 
	* objects/standard/zigzagline.c: 
	First working example of zigzagline hints, currently only between
	Box and Zigzagline.

2002-07-27  Steffen Macke <sdteffen@web.de>

	* plug-ins/svg/render_svg.c: added support for rounded
	rectangles (fixes #69053 if compile with
	-DNEW_RENDER_OPS)
	* object/custom/shape_info.[c|h]: made parse_style and
	parse_path accessible for svg plug-in
	* plug-ins/svg/Makefile.am:
	* plug-ins/svg/svg.c:
	* plug-ins/svg/svg-import.c(new): added SVG import filter

2002-07-27  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/box.c: 
	* objects/standard/zigzagline.c (zigzagline_move): 
	More work on zigzagline hints.

2002-07-26  Lars Clausen  <lrclause@cs.uiuc.edu>
	* lib/connectionpoint.h: 
	Hints for zigzaglines.

	* app/properties.c (properties_show): 
	* app/defaults.c (defaults_show): 
	* lib/properties.h: 
	* lib/propobject.c (object_create_props_dialog): 
	* lib/object.h: 
	* objects/FS/flow-poly.c: 
	* objects/network/wanlink.c: 
	* objects/network/bus.c: 
	* objects/UML/class.h: 
	* objects/UML/class_dialog.c: 
	* objects/UML/association.c: 
	Start of removing toolbox props from props dialogs.
	
	* lib/widgets.c: 
	* lib/arrows.h: 
	* app/lineprops_area.c (dia_arrow_chooser_new): 
	* lib/arrows.c: Two new arrows: Concave, filled and blanked.

	* app/create_object.c: 
	* app/modify_tool.c: 
	* app/cursor.h: 
	* app/cursor.c: 
	More cursor change.

2002-07-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/preferences.c: 
	* lib/paper.c: 
	* app/diapagelayout.c: 
	New prefs selector kind PREF_CHOICE chooses between a list of
	strings.  Used for picking default paper.
	
	* app/preferences.c (prefs_data): 
	* lib/paper.c (get_paper_info): Added prefs setting for
	is_portrait.

	* lib/render.c (draw_polyline_with_arrows): Handles degenerate
	line segments at the ends (bug #86603).

2002-07-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/zigzagline.c (zigzagline_copy): Fix for bug
	#60324: Now calls update_data after copy.

	* app/interface.c (fill_sheet_wbox): Better fix for bug #88601:
	Now doesn't steal selection from non-object tools.

2002-07-24  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/commands.c (help_manual_callback): Uses BROWSER environment
	variable when available.

2002-07-23  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/interface.c (fill_sheet_wbox): Fix for bug #88601: Select an
	object from the new sheet when changing.

	* app/app_procs.c (app_init): Uses more standard size icon, from
	patch #56433.  Keeping old icon as dia_gnome_icon_large.png.

2002-07-22  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/UML/implements.c (implements_update_data): 
	* objects/UML/realizes.c (realizes_update_data): 
	* objects/UML/dependency.c (dependency_update_data): 
	Test for null strings before calling on ascent.

	* objects/UML/realizes.c (realizes_draw): 
	* objects/UML/message.c (message_draw): 
	* objects/UML/generalization.c (generalization_draw): 
	* objects/UML/dependency.c (dependency_draw) 
	* objects/UML/constraint.c (constraint_draw): 
	* objects/GRAFCET/condition.c (condition_draw): 
	* objects/UML/association.c (association_draw): 
	* objects/FS/flow-ortho.c (orthflow_draw): 
	* objects/FS/flow.c (flow_draw): Change to use
	draw_foo_with_arrows.  Pretty pretty arrows.  Yay me!

	* lib/render.h: 
	* lib/arrows.c (calculate_arrow_point): 
	* lib/arrows.h: 
	* lib/render.c: 
	* objects/standard/zigzagline.c:
	* objects/standard/polyline.c:
	* objects/standard/line.c: Work towards better arrow drawing.

2002-07-21  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/UML/state.c: Starting phase-out of State object as
	initial/final state (which never worked right).

	* app/app_procs.c (app_init): --version command line option for
	non-Gnome.

	* configure.in: Slight improvement in GETTEXT_PACKAGE handling.

2002-07-19  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c: Removed debugging info.

	* lib/font.c (dia_font_scaled_ascent, dia_font_scaled_descent):
	Kludge to make ascent and descent work for empty strings.  Won't
	work when using non-ASCII fonts.  Better would be to get a
	PangoFont and ask directly.

	* configure.in: Simple define of GETTEXT_PACKAGE, and some updates
	of the init stuff.

	* app/render_gdk.c (get_text_width): Fixed use of wrong string.
	Cursor now better.

2002-07-18  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xfig/xfig-export.c: First use of draw_object render
	function: All shapes are now groups in XFig export.

	* lib/diagramdata.c (normal_render): 
	* lib/render.c: 
	* lib/render.h: 
	* app/display.c (ddisplay_obj_render): 
	New render function for drawing objects, allows renderers to group
	or otherwise specially handle objects.  We may want to reconsider
	calling it in app/display.c, as we 'know' the object draw function
	is the default one there.

	* lib/Makefile.am: Removed extra \ that broke stuff.

	* plug-ins/xfig/xfig-import.c: 
	Spline import for xfig.  Not perfect.

	* objects/standard/create.h: 
	* objects/standard/bezier.c (bezierline_create): 
	* lib/bezier_conn.c: 
	* lib/beziershape.c (beziershape_set_points): 
	* lib/bezier_conn.h: 
	* lib/beziershape.h: 
	Support for creating beziers non-interactively.

2002-07-17  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xfig/xfig-import.c: Support for polygons and
	polylines.  Special warning handling system removed.

	* lib/message.c (gtk_message_internal): Fixed bug involving
	closing message window and then getting repeated message.

	* Makefile.am: 
	* autogen.sh: 
	* configure.in (GETTEXT_PACKAGE): 
	Update based on bug #88199.  Hopefully this doesn't break too much
	intl stuff.

	* dia.desktop.in (_Comment): Changed after suggestion from
	calum.benson@ireland.sun.com (bug 88345)

	* app/sheets_dialog_callbacks.c: Fix from Dolores Alia de Saravia
	<loli@unsa.edu.ar> that makes user/system distinction better.

2002-07-16  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_libart.c: Got the context right, removed crashes.

	* app/commands.c: 
	* app/commands.h: 
	Redraw menu item.

	* app/display.c: 
	* app/display.h: 
	* app/interface.c: 
	* app/menus.c: 
	Remove libart #defines from most places (still around for png export).

	* app/render_libart.h: 
	* app/render_libart.c: 
	* configure.in (HAVE_LIBART): 
	Starting on update of libart stuff for png export (without X).

	* app/autosave.h (autosave_check_autosave): 
	* app/load_save.h: 
	* app/diagram.h: 
	* app/Makefile.am (dia_core_files): 
	* app/load_save.c: 
	* app/diagram.c (diagram_set_modified): 
	* app/autosave.c: 
	* app/app_procs.c (app_init): 
	Autosave support.  No automatic restore yet.

2002-07-16  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c (create_eps_renderer): #ifdef'd a scale
	assignment. 
	
2002-07-15  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/interface.c (fill_sheet_menu): Tear-off for sheets menu.

2002-07-15  Andrew Ferrier  <andrew@new-destiny.co.uk>

	* Fix for 'make dist' etc. --- problem caused by
	previous AUTHORS patch.

2002-07-14  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/cgm/cgm.c (init_fonts): Changed pango_font_map to
	pango_context. 
	(set_font): NULL check.
	
2002-07-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/disp_callbacks.c: 
	* lib/diamenu.h: 
	Addition to the object menus allows check menu items.

2002-07-11  Andrew Ferrier  <andrew@new-destiny.co.uk>

	* HACKING: completely changed to bring up-to-date.
	* AUTHORS: file needs REMOVING from CVS as now
	  dynamically generated.
	* app/authors.h: split into subcategories for original
	  authors, maintainers, etc.
	* app/app_procs.c: --credits rewritten to support new
	  app/authors.h
	* app/commands.c: no changes to about box code, comment
	  added though.
	* Makefile.am: added rule for AUTHORS. I'm still
	  inexperienced with automake, it seems to work, but
	  for AUTHORS-related bugs, look at this change first.

2002-07-10  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/Makefile.am (SUBDIRS): Just realized why my hack didn't
	work.  Back to including xslt dir always.

	* objects/UML/uml.c: 
	* objects/UML/class.h: 
	* objects/UML/class_dialog.c: 
	* objects/UML/class.c: Patch from
	<mattam@netcourrier.com>:  Adds comment visibility switch, also
	fixes various bugs.

	Big patch from Alejandro Aguilar Sierra <asierra@servidor.unam.mx>
	for state/fork/activity stuff.
 	* objects/UML/state.c: Removed old draw_rounded_rectangle code.
 	* objects/UML/Makefile.am:
 	* objects/UML/uml.c:
 	* sheets/UML.sheet.in: Added new objects activity, fork,
 	  state_term.
 	* objects/UML/pixmaps/state_term.xpm:
 	* objects/UML/state_term.c: New, only initial/final states.
 	* objects/UML/pixmaps/activity.xpm:
 	* objects/UML/activity.c: New, activity state.
 	* objects/UML/pixmaps/fork.xpm:
 	* objects/UML/fork.c: New, fork/join bar.
 	* objects/UML/pixmaps/state.xpm: state icon.

	
	* doc/diagram.dtd: 
	* doc/shape.dtd: Patch from "Dolores Alia de Saravia"
	<loli@unsa.edu.ar> to add dia: to diagram.dtd elements and add
	svg:text to shape.

2002-07-07  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/Makefile.am (SUBDIRS): Made the XSLT dir depend on
	detecting XSLT

	* app/Makefile.am: Commented out the diaconv parts while it's not
	used anyway.  To come back later.

	* configure.in (HAVE_FREETYPE): 
	* app/app_procs.c: 
	* app/render_eps.h: 
	* app/render_eps.c: Support for printing with freetype, better
	encapsulated now.  Renders the text nicely, but ignores font
	setting.  Requires pangoft2 to get the font outline, but non-text
	objects can still be rendered without it.

	* app/commands.h: 
	* app/commands.c (objects_place_up_callback) 
	(objects_place_down_callback): 
	* app/diagram.h: 
	* app/diagram.c (diagram_place_down_selected) 
	(diagram_place_up_selected): Starting support for moving objects
	one level up/down.

	* app/menus.c: Removed character/numeral shortcuts.

2002-07-06  Hans Breuer  <hans@breuer.org>

	* makefile.am app/makefile.am lib/makefile.am
	  objects/makefile.am plug-ins/makefile.am 
	  plug-ins/python/makefile.am :
	added required files for win32 build to EXTRA_DIST

	* app/paginate_psprint.c app/render_eps.c 
	  app/app_procs.c :
	wrap (E)PS Renderer into HAVE_FREETYPE, no FreeType
	on Pango as currently is on win32 => no PostScript 
	anymore.

	* lib/widgets.c : undef GTK_DISABLE_DEPRECATED;
	use '/* noop */;' for empty case labels; replace
	debug spew printf with g_print which is guaranteed 
	to work on win32, too.

	* lib/font.c (dia_pfd_set_weight) : set 'intermediate' values 
	for DIA_FONT_MEDIUM and DIA_FONT_DEMIBOLD as explicit allowed 
	in the pango_font_description_set_weight() api documentation
	Take care for them in dia_font_get_style() too.

	* lib/font.[hc] lib/widget.c objects/custom/shape_info.c
	  plug-ins/shape/shape-export.c plug-ins/svg/render_svg.c :
	rename Obliquity to Slant which appears to be the usual name,
	also rename dia_font_get_style_string -> dia_font_get_slant_string

	* plug-ins/wmf/wmf.cpp : finally ported to new font api

	* lib/prop_attr.c app/render_gdk.c : dont *_unref if NULL

	* objects/uml/association.c class.c large_package.c message.c
	if g_free() is used g_strdup needs to be used.
	* objects/custom/shape_info.c
	  objects/ER/attribute.c entity.c
	  objects/standard/image.c 
	  app/sheets_dialog_callbacks.c : more strdup cleaning

2002-07-05  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c: Non-crashing printing (made the right
	context).  Font output still fscked up.

2002-07-05  Andrew Ferrier  <andrew@new-destiny.co.uk>

	* app/authors.h: Added file --- now master
	location for contributors data.
	* app/app_procs.c: Added --credits option.
	* app/commands.c: Modified about box to use
	app/authors.h.

2002-07-05  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c: First stab at EPS rendering using the contour
	code from PAPS.  Crashes.

2002-06-30  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/recent_files.c (recent_file_history_remove): 
	Fixed call to g_list_delete_link discarding return value.
	
	* lib/widgets.c (dia_font_selector_set_styles): 
	* lib/font.h (DiaFontWeight): 
	* lib/font.c (dia_font_get_style): Revert to DIA_FONT_NORMAL==0

2002-06-30  Cyrille Chepelov  <cyrille@chepelov.org>

	Contribution from Alan Horkan <horkana@tcd.ie>: 
	
	* shapes/Assorted/*
	* sheets/Assorted.sheet:
	A set of 40 assorted geometric shapes.

	* sheets/Assorted.sheet.in:
	* sheets/Makefile.am
	* shapes/Assorted/Makefile.am:
	* shapes/Makefile.am:
	* po/POTFILES.in:
	* configure.in:
	Done the integration job of Alan's shapes. (Translators: have fun!)

	* po/dia.pot: refreshed the main potfile.
	
2002-06-28  Cyrille Chepelov  <cyrille@chepelov.org>

	Patch from Tim Ellis <Tim.Ellis@gamet.com>:
	
	* objects/UML/class.[ch]:
	* objects/UML/class_dialog.c:
	changed the number of connection points from a hardcoded value of
	8 to a #defined constant

	(I changed the constant back from 20 to 8, until we better know
	how we'll handle more connection points on the UML class in the
	future -- but Tim's patch is a welcome clean-up).

2002-06-26  Cyrille Chepelov  <cyrille@chepelov.org>

	* shapes/MSE/demultiplexer.xpm:
	* shapes/MSE/node_center.xpm:
	* shapes/MSE/multiplexer.xpm:
	* shapes/MSE/tacsat.xpm: updated MSE icons (transparency) by Alan
	Horkan <horkana@tcd.ie>

2002-06-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/widgets.c: Total rehash of font selector, with font dialog
	option, expanding list (not LRU yet), and stuff.

2002-06-25  Cyrille Chépélov  <cyrille@chepelov.org>

	* lib/font.h:
	* lib/font.c: 
	Added a set of new setter/getters, some of them more specially for
	the SVG-ish I/O.
	
	* plug-ins/shape/shape-export.c: (new_shape_renderer),
	(destroy_shape_renderer), (set_font), (draw_string):
	* plug-ins/svg/render_svg.c: (new_svg_renderer),
	(destroy_svg_renderer), (set_font), (draw_string):

	Actually exported the font face, style, weight and size (sodipodi
	agrees with dia on how a small sample should look like (a sample
	0.90 would not even display anyways). Yay !)

	Patch from Matthieu Sozeau <mattam@netcourrier.com>:

	* plug-ins/xslt/Makefile.am: repaired the mess Cyrille put there.

	(end of ChangeLog-less patch)

	* objects/custom/shape_info.c (parse_style): now understands the
	font-style and font-weight attributes as well. Does not use
	anymore dia_font_new_from_legacy_name().
	
2002-06-24  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/textobj.c: Now uses stdprops for defaults.

	* lib/font.h: Changed order of DiaFontWeight entries.  Sorry.
	* lib/font.c (dia_font_get_style): Style now linear and conversion
	simple. 

	* lib/widgets.c (dia_font_selector_set_styles): Fixed the style
	selector. 

2002-06-24  Cyrille Chepelov  <cyrille@chepelov.org>

	* plug-ins/dxf/dxf-import.c:
	using dia_font_new_from_style()

	Patch from Matthieu Sozeau  <mattam@netcourrier.com>:

	* objects/UML/class.[ch]: Added a comment field to class
	* objects/UML/uml.[ch]: Added a comment field to attributes,
	operations and parameters.
	* objects/UML/class_dialog.c: Added code for the new comment
	fields.
	* plug-ins/xslt/*.xsl: Added some code to handle comments.
	* plug-ins/xslt/xslt*.c: Clean up based on Cyrille comments.
	Added a $directory parameter for stylesheets so the output is 
	in the good place (not in the $PWD).

	(end of Patch)

	* AUTHORS: added contributors, updated maintainers. Removed the
	specific areas of action.

	* Patch from Andrew Ferrier <andrew@new-destiny.co.uk>, derived
	from a patch by Xing Wang <quixon@gnuchina.org>:

	* app/commands.c: help_about_callback now supports
	new-style GNOME about box as well as old GTK style. 
	code also tidied (Closes: #85726)

	(end of Patch)

	* app/commands.c: fixed the copyright (it's not all FSF), and
	maintainers. Synced contributors list with AUTHORS.
		
2002-06-24  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/message.c: More work on repeating messages, now with
	togglable view.

2002-06-24  Hans Breuer  <hans@breuer.org>

	* lib/widget.c : some more bits in place, at least
	it does something useful instead of crashing. Much
	better - but not all ok :-)

2002-06-23  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/message.c (gtk_message_internal): First stab at repeating
	message dialog.

2002-06-23  Cyrille Chepelov  <cyrille@chepelov.org>

	* objects/FS/*.c:
	* objects/GRAFCET/*.c:
	* objects/SADT/*.c:
	* objects/UML/association.c: (one instance forgotten)
	* objects/UML/large_package.c: 
	* objects/standard/textobj.c:
	* lib/attributes.c:
	* lib/text.c:
	using dia_font_new_from_style()

2002-06-23  Hans Breuer  <hans@breuer.org>

	* lib/font.c : giving some love to
	dia_font_new_from_legacy_name() that is making
	import of old files as painless as possible and
	provide an almost exact match where possible.
	It does not yet fully work because it interfers
	with the Style to DiaStyle conversion which comes
	next ...

	[Changing these files is only allowed with Dia-0.90]
	* broken-files/fonts-0.90.dia : including the
	common hard-coded fonts from Dia-0.90. It also
	has drawn bounding-boxes for win32 as they were calculated
	from the former version (they were all too big).
	* broken-files/fonts-0.90-full.dia : all hardcoded
	fonts including the asian versions. On my machine
	this gives _a lot_ complaining about missing fonts
	and a finally a broken file display. Anyone having
	all these fonts ?
	
2002-06-23  Cyrille Chepelov  <cyrille@chepelov.org>

	* objects/chronogram/*.c: 
	* objects/custom/custom_object.c:
	* objects/ER/*.c:
	using dia_font_new_from_style()

2002-06-23  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/widgets.c (dia_font_selector_set_styles): Improvements to
	font selector (stability, insensitivity).

	* lib/font.c (dia_font_scaled_build_layout): Removed unworkable
	stretching scheme for tweaking, and made scaling scheme faster
	(but less precise).
	(dia_font_dia_style_to_pango): Oops, % != /.

2002-06-23  Cyrille Chepelov  <cyrille@chepelov.org>

	
	* patch from Matthieu Sozeau  <mattam@netcourrier.com>:

	* plug-ins/xslt : Added an XSLT plugin to export dia files using
	XML Stylesheets. The plug-in requires DIA_PLUGIN_PATH to be set.
	It includes a small config file to tell it what stylesheets to use.

	(end of patch)
	
	* plug-ins/xslt/xsltdialog.c: modified the dialog to be more 
	GTK2.0/HIG compliant (the labels could be slightly more verbose,
	perhaps). Added back a couple forgotten _(). Removed //-style
	comments.
	
2002-06-23  Hans Breuer  <hans@breuer.org>

	* lib/plug-ins.c
	(dia_plugin_get_name) : don't crash plugin_manager
	on name being NULL 
	(dia_plugin_load) : reuse the description field to
	store the error string if loading fails.

	* lib/font.[hc] : starting to beautify the new
	font api: proper namespacing, adding convenience
	functions like dia_font_new_from_style(), ...

	* objects/uml/*.c : use the new convenience functions.

	[Next thing I plan to do is changing the other font
	 functions to take DiaStyle and make Style and 
	 BASIC_*_FONT vanish. As well as giving some love to
	 dia_font_new_from_legacy_name().
	 If anyone want's to help on converting the other
	 objects to the new api during that, I would highly 
	 appreciate it.]

2002-06-23  Hans Breuer  <hans@breuer.org>

	* lib/font.c : made it compile and small indent fixes.
	Is there a code-has-no-effect-so-needs-not-be-valid
	with GCC?	

	* lib/widgets.c : use g_strcasecmp

2002-06-22  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/font.c: 
	* lib/font.h: 
	* lib/widgets.c: Font names sorted, style selector widget
	reappeared.  Doesn't select the old style yet.

2002-06-22  Cyrille Chepelov  <cyrille@chepelov.org>

	* lib/font.c: one who expects a text's font to be changed shall 
	actually request the attributes to apply to the whole range of the
	said text... D'oh! 

	* lib/font.c: extents computation was wrong.

	* lib/font.c: dia_font_get_legacy_name(); g_strconcat works better
	if a last NULL parameter is added...

	* lib/font.c: extents computation was completely wrong. This looks
	much better this time.

	* objects/UML/class.c: fixed the various strings positions.

	* lib/font.h, and **/*.[ch] (all callers of dia_font_new): used
	macros to get the hardcoded base fonts.

	* objects/ER/relationship.c: wasn't converted to DiaFont*
	
2002-06-22  Hans Breuer  <hans@breuer.org>

	* lib/widget.c : dont use backend specific functions
	to get on the font_families. Including it would mean
	including <windows.h> which breaks due to namespace
	pollutions ...

	* lib/libdia.def : updated externals

	* app/makefile.msc : temporary disabled: -DHAVE_LIBART

	* lib/font.c : added empty dia_font_init_instance function,
	reformatting of dia_fon_unref to allow to set breakpoint,
	dia_fon_build_layout() : dont crash on string==NULL

	* lib/text.c (text_set_attributes) : don't unref the wrong font

	* lib/widgets.c (dia_fon_selector_set_font) : our hashtable
	stores lowercased font names, but dia_font_get_family()
	returns mixed case 	

2002-06-22  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/widgets.c: 
	* app/render_gdk.c: Patch from Hans Breuer.

	* app/Makefile.am (dia_core_files): diaconv commented out for now.
	
2002-06-22  Cyrille Chepelov  <cyrille@chepelov.org>

	* lib/all files touched yesterday: took into account some of Hans
	Breuer's remarks in
	http://mail.gnome.org/archives/dia-list/2002-June/msg00257.html

	* objects/chronogram/*: 
	* objects/custom/*:
	* objects/ER/*:
	* objects/flowchart/*:
	* objects/FS/*:
	* objects/GRAFCET/*:
	* objects/SADT/*:
	* objects/standard/textobj.?:
	* objects/UML/*:
	converted to the new DiaFonts.

	* plug-ins/cgm/*:
	* plug-ins/pstricks/*:
	* plug-ins/wpg/*:
	* plug-ins/dxf/*:
	* plug-ins/xfig/*:
	Made minimalistic conversions so that they'd at least compile.

	* app/render_gdk.c:
	* app/render_pixmap.c:
	Converted to the new DiaFonts.

	* app/app_procs.c
	* app/diaconv.c:
	* app/render_eps.c:
	made the minimal changes so that it would at least build.	

	*** At this point, the thing builds on my machine, but segfaults
	right away. ***
	
2002-06-21  Cyrille Chepelov  <cyrille@chepelov.org>

	* configure.in: removed the backend-specific pango pkg_modules
	(trivial to add back if needed, when actually needed)

	* app/Makefile.am:
	* app/*gnomeprint.[ch]: (removed): removed the GNOME-print
	renderer. The APIs will have completely changed when we get around
	to redo a renderer for it, anyways.

	* font.[ch]: rewrote everything from scratch, with a Pango
	implementation. Normally, only backend-neutral things should go in
	there.

	**WARNING**: new rules for managing DiaFont* pointers: these are
	reference-counted GObjects. One >must< diafont_ref() and
	diafont_unref() as appropriate. I wish I could overload operator=()...

	lib/plug-ins.h: bumped up the plug-in API.
	
	lib/attributes.c: 
	lib/dia_xml.c: 
	lib/dummy_dep.h
	lib/object_defaults:
	lib/prop_attr.c: Adapted to the new DiaFont API. This'll change
	again tomorrow with GObject.
 	
	lib/widgets.c: Adapted to the new DiaFont API and to Pango.

	**** The rest of the tree should be updated as well ****
	
2002-06-21  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_gdk.h: 
	* app/render_gdk.c: 
	* app/render_pixmap.c: 
	* app/render_pixmap.h: 
	* app/render_libart.h: 
	* app/render_libart.c: 
	* lib/font.h: 
	* lib/font.c: Removed freetype stuff (still around in
	lib/widgets.c 'cause we might want the font selector widget).

2002-06-20  Cyrille Chepelov  <cyrille@chepelov.org>

	* shapes/network/laptop.(xml|shape):
	* sheets/network.sheet.in: added Laptop (notebook) PC shape,
	contributed by Alan Horkan <horkana@tcd.ie>. (Closes: #82643)

2002-06-17  Hans Breuer  <hans@breuer.org>

	* lib/object_defaults.c : #include <libxml/tree.h> not
	<tree.h> pointed out by Xing Wang

2002-06-17  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/color.h (GDK_COLOR_TO_DIA, DIA_COLOR_TO_GDK): 
	* lib/widgets.c: 
	* app/color_area.c: Update to
	gtk_color_selection_*_current_color() fixed bad crash issues, plus
	updated color conversions.

	* sheets/ER/weakentity.xpm: Accepted patch from
	quixon@gnuchina.org to make icon match actual appearance.

	* app/recent_files.c: Fixed GNOME recent file problem, thanks to
	quixon@gnuchina.org.

2002-06-16  Hans Breuer  <hans@breuer.org>

	* lib/plug-in.[hc] : make PlugInInfo opaque again in the 
	good tradition of information hiding. Add new function
	dia_plugin_get_symbol()
	* app/sheets.c app/sheets_dialog_callbacks.c : use it

	* app/sheets.c : stop complaining about object_get_type() 
	returning NULL. This is a consequence of e.g. disabling 
	plug-ins at runtime _and_ it was and is gracefully handled. 
	Spitting out g_warning for it isn't appropriate. 

	* lib/object.[ch] : removed dead code

	* app/plugin-mangager.c : almost complete rewrite for gtk2
	using GtkListStore/GtkTreeView

	* lib/libdia.def : updated externals

	* todo.gtk2 : updated, that is removed already done steps

2002-06-15  Hans Breuer  <hans@breuer.org>

	* objects/uml/class_dialog.c : clean some left-over
	utf8-mess, return 0 from "focus_out_event" handlers
	to avoid asserting in gtk (#78305). Reconstruct 
	stereotype/NULL behaviour to avoid rendering empty
	stereotypes on classes and member functions

	[#56109 - Provide object defaults for StdProp objects,
	 some remaining issues are discussed in bugzilla]

	* lib/object_defaults.c : (new file) manage default properties 
	of dia objects. The serialization is done with standard
	object methods in a diagram compatible format.

	* lib/object.c : add object_registry_foreach() which allows
	to iterate over all registered object types

	* lib/object.h : added prototypes object_default*() and
	object_registry_foreach()

	* lib/makefile.am lib/makefile.msc : add new file to build

	* lib/libdia.def : export new functions

	* app/defaults.c : provide StdProp based defaults if the
	ObjectType doesn't implement it's own default functions

	* app/create_object.c : through dia_object_default_create()
	* app/disp_callbacks.c : same here

2002-06-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/FS/flow-ortho.c (orthflow_get_object_menu): Menu
	sensitivity for deleting segments.

2002-06-12  Cyrille Chépélov  <cyrille@chepelov.org>

	* app/color_area.c: (color_area_events):
	* app/diagram.c: (diagram_destroy):
	* app/interface.c: (zoom_activate_callback), (fill_sheet_wbox),
	(fill_sheet_menu):
	* app/load_save.c: (diagram_data_load):
	* app/menus.c: (menus_get_item_from_path):
	* app/preferences.c: (prefs_load):
	* app/render_gdk.c: (get_text_width):
	* lib/arrows.h:
	* lib/color.c: (color_convert):
	* lib/dia_dirs.c: (dia_config_filename):
	* lib/dia_xml.c: (xmlDiaParseFile), (data_type):
	* lib/intl.c: (intl_get_language_list):
	* lib/message.c: (message):
	* lib/message.h:
	* lib/paper.c: (get_default_paper):
	* lib/plug-ins.c: (this_is_a_plugin), (dia_register_plugins):
	* lib/widgets.c: (dia_file_selector_get_file):
	* lib/widgets.h:
	* objects/standard/image.c: (get_directory):

	warningectomy.
	
2002-06-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* ChangeLog: Fixed bad UTF-8 mess.  Apologies.

2002-06-11  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/interface.c: sscanf now returns EOF on empty string, so
	handle no match for zoom factor better => correct zoom at start.

	* app/sheets.c (create_object_pixmap): Tried to display empty error.
	(sheets_optionmenu_create): Died when not finding specified
	sheet.  Don't think it should.

	* objects/UML/association.c: Added patch from osamyn@ulb.ac.be
	(bug #84367) to place the text better.

2002-06-11  Cyrille Chepelov  <cyrille@chepelov.org>

	* configure.in: Added forgotten libgnomeui-2.0 when --enable-gnome
			
	* app/commands.c: Removed unnecessary gnome include. Removed
	GNOME-Print support.

	* app/menus.h: Removed now unnecessary gnome include.
	
	* app/sheets_dialog.c: Used Gtk 2.0 stock buttons instead of
	GNOME-specific stock buttons
	
2002-06-09  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : convert 'Modified diagrams exits'
	dialog to use GtkMessageDialog. That gives us:
	- icons without Gnome dependency
	- much less code, also cross platform
	- improved useability ?

	* app/color_area.c : the Color Selection Widget looked
	quite wrong (alpha problems). Fix it by merging in required
	changes stolen from The Gimp cvs
	* app/color_area.h : to get the right appearance the maskes
	needed to be taken into account
	* app/interface.c : adapt to color_area_create changes.
	Also remove some dead code and finally remove cvs autexpansion, 
	I was bothered enough by irrelevant differences :-)

	* app/defaults.c app/properties.c app/dia-props.c : use improved GtkDialog
	api, i.e stocks and response to make the GnomeDialog usage
	obsolete. Also fixed the issue with closing the 'parent'
	before closing the dialog

	* app/display.[ch] : removed some dead code and conversion
	to new GtkDialog api. Also trying to conform to new HIG
	standard http://developer.gnome.org/projects/gup/hig/

2002-06-09  Hans Breuer  <hans@breuer.org>

	* lib/makefile.msc : define GTK_DISABLE_DEPRECATED,
	build ps-utf8.c

	* lib/dia_image.c : gtk_widget_set_default_visual()
	remove. It does nothing with Gtk2.

	* lib/libdia.def : added ps_unicoder exports

	* lib/message.c : remove #GNOME use GtkMessageDialog.
	Yeah, Dia gets dialogs wit icons cross-platform.

	* lib/prop_geomtypes.c : gtk_spin_button_get_value_as_float()
	to gtk_spin_button_get_value()

	* lib/prop_inttypes.c : gtk_label_set() -> gtk_label_set_text()

	add #undef GTK_DISABLE_DEPRECATED to still use ...
	* lib/prop_text.c :  ... GtkText
	* lib/prop_widgets.c : ... GtkList
	* lib/prop_dialogs.c : ... gtk_signal_connect and more
	* lib/widgets.c : ... (too much to list here)

	* lib/ps-utf8.c : #include <string.h>

2002-06-08  Cyrille Chepelov  <cyrille@chepelov.org>

	* configure.in:
	* Makefile.am:  Adapted for gtk2.
	Removed dependencies on libunicode, on iconv(), on langinfo().

	* acconfig.h: removed (now obsolete)

	* lib/charconv.[ch]: removed (superceded by glib)
	* lib/ps-utf8.[ch]: removed dependency on charconv.[ch]

	* **/*.[ch]: removed (utfchar *), (unichar) and other charconv or
	libunicode types for their glib counterparts. Fixed the include
	paths for libxml2. Removed all traces of libxml1 or non-UTF8
	support (there were remains in objects/uml).

	
2002-06-08  Hans Breuer  <hans@breuer.org>

	*/*.c */*/*.c : remove all the #ifdef *_UTF8_* hell,
	only keep the utf-8 clean code cause Dia+Gtk2 now talk it.
	Also use g_strdup()'s handling of NULL by returning NULL
	again at all places I found (remove unnecessary if's)

	* todo.gtk2 : new file to keep notes about gtk2 porting,
	further issues and thoughts and some status information.
	Also sent to dia-list ('Dia goes Gtk2 ...').
	
	[make it compile with GTK+ 2.0]

	* config.h.win32 : #undef GTK_TALKS_UTF8_WE_DONT,
	removed definition of S_ISDIR, S_ISREG and getlogin

	* */makefile.msc : Use GTK2 and libxml2
	BEWARE: makefile.am, configure.in not yet ported !
 
	* app/app_procs.c app/diagram.c : remove 
	gtk_item_factory_dump_rc code, (it wasn't read in again anyway) 
	but set use gtk_menu_set_accel_path() on menu creation

	* app/color_area.c lib/widgets.c : 
	make use of gtk_color_selection_set_has_palette ()

	* app/commands.c : gdk_pixbuf_new_from_file wants an 
	extra argument. Convert from DIR to GDir usage.

	* app/diagram_tree.c(button_press_callback) : need to return 
	FALSE in the signal handler to let gtk process it further.
	(get_object_name) : don't leak 'prop'
	
	* app/diapagelayout.c : adapt to GtkTypeInfo changes and handle 
	dia_page_layout_destroy() getting called more than once

	* app/diaunitspinner.c : GtkEditable -> GtkEntry, 
	GtkTypeInfo changes

	* app/disp_callbacks.c : gtk_menu_append() -> gtk_menu_shell_append()

	* app/display.h : wrap input contexts declarations into #ifdef USE_XIM.
	IIRC this code will not compile unchanged when USE_XIM is defined ...

	* app/gtk[hv]wrapbox.[hc] : use already ported version from The GIMP 1.3.x

	* app/interface.c : there is no widget->klass anymore in Gtk, 
	use GTK_WIDGET_GET_CLASS instead. gdk_pixbuf_new_from_file() extra
	parameter. Some tweaking of GtkWrapBox usage to get four tools in
	a row again.
	switch off GTK's double buffering on Dia's canvas. Otherwise we would 
	get triple buffering and flicker.
	Replace call to GTK private function _gtk_accel_group_attach()
	with public gtk_window_add_accel_group()

	* app/layer_dialog.c : adapt to GtkTypeInfo changes

	* app/load_save.c lib/plug-ins.c lib/sheet.c 
	  objects/custom/custom.c : 
	simplified by using g_file_test()

	* app/menus.c : convert from gtk_item_factory_<dump|parse>_rc 
	to gtk_accel_map_<save|load>. Also added common stock-icons
	to the menu.
	
	* app/preferences.c : use gtk_button_set_label() instead
	of button->child which is gone. Also removed GLIB_CHECK_VERSION.

	* app/preferences.c lib/dia_xml.c lib/plug-ins.c :
	#ifdef G_OS_WIN32 #include <io.h>, this was formerly done
	in config.h.win32

	* app/recent_files.c : removed GLIB_CHECK_VERSION

	* app/render_eps.c 
	  plug-ins/metapost/render_metapost.c
	  plug-ins/pstricks/render_pstricks.c
	  plug-ins/svg/render_svg.c :
	replace getlogin() with g_get_user_name() which always
	returns non NULL

	* app/render_gdk.c : gdk_region_union_with_rect() modifies
	inplace now and returns nothing, also less #hell

	* app/render_libart.c : some initial #hell cleaning, SuckFont
	still needs to vanish

	* app/splash.c : gdk_pixbuf_new_from_file() second arg and
	GTK_WINDOW_DIALOG -> GTK_WINDOW_TOPLEVEL

	* app/render_pixbuf.c app/sheets.c : plain #hell cleaning
	* app/sheets_dialog_callbacks.c : some #hell and adaptions
	needed to GtkWrapBox api changes


	* lib/charconv.[hc] : removed from build
	[changed appropriate]
	* lib/prop_inttypes.c lib/prop_text.c : 
	all utf-8 cleaning 
	* lib/text.c : ported from HEAD but keep original indent
	intact. Original was done by Akira TAGOH.

	* lib/color.c : GdkColorContext is gone, use GdkColormap instead.

	* lib/dia_image.c : gdk_pixbuf_new_from_file() second arg

	* lib/dia_xml.c : remove #ifdef GLIB_CHECK_VERSION, it's the
	same on all platforms now!

	* lib/font.c : still using SuckFont which was an IMPERATIVE FIXME!

	* lib/message.c : remove "charconv.h"

	* lib/prop_text.c : #define GTK_ENABLE_BROKEN to use GtkText

	* lib/plug-in.c :
	* lib/sheet.c : convert from DIR to GDir usage

	* lib/widgets.c : gtk_menu_(shell_)append and GtkTypeInfo

	* lib/widgets.h : include gtk<label|colorseldialog>.h


	* objects/fs/flow.c :
	* objects/fs/flow-ortho.c : GTK_ENABLE_BROKEN to use GtkText

	* objects/custom/custom.c : convert from DIR to GDir usage


	* plug-ins/python/makefile.msc : updated for GTK2/Python2.2


2002-05-03  Hans Breuer  <hans@breuer.org>

	* lib/dia_xml.c : make the well formed utf8 check
	actually work for &#251; (non 7-bit ascii encoding)
	and fixed the file re-writing if the check fails.
	Thanks to Vitaly Lipatov for noticing the misbehaviour.

	* lib/font.c : synchronize #ifdef G_OS_WIN32 with
	comment on last ressort font. Thanks to Maxim Sobolev.

2002-06-03  Cyrille Chepelov  <cyrille@chepelov.org>

	* sheets/network.sheet.in: corrected a typo in plotter invocation.

2002-06-03  Steffen Macke  <sdteffen@web.de>

	* shapes/network/digitizing_board.png:
	* shapes/network/digitizing_board.shape:
	* shapes/network/plotter.png:
	* shapes/network/plotter.shape:
	* shapes/network/Makefile.am
	* sheets/network.sheet.in: added new plotter and digitizing
	board shapes
	
2002-06-02  Cyrille Chepelov  <cyrille@chepelov.org>

	* lib/font.c: made a symptomatic fix to a segfault reported by 
	Jan Keirse <jan.keirse@pandora.be> on a SuSE 7.3 system. This
	won't prevent dia from terminating, but should give more
	user-friendly information about why did it terminate.

	Two patches from <robert.young@dsto.defence.gov.au>:
	
	* app/display.c: fix the size of the canvas area which gets
	redrawn. There was an off-by one error (Closes #83659)

	* app/display.c: make sure we redraw all screen only when we
	really have to (some update_areas were mistakenly ignored) (Closes
	#83496). 

	* NEWS: added a new entry for the future. Put there a reminder to
	update the dependencies.

	* configure.in: put in notes about what will change shortly.
	upped the version to 0.90+cvs (did also in config.h.win32)
	upped the minimum version for intltools (now 0.21)
	
2002-06-01  Cyrille Chepelov  <cyrille@chepelov.org>

	* dia.spec:
	* configure.in:
	* NEWS:
	* config.h.win32:
	bumped up version number to 0.90. Yay!

2002-05-30  Cyrille Chepelov  <cyrille@chepelov.org>

	* doc/pl/Makefile.am:
	* doc/en/Makefile.am: fixed a "make install" problem when db2html
	is not present (Reported by Andrew Ferrier
	<andrew.junk@new-destiny.co.uk>). Fixed another "make distclean"
	problem which prevented me from ever seeing the problem in doc/en...
	
	* Makefile.am: added autogen.sh to the EXTRA_DIST clause.
	
	* lib/font.c: patch from <robert.young@dsto.defence.gov.au>; add a
	way to read the font path from the XFS configuration files in
	order to enable FreeType (fixes #83098).

	* POTFILES.(in,skip): now skips objects/sybase/sybase.c, which is not
	shipped nowadays.
		
	* dia.spec:
	* configure.in:
	* NEWS:
	* config.h.win32:
	bumped up version number to 0.90.RC3

2002-05-29  Zbigniew Chyla  <cyba@gnome.pl>

	* configure.in, doc/Makefile.am, doc/pl/Makefile.am,
	doc/pl/authors.sgml, doc/pl/dia-manual.sgml, doc/pl/dia-pl.omf,
	doc/pl/intro.sgml, doc/pl/license.sgml, doc/pl/topic.dat
	doc/pl/usage-canvas.sgml, doc/pl/usage-customization.sgml,
	doc/pl/usage-layers.sgml, doc/pl/usage-loadsave.sgml
	doc/pl/usage-objects-selecting.sgml, doc/pl/usage-objects-special.sgml,
	doc/pl/usage-objects.sgml, doc/pl/usage-quickstart.sgml:
	Added Polish documentation.

2002-05-27  Cyrille Cheeplov  <cyrille@chepelov.org>

	* objects/UML/state.c: there was a (gratuitous?) change of on-XML
	format for the UML State object. Now there's a hack to reload
	older files, and get them converted on the fly. 
	Justyna BiaÅ?a <nell@poczta.gazeta.pl> reported this. Thanks!

	* lib/properties.h:
	* lib/propobject.c:
	* lib/proplist.c: Added a new property flag, PROP_FLAG_LOAD_ONLY,
	and adapter the proplist predicates. A LOAD_ONLY property is for
	when you have legacy to support but can't resist moving your
	fields around... (was needed to support the above state.c fix).

	If the in-core of your object changes and you need a LOAD_ONLY
	property for the old format, you must keep some spare room in your
	object's struct to accomodate for the potential old-style
	attributes. Then in foo_load(), after having called
	object_load_using_properties(), you must inspect the old-style
	fields and act accordingly. Don't ever change the on-disk formats...

	* objects/UML/object.c:
	* objects/UML/small_package.c: added a check against empty
	stereotypes still consuming space. Reported by Dolores Alia de
	Saravia <loli@unsa.edu.ar>. Thanks!	
	
2002-05-26  Cyrille Chepelov  <cyrille@chepelov.org>

	* INSTALL: added platform notes from MÃ¥rten Svantesson, for when
	using libtool on an AFS partition.

	* po/update_potfiles_in.sh: now simply calls the recent intltools 
	features; they work better than hand-crafted half-ignorant
	scripts. Thanks to Kenneth Rohde Christiansen <kenneth@gnu.org>
	for the tip.

	* po/POTFILES.in: added back two files update_potfiles_in.sh
	didn't take into account. Now this file is not automatically
	generated anymore!	
	* po/POTFILES.skip: told `intltool-update -m` what files to ignore
	(the usual suspects, in fact).

	* configure.in: improved the isinf() / isfinite() detection on
	Solaris (MÃ¥rten Svantesson)
	
2002-05-25  Cyrille Chepelov  <cyrille@chepelov.org>

	* configure.in: one expression was replacing $CFLAGS, removing
	whatever was previously in.
	Added more checks for isinf() and finite() on Solaris.

	* lib/geometry.h: added a macro defintion for isinf() if not
	HAVE_ISINF. (Hans, you may want to #define HAVE_ISINF if relevant
	on Win32)

	* app/commands.c: "cut" did not set the 'modified' bit (paste has
	been for a little while). Fixes #82994.

	* Makefile.am: added more stuff to distclean-local. This should make
	"make distcheck" pass! Thanks to the author of
	http://mail.gnome.org/archives/gnome-2-0-list/2001-August/msg00212.html
	... I wonder who this Henstridge guy is ... ;-)
	Darn. Still doesn't pass. I give up for tonight.
	
	* po/update_potfiles_in.sh: updated to take care of sheet files,
	and to filter out the EML plug-in.
	* po/POTFILES.in: updated with all .c and all .sheet.in files 

	* po/dia.pot, po/*.po: again updated all .po files with all
	strings (with the updated POTFILES). Now with the up-to-date
	POTFILES, just all languages have some fuzzy or untranslated
	strings (not that the 100% team was that large beforehand...)

	* po-checktrans: removed the comment about .po files not holding
	all translatable stuff, since now they do.
	
2002-05-24  Cyrille Chepelov  <cyrille@chepelov.org>

	* dia.spec:
	* configure.in:
	* NEWS:
	* config.h.win32:
	bumped up version number to 0.90.RC2

2002-05-20  Hans Breuer  <hans@breuer.org>

	* app/load_save.c : starting to increase
	Dias tolerance on incomplete/broken files. The 
	corresponding bug is #56233. But the patch there does
	neither apply anymore nor does it really fix the problem
	but only delays it, e.g. even if it would be allowed
	to read a file without any layers, the later code can't
	handle it.
	* lib/dia_xml.c : attribute_<num|first>_data(), data_type()
	handle passing in NULL for the node gracefully.

	* shapes/network/printer.shape : added two more connection
	points - one at each side - to fix bug #60359

	* app/commands.c (edit_copy_callback) : 
	add ddisplay_do_update_menu_sensitivity() to make 
	sequence select-copy-paste work.

2002-05-20  Hans Breuer  <hans@breuer.org>

	* app/create_object.c (create_object_button_press) :
	added a call to ddisplay_do_update_menu_sensitivity()
	to make Ctrl^D etc work after object creation. 
	Fixes #80983.

2002-05-18  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/ER/entity.c: 
	* objects/ER/attribute.c: 
	* objects/ER/relationship.c: Patch to allow text size change from
	Celso Tetsuo Nagase Suzuki.

2002-05-18  Steffen Macke <sdteffen@web.de>

	* app/app_procs.c: #ifdef'd xmlerror.h (comes with 
	libxml2)
	* doc/en/graphics/greendots.png:
	* doc/en/home_network.png:
	* doc/en/line_props.png: 
	* dia-diagram.png:
	* dia_gnome_icon.png:
	* dia_gnome_menu_icon.png:
	* dia_logo.png:
	* shapes/network/telephone.png:
	* shapes/Logic/and.png:
	* shapes/Logic/buffer.png:
	* shapes/Logic/connector.png:
	* shapes/Logic/inverter.png:
	* shapes/Logic/nand.png:
	* shapes/Logic/nor.png:
	* shapes/Logic/not.png:
	* shapes/Logic/or.png:
	* shapes/logic/xor.png:
	* samples/ER-demo.dia:
	* samples/SADT.dia:
	* samples/UML-demo.dia:
	* samples/chronograms.dia:
	* samples/grafcet.dia: re-added as binary files

2002-05-17  Hans Breuer  <hans@breuer.org>

	* lib/libdia.def : reflect removing of render_store.[ch]

	* */makefile.mingw : remove VERSION definition it's
	done in config.h.win32. Dia still doesn't work if
	build with mingw ...

	* RELEASE-PROCESS : removed */makefile.mingw

	* app/sheets_dialog_callbacks.c : if we use those
	ugly charconv_gtk_* functions lib/charconv.h needs to
	be #included ...
	* lib/charconv.h : ... and needs to contain the 
	necesseray prototypes _and_ #defines

	* plug-ins/shape/shape-export.c : with libxml2 xmlNewGlobalNs
	is deprecated and does nothing but spit a warning. This broke
	the shape format writing. Fixed.
	Also with libxml2 pretty formatted xml isn't the default
	anymore, but needs to be enabled explicit: It is done now 
	for shape files, which almost always needed to be edited by
	hand ... 

	* app/app_procs.c : #if G_OS_WIN32 redirect xmlErrorReporting
	from stderr - which is invalid on Dia/win32 - to g_print -
	which opens up a console window if necessary. This way
	a xml-deprecation-error shouldn't stay unnoticed next time

2002-05-17  Steffen Macke <sdteffen@web.de>

	* shapes/Misc/folder.png:
	* shapes/Misc/file.png: re-added as binary files
	
2002-05-16  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/font.c: Fixed segfault for fonts without family_name.

2002-05-17  Cyrille Chepelov  <cyrille@chepelov.org>

	* po/POTFILES.in: added app/sheets_dialog_callbacks.c

	* app/sheets_dialog_callbacks.c: While reviewing UTF-8isation upon
	Lars' request, minor cosmetic stuff (mostly _() of human-readable
	XML comments in .sheet files; one translator booby-trap disarmed).

	* lib/charconv.c: moved #hell inside the body of the new
	charconv_*gtk* functions (otherwise the Win32 or gtk2.0 linker
	will yell)
	
2002-05-16  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/wpg/Makefile.am (INCLUDES): 
	* plug-ins/shape/Makefile.am (INCLUDES): 
	* plug-ins/svg/Makefile.am (INCLUDES): 
	* plug-ins/pstricks/Makefile.am (INCLUDES): 
	* plug-ins/metapost/Makefile.am (INCLUDES): Added UNICODE_CFLAGS
	and DEBUG_CFLAGS in some missing places.

	* MAINTAINERS: New file containing list of known package
	maintainers. 

	* lib/charconv.h: 
	* lib/charconv.c: Charconv versions of some common gtk calls.

	* app/sheets_dialog_callbacks.c
	(on_sheets_new_dialog_button_ok_clicked),
	(on_sheets_dialog_button_edit_clicked),
	(on_sheets_dialog_button_remove_clicked),
	(on_sheets_edit_dialog_button_ok_clicked):
	* app/sheets.c (sheets_optionmenu_create),
	(sheets_optionmenu_create): Added utf8 translations.

	* app/sheets_dialog.c: 
	* app/sheets.c: 
	* app/sheets_dialog_callbacks.c: Added some missing _()'s.

2002-05-16  Cyrille Chepelov  <cyrille@chepelov.org>

	* po/POTFILES.in: added app/sheets_dialog.c

2002-05-15  Cyrille ChÃ©pÃ©lov  <cyrille@chepelov.org>

	* lib/charconv.c: (charconv_local8_to_utf8),
	(charconv_utf8_to_local8): tweaked the warnings to get more 
	informations
	* lib/font.c: (font_get_suckfont): handled a potential case of
	uninitialised data being used (just paranoid)
	
	* objects/GRAFCET/boolequation.c: (opstring),
	(opblock_get_boundingbox), (opblock_draw),
	(boolequation_calc_boundingbox): some extra hoops needed now dia
	talks UTF8 (but gtk doesn't). More #hell. Beeek. Basically, the
	symbols can't yet be used with their proper Unicode cells, since
	gtk will demand them in the Symbol font, expressed in the local
	8-bit encoding.
	
	* samples/grafcet.dia: re-saved, now with a fixed bounding box (by
	the fix just above).

2002-05-14  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/diagram_tree.c (get_object_name): Check that name property
	doesn't have null string.

2002-05-13  Lars Clausen  <lrclause@cs.uiuc.edu>

	* autogen.sh (DIE): Added conditional --force to gettextize.

	* app/pagesetup.c (pagesetup_ok): Commented out missing Gnome
	function call.

2002-05-13  Cyrille Chepelov  <cyrille@chepelov.org>

        * RELEASE-PROCESS: added James' notes on how to properly make the
	tarball.

	* configure.in: removed macro nesting related to libpng.h, which
	was causing some problems on some systems (like mine, which made
	the snapshots bad).

	Made --enable-unicode, previously an option, the mandatory case.

	* app/Makefile.am: updated EXTRA_DIST
	
	* NEWS:
	* app/makefile.mingw:
	* dia.spec:
	* doc/en/dia-manual.sgml:
	* plug-ins/makefile.mingw:
	* configure.in: bumped up the version number to 0.90.RC1

	* lib/render_objects.[ch]:
	* po/POTFILES.in: removed render_objects from the build.

	* plug-ins/Makefile.am:
	* plug-ins/wmf/Makefile.am (new): EXTRA_DIST'ed the WMF plug-in,
	so we keep its source in the tarball.

	* objects/network/*.c, Makefile.am:
	* objects/sybase/*.c, Makefile.am:
	* po/POTFILES.in: cleaned up the non-existent files from the po
	build process.

	* plug-ins/Makefile.am: re-enabled metapost plug-in.
	
2002-05-13  Steffen Macke <sdteffen@web.de>

	* AUTHORS:
	* app/command.c: added M. C. Nelson to the Authors
	* sheets/Circuit/Makefile.am: added firewall shape to build
	* sheets/network/Makefile.am: added telephone and microphone
	  shapes to build

2002-05-13  Lars Clausen  <lrclause@cs.uiuc.edu>

	* RELEASE-PROCESS: Added list of files that contain the release
	number or should otherwise be changed at each release.

2002-05-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/UML/uml.c (uml_operation_read): Forgot to commit this
	(reported fixed) bug: POLYMORPHIC -> LEAF for default.

2002-05-12  Hans Breuer  <hans@breuer.org>

	* config.h.win32 : changed VERSION to 0.90.RC1

	* app/makefile.msc lib/makefile.msc : use renamed
	gdk-pixbuf version (same content but renamed because
	all the other gtk+ dlls are renamed) to avoid trouble
	mixing gtk versions (of which one would not 
	be initialized ...

	* app/app_procs.c : removed recently unneeded
	inclusion of "sheets.h"

	* app/render_gdk.c : removed my own debug spew
	which should never made it to cvs

	* lib/render_object.[hc] : added
	#error "File not used anymore."

	* lib/libdia.def : updated externals
 
	* app/interface.c : dropped filenames need to be
	converted from uri with Gtk+2.0

2002-05-12  Cyrille Chepelov  <cyrille@chepelov.org>

	* RELEASE-PROCESS (new): a draft document about how to release. To
	be discussed. (already with some input from Hans Breuer)

2002-05-12  Steffen Macke <sdteffen@web.de>

	* sheets/Makefile.am: re-added Misc sheet to make process
	
2002-05-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/FS/function.c: Added comments to humungous list of menu
	items, to aid translators.

2002-05-11  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* app/menus.c (display_menu_items): Added a few shortcuts for zooms.

	* app/menus.c (display_menu_items): Added a few shortcuts for zooms.

	* app/interface.c (create_toolbox): Disallow shrinking beyond
	requested size.  Fixes bug #59439, and confirms to GTK guidelines
	(see gtk_window_set_policy).
	(create_sheets): Removed now unnecessary set_usize call.

2002-05-10  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* lib/beziershape.c (remove_handles): Fixing removal of last
	segment.  Undo of removal still hokey.

2002-05-10  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/bezier_conn.c (remove_handles): Proper offset for fixing
	handles. 
	* lib/beziershape.c (beziershape_init): Removed early call to
	beziershape_update_data where points aren't set yet.
	(beziershape_add_segment): Use segment 0 instead of overflowing
	points array with segment+1.
	(beziershape_remove_segment): Proper offset for fixing
	connectionpoints. 
	(remove_handles): Proper offset.

2002-05-08  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/GRAFCET/action.c (action_update_data): Init x value of
	click point for call to connpointlist_adjust_count.

	* app/modify_tool.c (create_modify_tool): Init tool->auto_scrolled

	* app/render_pixmap.c (new_pixmap_renderer): Moved first linestyle
	setting to where values are inited.

	* lib/polyshape.c (polyshape_init): Removed call to
	polyshape_update_data that tried to use uninitialized data.

2002-05-06  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* app/sheets_dialog.c: Mass removal of //-style comments.  The
	Irix compiler doesn't like them:(  I do...

2002-05-06  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_libart.c (draw_string): Bail out when no GDK font is
	found.
	(set_font): Give error when font not found.
	(set_fillstyle): Intlized error msg.

	* app/pagesetup.c (pagesetup_ok, pagesetup_apply): Sets diagram
	modified when applied (and ok only does apply if apply is set
	sensitive).  Fixes bug #75623.

2002-05-06  Pablo Saratxaga  <pablo@mandrakesoft.com>

	* configure.in: Added Vietnamese (vi) to ALL_LINGUAS

2002-05-05  Steffen Macke <sdteffen@web.de>

	* app/Makefile.am: added $(UNICODE_CFLAGS)
	
2002-05-02  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/commands.c (help_manual_callback): Check return value of
	opendir.

	* plug-ins/xfig/Makefile.am (INCLUDES): Added DEBUG_FLAGS

	* plug-ins/xfig/xfig-import.c: Fixed misspelled Poly_L_ine, added
	checks for errors.

2002-04-30  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_gdk.c (draw_string): Extra free killed.  Thanks valgrind!

	* objects/UML/uml.c (uml_operation_read): Fix of UML default
	inheritance. 

2002-04-30  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* app/filedlg.c (file_save_as_callback, file_save_as_ok_callback):
	Added button to toggle diagram compression.

2002-04-29  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* lib/font.c: Support for loading extra kerning files, plus got
	rid of rounding errors.  Bounding box mostly perfect for freetype
	fonts.
	(font_string_width): Fudge factor to get around nonlinearity of
	font scaling.

2002-04-29  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/font.c (font_string_width): YA font calculation scheme, with
	comments.

	* objects/UML/class.c (umlclass_calculate_data): Uses the same
	font for drawing and calculating now.

	* configure.in: Added utime.h check.

	* app/render_gdk.c (draw_string): Uses gdk_draw_text_wc when in
	GTK_DOESNT_TALK_UTF8_WE_DO.  Thus it matches the string width calc.

2002-04-26  Hans Breuer  <hans@breuer.org>

	[ Instead of fixing about 70 occurances in 20 files
	  where GTK_TALKS_UTF8_WE_DONT needed to be handled
	  Dia on win32 from now on uses glib-2.0 and not 
	  only talks utf-8 with gtk-1.3 but also internally.
	  GTK_TALKS_UTF8_WE_DONT isn't supported/needed
	  anymore. ]

	* config.h.win32 : #define UNICODE_WORK_IN_PROGRESS
	#undef GTK_TALKS_UTF8_WE_DONT

	* */makefile.msc : changes to use glib-2.0 (still
	using gtk+1.3(win32-production)

	* app/disp_callbacks.c : remove GTK_TALKS_UTF8_WE_DONT,
	adapt kevent->string handling, add <string.h>
	* app/render_gdk.c (get_text_width) : the length given
	is in chars, gdk_text_width() needs bytes

	* app/render_libart.c : 
	* app/render_pixmap.c : remove GTK_TALKS_UTF8_WE_DONT
	(could simplify the same way as done in render_gdk.c)

	* app/diagram_tree.c app/paginate_gdiprint.cpp
	  app/sheets.c :
	* lib/prop_basic.c lib/prop_geomtypes.c 
	  lib/propdialgs.c lib/propobject.c :
	added <string.h> which is now removed from charconv.h

	* lib/charconv.h : optional use infrastructure from
	glib-2.0 -> only five direct function mapping left

	* lib/charconv.c : avoid to build this with glib-2.0

	* lib/font.c : no string conversion needed anymore	
	when Dia and Gtk talk utf-8, also code adaptions
	for GLIB_CHECK_VERSION(2,0,0)

	* lib/libdia.def : removed charconv functions

	* lib/prop_inttypes.c : removed GTK_TALKS_UTF8_WE_DONT,
	replace charconv_unichar_to_utf8() with g_unichar_to_utf8()

	* lib/prop_text.c lib/prop_widgets.c lib/font.c : 
	removed GTK_TALKS_UTF8_WE_DONT

	* lib/text.c : finally(?) fixed cursor <place|move>ment 
	for Umlauts. Also fixed char insertion, still wondering
	how this could ever work. Does realloc on Linux 
	initialize the memory with zeros ?

	* objects/chronogram/chronoline_event.c
	  objects/grafcet/boolequation.c :
	there is no uni_get_utf8 when building for glib-2.0.
	Replace with g_utf8_get_char() and g_utf8_next_char().

	* objects/uml/stereotype.c (bracketted_to_string) : 
	simplify while adding code for glib-2.0 build

2002-04-27  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/diagram.h: Autosave field
	* app/diagram.c (diagram_set_modified): Sets autosave field.
	
	* objects/UML/usecase.c (usecase_update_data): 
	* objects/flowchart/ellipse.c (ellipse_update_data): 
	* objects/flowchart/parallelogram.c (pgram_update_data): 
	* objects/flowchart/diamond.c (diamond_update_data): 
	* objects/custom/custom_object.c (custom_update_data): 
	* objects/UML/state.c (state_update_data): 
	* objects/UML/small_package.c (smallpackage_update_data): 
	* objects/UML/object.c (objet_update_data): 
	* objects/UML/note.c (note_update_data): 
	* objects/UML/node.c (node_update_data): 
	* objects/UML/component.c (component_update_data): 
	* objects/UML/classicon.c (classicon_update_data): 
	* objects/UML/actor.c (actor_update_data): 
	* objects/SADT/box.c (sadtbox_update_data): 
	* objects/FS/function.c (function_update_data): 
	All now update text boundaries from update_data.
	
	* lib/widgets.c (dia_font_selector_set_styles): Made the style set
	correctly. 

2002-04-26  Hans Breuer  <hans@breuer.org>

	* config.h.win32 : added VERSION definition here
	(and removed from makefile.msc's)

	* app/makefile.msc : added new files

	* app/app_procs.c (app_init): remove sheets_dialog_create()
	from start-up and ... 

	* app/sheet.c (sheets_dialog_show_callback) : ... lazy create
	sheet_dialog here when it is really needed.
	#include "../lib/message.h", make sheets_dialog_create() 
	return it's success or failing on (!custom_type_symbol). 
	Although editing shapes is nice IMHO it isn't crucial enough 
	to abort() Dia if	it isn't possible.

	* app/sheet.h : adapt create_sheet_dialog() prototype

	* app/sheets_dialog.c : add #ifdef HAVE_UNISTD_H

	* app/sheets_dialog_callbacks.c : #ifdef HAVE_UNISTD_H and
	#ifdef HAVE_UTIME_H. Otherwise #include <sys/utime.h> and
	name space corrections for utime() and utim_buf #ifdef
	G_OS_WIN32

	* lib/libdia.def : export new sheet functions

	* lib/makefile.msc : added new files

	* lib/render.c : don't put draw_bezier_with_arrows() in
	the DrawLineWithArrowsFunc slot

	* objects/custom/custom_object.c : #include <gmodule.h>
	and export 'custom_type' via G_MODULE_EXPORT

	* objects/uml/class_dialog.c : removed 'incompatible 
	types' warnings. Some refactoring while making it fit
	on screen with 800x600 again.

	* plug-ins/python/pydia-cpoint.h : add PyDiaConnectionPoint_Check

	* plug-ins/python/pydia-handle.h : extra parameter to
	PyDiaHandle_New to store the owner of the handle
	* plug-ins/python/pydia-handle.c : store handle owner
	on construction and use it in new method .connect()
	* plug-ins/python/pydia-object.c plug-ins/python/pydia-diagram.c : 
	adapt to changed prototype

2002-04-24  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/text.c (text_calc_boundingbox): Will now return early if box
	passed is NULL.

	* objects/flowchart/box.c (box_update_data): Now updates text
	width info from update_data.

2002-04-23  Steffen Macke <sdteffen@web.de>

	* plug-ins/xfig/xfig-import.c: fixed text import
	
2002-04-22  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/export_png.c: Moved dialog functions to their own file.
	* app/dialogs.[ch]: New files with standard functions for creating
	small, transient dialogs (e.g. export options).
	* app/Makefile.am: Added dialogs.[ch]

2002-04-19  Steffen Macke <sdteffen@web.de>

	* shapes/Misc/folder.*:
	* shapes/Misc/file.*:
	* shapes/Misc/Makefile.am:
	* shapes/Makefile.am:
	* sheets/Misc.sheet.in:
	* sheets/Makefile.am:
	* configure.in: added new Misc sheet containing filesystem shapes
	
2002-04-18  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/lineprops_area.c: Arrow selector in toolbox changed to use
	standard arrowdraw code.  Line is thinner to make some arrowheads
	distinguishable. 

2002-04-18  Steffen Macke <sdteffen@web.de>

	* sheets/network.sheet.in:
	* shapes/network/telephone.shape:
	* shapes/network/Makefile.am: added telephone shape
	
2002-04-16  Steffen Macke <sdteffen@web.de>

	* sheets/EML.sheet.in: commented out unavailable shapes
	
2002-04-15  M.C. Nelson <mcn@kobayashimaru.org>

	* app/sheets_dialog_callbacks.c:  Fixed segfault caused by mis-ordered
	  variable assignment.
	
2002-04-15  Steffen Macke <sdteffen@web.de>

	* plug-ins/dxf/dxf-import.c: text import works again
	* shapes/Pneumatic/Makefile.am: added compush shape
	* sheets/Pneumatic.sheet.in: commented out unavailable shapes dist33
	and dist53
	
2002-04-11  M.C. Nelson <mcn@kobayashimaru.org>

	* All these modifications are for the 'Sheets and Objects' dialog
	  (new feature):

	* app/pixmaps/line_break.xpm: new icon representing a line break.
	
	* app/pixmaps/n_a.xpm: new empty icon representing not available.

	* app/Makefile.am: added sheets_*.[ch] files to compile list.
	
	* app/menus.c: added GNOME and gtk menu items for 'Sheets and Objects'
	
	* app/sheets_dialog.c: [new file] definition of 'Sheets & Objects' dlgs

	* app/sheets_dialog.h: [new file] support for Sheets & Objects dlgs 
	
	* app/app_procs.c: added call to sheets_dialog_create() in app_init()
	
	* app/sheets_dialog_callbacks.c: [new file] callbacks for S & O dialogs

	* app/sheets_dialog_callbacks.h: [new file] support for " " "

	* app/interface.c: added 'interface_current_sheet_name' global to 
	  fill_sheet_wbox(); made fill_sheet_menu() non-static

	* app/interface.h: added extern declaration for aboves.

	* app/sheets.c: [new file] instantiation and other funcs for S & O dlgs

	* app/sheets.h: [new file] declarations for backing store structures

	* lib/sheet.c: modification of new_sheet() parameters; introduction
	  of USER and SYSTEM scope for sheets; procedure for sorting sheets;
	  changes to load_register_sheet().

	* lib/sheet.h: added 'user_data_type' field to SheetObject structure;
	  added 'has_icon_on_sheet' flag to SheetObject structure; added 
	  'filename', 'scope', 'shadowing' fields to Sheet structure.

	* lib/plug-ins.c: moved _PluginInfo declaration to header file where
	  it belongs.

	* lib/plug-isn.h: see above.

	* lib/object.c: added 'sheet.h' to include list; added several 
	  functions
	  to detect objects which are not found on any sheet (for future use)
	  object_type_detect_nosheet_callback(), object_types_detect_nosheet(),
	  object_type_get_sheet_name(), object_type_strip_sheet_from_name().

	* lib/object.h: added public declarations for above functions where
	  necessary.

	* objects/custom/custom.c: made custom_object_load() non-static so we
     	  can load and interpret .shape files from the Sheets & Objects dialog

     	* objects/custom/custom_object.c: made 'custom_type' non-static so 
     	  we can differentiate between SVG shapes and other types.a

2002-04-07  Hans Breuer  <hans@breuer.org>

	* app/object_ops.c (object_list_align_v): Fix the 'Leak fix'
	from 2002-01-22 to not destroy diagram->data->selected. 
	Avoids to crash on Objects/Align/Vertical/Top

	* app/render_eps.c (draw_string) : un-const buffer
	It isn't at all const (g_malloc(), assignment, g_free()).
	Doesn't gcc catch such ?

	* lib/arrows.h : prototype calculate_arrow_point()

	* lib/font.c (font_get_suckfont) : no need to
	special case gdk_draw_string() with GTK_TALKS_UTF8,
	cause all the parameter differences are handled above

	* lib/libdia.def : updated externals

	* lib/makefile.msc : removed string_prerenderer, added render

	* lib/render.c (draw_rect) : don't pass a Point** if a Point*
	is expected. [Sometimes it's good to read compiler warnings.]

	* objects/standard/image.c : simplified by use of g_strconcat()

	* plug-ins/python/makefile.msc : updated for Python 2.2

2002-04-03  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/zigzagline.c (zigzagline_draw): Fixed
	directionality problem for zero-length line segments.

2002-03-28  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/diagram.c (diagram_ungroup_selected) 
	(diagram_update_menu_sensitivity): Now allows ungrouping of
	several groups at once.

2002-03-15  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/render.c, all renderers: Binary incompatibility, change to
	expandable renderops structure.

2002-03-15  Steffen Macke <sdteffen@yahoo.com>

	* objects/standard/Makefile.am:
	* objects/network/Makefile.am:
	* objects/UML/Makefile.am:
	* objects/ER/Makefile.am:
	* objects/FS/Makefile.am:
	* objects/flowchart/Makefile.am:
	* objects/custom/Makefile.am:
	* objects/GRAFCET/Makefile.am:
	* objects/chronogram/Makefile.am:
	* objects/SADT/Makefile.am:
	* plug-ins/cgm/Makefile.am:
	* plug-ins/pstricks/Makefile.am:
	* plug-ins/hpgl/Makefile.am:
	* plug-ins/wpg/Makefile.am:
	* plug-ins/svg/Makefile.am:
	* plug-ins/shape/Makefile.am: added $(UNICODE_CFLAGS)
	
2002-03-13  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c: Support for dumping TrueType fonts (taken from
	ttfps).

2002-03-12  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/render.c: New abstract super class for renderers.

2002-03-07  Akira TAGOH  <tagoh@redhat.com>

	* objects/ER/attribute.c (attribute_save): save a font property.
	(attribute_load): load a font property, and if can't load it, it's
	initialized.

	* objects/ER/entity.c (entity_save): save a font property.
	(entity_load): load a font property, and if can't load it, it's
	initialized.

	* objects/ER/relationship.c (relationship_save): save a font property.
	(relationship_load): load a font property, and if can't load it, it's
	initialized.

	* objects/UML/class.c (fill_in_fontdata): don't replace if it already
	has a vaule.
	(umlclass_save): save the font and the font size properties.
	(umlclass_load): load the font and the font size properties.

2002-03-05  Cyrille Chepelov  <cyrille@chepelov.org>

	* lib/string_prerenderer.[ch] (REMOVED):
	* lib/render.h:
	* lib/diagramdata.c:
	* lib/Makefile.am:
	* app/render_eps.c: got rid of the string-specific string
	prerenderer, transitioned its functionality towards Lars'
	two-phase rendering

2002-03-05  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in: Using Freetypes own check for ver >= 1.0.5.  You
	may need to rerun aclocal.

2002-03-04  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/font.c: First attempt at Unicodeness for Freetype.

2002-03-02  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* lib/font.c (font_string_width): Fixed font_string_width for
	freetype.  BB is now almost right.

2002-03-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.h: 
	* app/paginate_psprint.c (paginate_psprint): 
	* lib/font.c: 
	* app/render_eps.c: Support for dumping postscript fonts into
	postscript files with freetype.  Fairly primitive, but works.
	Unicode version may have problems.

2002-02-28  Akira TAGOH  <tagoh@redhat.com>

	* objects/UML/class_dialog.c (class_read_from_dialog)
	(class_fill_in_dialog), (class_create_page): add the font selector and
	the font size selector.

	* objects/UML/class.c (umlclass_draw): uses each font_height.
	(umlclass_calculate_data): ditto.
	(fill_in_fontdata): add initial value of new font_height.
	(umlclass_copy): add new font_height.

2002-02-27  Cyrille Chepelov  <chepelov@calixo.net>

	Patch from Geoff Gerrietts <ggerrietts@yahoo.com>:
	
	* lib/font.c: calculate font metrics properly and stop guessing at
	string widths.

2002-02-28  Akira TAGOH  <tagoh@redhat.com>

	* configure.in: changed gtk_advancement value to dia_talks_utf8.
	right now Dia is working with UTF-8 internally. it means Dia probably
	support most languages also including the languages which heretofore
	didn't work correctly.

2002-02-26  Akira TAGOH  <tagoh@redhat.com>

	* objects/FS/function.c: add related text properties.
	(function_get_props), (function_set_props): add handling attribute.

	* objects/FS/flow.c: add related text properties.
	(flow_get_props), (flow_set_props): add handling attribute.

	* objects/FS/flow-ortho.c: add related text properties.
	(orthflow_set_props), (orthflow_get_props): add handling attribute.

	* objects/ER/relationship.c: add PROP_STD_TEXT_FONT to property.

	* objects/ER/entity.c: ditto.

	* objects/ER/attribute.c: ditto.

2002-02-26  Cyrille Chepelov  <cyrille@chepelov.org>

	Patch contributed by Geoff Gerrietts <ggerrietts@yahoo.com>:
	
	* autogen.sh: add a check for missing intltoolize.

2002-02-20  Akira TAGOH  <tagoh@redhat.com>

	* lib/ps-utf8.c (unicode_to_ps_name): if this function calls with same
	charcode, it was registered the duplicate item to HashTable. fix.

	* app/render_gnomeprint.c (get_width_string): add new function.
	(draw_string): fix non-multibyte specific code.

2002-02-19  Cyrille Chepelov  <cyrille@chepelov.org>

	Patch contributed by Matthieu Sozeau <mattam@netcourrier.com>:
	
	* lib/font.c: do not try to search paths that do not begin with
	'/', like X Font Server addresses.
        
	* objects/UML/message.c (message_draw): free mname when not 
	message->text but CREATE or DESTROY.
        
	* objects/UML/uml.h:
	* objects/UML/uml.c:
	* objects/UML/class_dialog.c: added code to handle a stereotype 
	attribute for operations.

2002-02-19  Akira TAGOH  <tagoh@redhat.com>

	* lib/Makefile.am: add LIBART_CFLAGS.

2002-02-15  Hans Breuer  <hans@breuer.org>

	* lib/font.c (font_get_suck_font): the black and white pixel values 
	need to be taken from a 1 bit colormap rather than the default colormap.
	(fixed again, last time was 2000-05-26)

	Also handle the case where GTK_TALKS_UTF8 and expects all strings
	passed in to be in this encoding.

	* lib/libdia.def : export suck_font_free()

	* lib/text.c (text_draw) : avoid circular dependency to ../app
	at least for the !USE_XIM case, where it is unnecessary.

2002-02-15  Cyrille Chepelov  <cyrille@chepelov.org>

	Changes contributed by Matts Kivik <kivik@firstlinux.net>:
	
	* shapes/Circuit/microphone_de.(shape|xpm) (NEW):
	* sheets/Circuit.sheet.in: added new shape microphone
	* shapes/Circuit/speaker_de.shape: Added a connection point.
	
2002-02-13  Akira TAGOH  <tagoh@redhat.com>

	* app/render_libart.c (draw_string): fixed build issue for Win32.

	* lib/font.c (font_get_suckfont): fixed typo. it could't build under
	Win32.

	* configure.in: fixed testing gtk_advancement.

	* app/render_gnomeprint.c (draw_string): uses utfchar instead of char.

2002-02-12  Akira TAGOH  <tagoh@redhat.com>

	* lib/text.c (text_draw): fixed XIM position, when menubar is shown for
	diagram window.

2002-02-11  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/group.c (group_copy): Made new object properly initialized
	before copy.

2002-02-11  Steffen Macke <sdteffen@yahoo.com>

	* app/Makefile.am: added plug-ins to DIA_LIB_PATH in run_dia.sh
	
2002-02-10  Akira TAGOH  <tagoh@redhat.com>

	* lib/text.c (text_draw): fixed XIM transaction.

	* app/interface.c (create_display_shell): add signal for
	size_allocate.

	* app/disp_callbacks.c (ddisplay_size_allocate): add new function for
	XIM transaction.
	(set_input_dialog): remove.
	(ddisplay_canvas_events): remove XIM transaction. it can't transact
	correctly on this function.

2002-02-10  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* app/app_procs.c:
	* app/export_png.c: Added checks for interactivity (maybe this
	should be a hook after all?).

	* app/filedlg.c (file_export_callback): Made export dialog add
	suffix when reopened.

	* app/export_png.c: Added dialog asking for export size.

2002-02-09  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* lib/widgets.c: Fixed font reselection problem and first font
	bogus warning.

	* objects/UML/actor.c (actor_update_data): Changed to have
	connection points below text.

2002-02-08  Akira TAGOH  <tagoh@redhat.com>

	* lib/text.c (text_split_line): use g_strndup() instead of g_malloc()
	and memcpy().

2002-02-07  Akira TAGOH  <tagoh@redhat.com>

	* lib/font.c (font_get_suckfont): rewrited. generating suckfont from
	strings which is given.
	(suck_font): remove. it's any longer needed.

	* app/render_libart.c (set_font): don't get suckfont.
	(draw_string): get suckfont only which is needed for now.

2002-02-05  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* lib/text.c: Fixes for misunderstood width functions.

2002-02-05  Hans Breuer  <hans@breuer.org>

	* lib/dia_xml.c : use g_strconcat() instead of 
	malloc, strcpy, strcat dance
	* app/properties.c : same here and plug memory leak
	(gtk functions don't eat strings)

	* objects/UML/message.c : there is no g_sprintf()
	use g_strdup_printf() instead ...

2002-02-05  Akira TAGOH  <tagoh@redhat.com>

	* lib/message.c (gtk_message_internal): doesn't need to convert to
	UTF-8.

	* app/render_libart.c (draw_string): fixed transaction for UTF-8
	support.
	(get_text_width): ditto.

	* app/Makefile.am (EXTRA_DIST):
	s/paginate_gdiprint.c/paginate_gdiprint.cpp/

	* app/render_gdk.c (gdk_freetype_copy_glyph): fixed build issue.
	This function needs ifdef HAVE_FREETYPE because don't use it for
	--disable-freetype

2002-02-04  Cyrille Chepelov  <cyrille@chepelov.org>

	* NEWS: updated with the new dependencies.
        
	Patch from Matthieu Sozeau <mattam@netcourrier.com>:

        * objects/UML/class.h:
        * objects/UML/class.c:  
        * objects/UML/class_dialog.c: added code to handle the UMLParameterKind
        property using a GtkMenu. Options are Undefined, In, Out, In & Out

2002-02-04  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_libart.c: Slow but working libart freetype renderer,
	with color!

2002-02-03  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* app/render_gdk.c (draw_string): Fixed gc_function bug.

	* lib/widgets.c (dia_font_selector_init): Sorts the font list.

	* lib/font.c (freetype_render_string): 
	* lib/font.h:
	* app/render_gdk.c:
	* app/render_gdk.h: Changed freetype_render_string to use
	callback.  Rendering is broken.

2002-02-03  Cyrille Chepelov  <cyrille@chepelov.org>

	Patch from Matthieu Sozeau <mattam@netcourrier.com>:

	* objects/UML/uml.h:    
	* objects/UML/uml.c: added UMLInheritanceType and isQuery
	(constant) UML Operation attributes. UMLInheritanceType is either
	UML_ABSTRACT or UML_POLYMORPHIC  or UML_LEAF.
 
        * objects/UML/class.h:
	* objects/UML/class.c:  
	* objetcs/UML/class_dialog.c: added code to handle new
	UMLOperation attributes via a GtkMenu and a checkbox.

2002-02-03  Akira TAGOH  <tagoh@redhat.com>

	* app/disp_callbacks.c (ddisplay_realize): fixed XIM issue.
	several client doesn't work with previous codes.

2002-02-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/font.c (freetype_render_string): Kerning.  Very few fonts
	seem to use it.

2002-02-02  Akira TAGOH  <tagoh@redhat.com>

	* app/disp_callbacks.c (ddisplay_canvas_events): fixed crashes,
	when doing the operation like invert the objects after active view is
	destroyed. when changes focus, it needs to set active_display.

	* app/layer_dialog.c (dia_layer_update_from_layer):
	(layer_dialog_edit_layer): need to convert to locale encoding
	if GTK_DOESNT_TALK_UTF8_WE_DO is defined.
	(edit_layer_ok_callback):
	need to convert to UTF8 if GTK_DOESNT_TALK_UTF8_WE_DO is defined.

	* lib/diagramdata.c (new_diagram_data): ditto.

	* app/layer_dialog.c (layer_dialog_new_callback): ditto.

	* lib/diagramdata.c (new_layer): use utfchar instead of char for
	argument.

	* lib/widgets.c: if HAVE_FREETYPE isn't defined, it can't build. fixed.
	(dia_font_selector_set_styles): when HAVE_FREETYPE is defined only,
	it's needed for now. also this function needs prototype declaration.

2002-01-31  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/widgets.c: Style now functional on font selector.  Some leak
	possible, but doesn't show up under stress test.

2002-01-31  Akira TAGOH  <tagoh@redhat.com>

	* app/plugin-manager.c (clist_select_row): name and description needs to
	convert to locale encoding, when GTK_DOESNT_TALK_UTF8_WE_DO is defined.
	(get_plugin_manager): ditto.

	* lib/plug-ins.c (dia_plugin_info_init): name needs to convert to UTF-8.

	* app/diagram_tree.c (get_object_name): fixed transaction for UTF-8
	support.

	* lib/prop_text.c (stringprop_reset_widget): fixed crashes,
	when prop->string_data is NULL.

2002-01-30  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* lib/widgets.c: 
	* lib/widgets.h: New font selector separating font and style.
	Style not functional yet.

2002-01-30  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/text.c: 
	* app/render_gdk.c (draw_string): More freetype support, now
	renders text.  Still broken is font selection and exporting.

2002-01-30  Akira TAGOH  <tagoh@redhat.com>

	* objects/chronogram/chronoref.c (chronoref_create): missing gettextize
	for font.

	* objects/chronogram/chronoline.c (chronoline_create): ditto.

	* objects/UML/usecase.c (usecase_create): ditto.

	* objects/UML/state.c (state_create): ditto.

	* objects/UML/object.c (objet_create): ditto.

	* objects/UML/node.c (node_create): ditto.

	* objects/UML/message.c (message_create): ditto.

	* objects/UML/component.c (component_create): ditto.

	* objects/UML/classicon.c (classicon_create): ditto.

	* objects/UML/actor.c (actor_create): ditto.

	* objects/SADT/box.c (sadtbox_create): ditto.

	* objects/SADT/annotation.c (annotation_create): ditto.

	* objects/GRAFCET/transition.c (TRANSITION_FONT): ditto.

	* objects/GRAFCET/step.c (STEP_FONT):
	* (step_create): ditto.

	* objects/GRAFCET/condition.c (CONDITION_FONT): ditto.

	* objects/GRAFCET/action.c (ACTION_FONT):
	(action_create): ditto.

	* objects/FS/function.c (function_create): ditto.

	* objects/FS/flow.c (flow_create):
	(flow_load): 
	(flow_apply_defaults): ditto.

	* objects/FS/flow-poly.c (flow_create):
	(flow_load):
	(flow_apply_defaults): ditto.

	* objects/FS/flow-ortho.c (orthflow_create):
	(orthflow_load):
	(orthflow_apply_defaults): ditto.

	* objects/ER/relationship.c: use utfchar instead of char for structure.
	(relationship_create): name needs to convert to UTF-8.

	* objects/ER/attribute.c: use utfchar instead of char for structure.
	(attribute_create): name needs to convert to UTF-8.

	* objects/ER/entity.c: use utfchar instead of char for structure.
	(entity_create): name needs to convert to UTF-8.

	* app/interface.c (fill_sheet_wbox): needs to convert UTF-8 to locale
	encoding for tooltips, if GTK_TALKS_UTF8 isn't defined.
	(fill_sheet_menu): needs to convert UTF-8 to locale encoding for menu
	items. if GTK_TALKS_UTF8 isn't defined.

2002-01-29  Akira TAGOH  <tagoh@redhat.com>

	* objects/UML/class.c (umlclass_calculate_data): fixed malloc size.
	it was my careless mistake...

	* lib/attributes.c (attributes_set_default_font): temporarily gettextize
	a font name, because there are strings which isn't shown by "Courier".
	We need to consider a way to feel free to choose a font at runtime.

	* lib/render_object.c (render_object_load): ditto.

	* lib/text.c (data_text): ditto.

	* objects/EML/instantiation.c (instantiation_create): ditto.

	* objects/EML/interaction-ortho.c (interaction_ortho_create):
	(interaction_ortho_load): ditto.

	* objects/EML/interaction.c (interaction_create):
	(interaction_load): ditto.

	* objects/EML/process.c (fill_in_fontdata): ditto.

	* objects/ER/attribute.c (attribute_create): 
	(attribute_load): ditto.

	* objects/ER/entity.c (entity_create): 
	(entity_load): ditto.

	* objects/ER/relationship.c (relationship_create): 
	(relationship_load): ditto.

	* objects/UML/association.c (association_create): 
	(association_load): ditto.

	* objects/UML/class.c (fill_in_fontdata): ditto.

	* objects/UML/constraint.c (constraint_create): ditto.

	* objects/UML/dependency.c (dependency_create): ditto.

	* objects/UML/generalization.c (generalization_create): ditto.

	* objects/UML/implements.c (implements_create): ditto.

	* objects/UML/large_package.c (largepackage_create): ditto.

	* objects/UML/note.c (note_create): ditto.

	* objects/UML/realizes.c (realizes_create): ditto.

	* objects/UML/small_package.c (smallpackage_create): ditto.

	* objects/custom/shape_info.h (FONT_DEFAULT): ditto.

	* objects/custom/custom_object.c (custom_create): ditto.

	* objects/network/antenna.c (render_to_store): ditto.

	* objects/network/computer.c (render_to_store): ditto.

	* objects/network/disc.c (render_to_store): ditto.

	* objects/network/flash.c (render_to_store): ditto.

	* objects/network/hub.c (render_to_store): ditto.

	* objects/network/modem.c (render_to_store): ditto.

	* objects/network/modularswitch.c (render_to_store): ditto.

	* objects/network/monitor.c (render_to_store): ditto.

	* objects/network/printer.c (render_to_store): ditto.

	* objects/network/rj45plug.c (render_to_store): ditto.

	* objects/network/scead-plug.c (render_to_store): ditto.

	* objects/standard/textobj.c (textobj_load): ditto.

	* objects/sybase/client.c (render_to_store): ditto.

	* objects/sybase/dataserver.c (render_to_store): ditto.

	* objects/sybase/ltm.c (render_to_store): ditto.

	* objects/sybase/repserver.c (render_to_store): ditto.

	* objects/sybase/rsm.c (render_to_store): ditto.

	* objects/sybase/stableq.c (render_to_store): ditto.

	* plug-ins/dxf/dxf-import.c (read_entity_text_dxf): ditto.

	* objects/UML/uml.h (UML_STEREOTYPE_START):
	(UML_STEREOTYPE_END): changes default strings.

2002-01-28  Akira TAGOH  <tagoh@redhat.com>

	* objects/UML/stereotype.c (string_to_bracketted): fixed transaction
	for UTF-8 support. if GTK+ and Dia don't handle UTF-8, all of characters
	which is given to arguments isn't UTF-8. so don't need to convert it.
	if GTK+ handle UTF-8, also don't need to convert it.
	(strend): remove.
	(bracketted_to_string): fixed transaction for UTF-8 support.
	also start/end bracket is not necessarily 1 character. so that when use
	strend(), it doesn't work correctly.
	(string_to_stereotype): use utfchar instead of char.
	(remove_stereotype_from_string): ditto.
	(stereotype_to_string): ditto.

	* objects/UML/stereotype.h: ditto.

	* objects/UML/message.c: use utfchar instead of char for structure.
	(MESSAGE_CREATE_LABEL, MESSAGE_DESTROY_LABEL): remove.

	* objects/UML/small_package.c: use utfchar instead of char for structure.

	* objects/UML/realizes.c: ditto.

	* objects/UML/object.c: ditto.

	* objects/UML/large_package.c: ditto.

	* objects/UML/implements.c: ditto.

	* objects/UML/generalization.c: ditto.

	* objects/UML/dependency.c: ditto.

	* objects/UML/constraint.c: ditto.

	* objects/UML/component.c: ditto.

	* objects/UML/class_dialog.c (attributes_get_current_values):
	(attributes_list_new_callback, attributes_fill_in_dialog):
	(parameters_set_values, parameters_get_values):
	(parameters_get_current_values, parameters_list_new_callback):
	(operations_set_values, operations_get_values):
	(operations_get_current_values, operations_list_new_callback):
	(operations_fill_in_dialog, templates_set_values):
	(templates_get_values, templates_get_current_values):
	(templates_list_new_callback, templates_fill_in_dialog):
	fixed transaction for UTF-8 support.

2002-01-27  Akira TAGOH  <tagoh@redhat.com>

	* objects/UML/message.c (message_draw): fixed transaction for UTF-8 support.

	* objects/UML/class_dialog.c (class_read_from_dialog):
	(class_fill_in_dialog):
	(attributes_get_values): ditto.

	* objects/UML/actor.c (actor_create): ditto.

	* objects/UML/class.c (umlclass_calculate_data): ditto.

	* objects/UML/association.c (association_apply_properties):
	(fill_in_dialog): ditto.

	* objects/UML/uml.c (uml_get_attribute_string):
	(uml_get_operation_string):
	(uml_get_parameter_string):
	(uml_get_formalparameter_string): use utfchar instead of char.

	* objects/UML/uml.h: gettextize UML_STEREOTYPE_START and
	UML_STEREOTYPE_END.

	* objects/UML/class.h: use utfchar instead of char.

	* lib/dia_xml.c (data_add_string): ditto.

	* lib/text.c (text_insert_char): fixed characters# calculation
	when includes multibytes character in strings.

2002-01-26  Steffen Macke  <sdteffen@yahoo.com>

	Patch from Richard Rowell <rwrowell@bellsouth.net>:

	* app/lineprops_area.c:
	* lib/arrows.h:
	* lib/arrows.c: 
	* lib/widgets.c: added crow foot arrow and cross arrow
	
	Patch from Frank Gevaerts <frank.gevaerts@fks.be>:
	
	* plug-ins/svg/render_svg.c: fixed arcs, fill and text alignment

2002-01-26  Cyrille Chepelov  <cyrille@chepelov.org>

	* po/update.pl (REMOVED):
	* po/update.sh (REMOVED):
	* xml-i18n-merge.in.kg (REMOVED):
	* xml-i18n-update.in.kg (REMOVED):
	* sheets/Makefile.am:
	* Makefile.am:
	* autogen.sh:
	* configure.in: converted from xml-i18n-tools to intltools

	This looks like it fixes the build bugs of the snapshot tarballs, 
	and it supersedes #69611.	

2002-01-25  Akira TAGOH  <tagoh@redhat.com>

	* lib/text.c (text_insert_char): fixed characters# calculation.
	it's not string length.

	* lib/plug-ins.c (dia_plugin_info_init): when GTK_DOESNT_TALK_UTF8_WE_DO
	is defined, needs to convert a description to UTF-8.

	* app/render_gdk.c (get_text_width): fixed transaction for
	UTF-8 support. also should uses gdk_text_width_wc() instead
	of gdk_text_width().

	* app/render_gdk.c (draw_string): when GTK_DOESNT_TALK_UTF8_WE_DO
	is defined, needs to convert to locale encoding for display.
	Also use utfchar instead of char for argument.

2002-01-24  Hans Breuer  <hans@breuer.org>

	* app/commands.c(edit_paste_callback and more) : 
	call diagram_modified(ddisp->diagram) to fix #68083
	(help_menu_callback) : plug a DIR leak

	* app/disp_callbacks.c(ddisplay_canvas_events) : handle 
	GTK_TALKS_UTF8_WE_DONT

	* app/render_gdk.c(get_text_with) : it's a bad idea to use
	gdk_string_with() when GTK_TALKS_UTF8_WE_DONT instead of
	gdk_text_width(). The length value is still questionable ...

	* lib/charconv.c : use functions already available in early
	GLIB-1.3 days whiches API hasn't changed since, to avoid
	version problems with the win32 build

	* lib/font.c : finally fix #58045 and #68208

	* lib/dia_xml.c (xmlDiaSaveFile) : gzdopen in binary mode

2002-01-24  Akira TAGOH  <tagoh@redhat.com>

	* app/disp_callbacks.c (ddisplay_canvas_events): when event returned
	no strings, fixed transaction.

	* lib/charconv.h: fixed typo.

	* app/menus.c: fixed typo.

	* lib/charconv.c (charconv_utf8_strchr): remove. use uni_strchr instead.

	* objects/UML/object.c: attrib's type uses utfchar instead of char.

	* app/disp_callbacks.c (ddisplay_canvas_events): forget g_free()

	* lib/text.c (text_create_change): use unichar instead of char.

	* lib/text.c (data_add_text, data_text, apply_textstr_properties):
	use utfchar instead of char.

	* lib/text.c (text_insert_char, text_key_event): fixed transaction for
	UTF-8 support.

	* lib/charconv.c (charconv_utf8_get_char): add new function.

2002-01-23  Akira TAGOH  <tagoh@redhat.com>

	* lib/text.c (text_delete_forward, text_delete_backward,
	text_split_line): fixed transaction for UTF-8 support.

	* lib/text.c (text_copy): when UNICODE_WORK_IN_PROGRESS is defined,
	strlen[] has string length for UTF-8, so has to use alloclen[].

	* dia.pot: remove.

	* .cvsignore: add dia.pot.

2002-01-24  Stanislav Visnovsky  <visnovsky@nenya.ms.mff.cuni.cz>

	* configure.in: Added "sk" to ALL_LINGUAS.

2002-01-22  Akira TAGOH  <tagoh@redhat.com>

	* lib/text.c (text_set_string, new_text, text_copy,
	text_get_string_copy, text_join_lines): use utfchar instead of gchar
	for strings.

	* lib/text.c (set_string): use charconv_utf8_strchr() instead of
	strchr().

	* lib/charconv.c (charconv_utf8_strchr): add new function.

	* lib/charconv.c (charconv_keyval_to_unicode): ditto.

	* lib/charconv.c (charconv_utf8_from_gtk_event_key): ditto.

	* app/disp_callbacks.c (ddisplay_canvas_events): needs to convert
	strings to the appropriate encoding.

2002-01-22  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/object_ops.c (object_list_align_[hv]): Leak fix.

	* lib/Makefile.am (INCLUDES): Added debug flags.

	* app/object_ops.c: Fixed ordering problem of align equi-distant &
	adjacent. 

2002-01-21  Akira TAGOH  <tagoh@redhat.com>

	* lib/font.c (font_string_width): use gdk_text_width_wc() instead of
	gdk_string_width().

	* objects/GRAFCET/boolequation.c: fixed invalid comment.

	* objects/UML/stereotype.c (string_to_bracketted): fixed build problem
	when defined UNICODE_WORK_IN_PROGRESS.

	* lib/dia_xml.c (data_add_string): fixed typo.

2002-01-20  Akira TAGOH  <tagoh@redhat.com>

	* configure.in: fixed test gtk_advancement.

2002-01-019  Steffen Macke  <sdteffen@yahoo.com>

	* plug-ins/svg/render_svg.c: fix for #69053, alignment of text
	exported to SVG

	Patch from M.C. Nelson <mcn@mani.kobayashimaru.org>: 

	* app/recent_files.[ch]: reworked to support GNOME, accelerators,
	tool tips, preferences, and arbitrarily long ~/.dia/history

	* app/menus.c: made 'Plugins' consistantly spelled and accelerated;
	removed 'Open Recent'; added new separators for recent documents on
	File menu.

	* app/interface.[ch] (interface_get_toolbox_shell): new function

	* app/diagram.c: added new parameter to recent_file_history_add() call

	* app/preferences.[ch]: added new 'Recent documents list size'
	preferences item
	
2002-01-18  Akira TAGOH  <tagoh@redhat.com>

	* lib/font.c (font_get_gdkfont_helper): use gdk_fontset_load ().
	if it failed, should be used gdk_font_load ().

	* lib/font.c (font_data): added the font entries for CJK.

2002-01-17  Steffen Macke  <sdteffen@yahoo.com>

	Patch from M.C. Nelson <mcn@mani.kobayashimaru.org>:

	* app/menus.c: replaced GDK_F1 with "F1" to fix segfault on startup
	
2002-01-04  Cyrille Chepelov  <cyrille@chepelov.org>

	Patch from Martin Cracauer <cracauer@cons.org>:
	
	* app/menus.c: add missing #include <gdk/gdkkeysyms.h> (useful in the
	non-GNOME case ?)

2002-01-01  Hans Breuer  <hans@breuer.org>

	* app/command.c : optional use GDI printing on windoze

	* app/preferences.[hc] : add option 'prefer_psprint' to 
	select the print engine to use (could be used for Dia/Gnome
	as well)

	* app/paginate_gdiprint.(h|cpp) : new files, which interlink the
	wmf plug-in with the common win32 print api. Now printing
	should work almost as expected from a windows program :-)

	* app/diagram.c app/menus.[hc] : rename _UpdatableMenuItems.delete
	to .edit_delete to avoid clashes with C++

	* app/makefile.msc : updated for GDI printing

	* plug-ins/wmf/wmf.cpp : some small modifications to support
	GDI printing. Also swap R and B channel in draw_image()

	* app/makefile.am : added windows only files to EXTRA_DIST

	* objects/uml/class.c(umlclass_set_props) : force recalculation
	when applying properties

	* lib/charconv.c lib/dia_xml.c : temporary back-ported to
	glib-1.3.2 (for win32) IMHO causes recent cvs introduces too
	many incompatible changes (and would force a gtk update)

	* objects/makefile.msc : don't build C-Objects which are
	already available as 'pure shape'

	* plug-ins/makefile.msc : remove diaimport from build. It was
	only available via mailing-list and is broken since the
	StdProp overhaul.


	Patch from Jose A Ortega Ruiz  <jaortega@acm.org>

	* app/preferences.[hc] : tweaked preferences.c to make 
	PREF_STRING work. Use it for 'diagram_tree_hidden'. Also
	added some more DiagramTree prefererences and their own
	notebook page.

	* app/diagram_tree.[hc] : allow to sort by object type or name
	and hide by type ...
	* app/diagram_tree_menu.[hc] : ... add respective menu entries ...
	* app/diagram_tree_menu_callbacks.[hc] : ... and callbacks.

	* app/diagram_tree_window.c : handle hidden types and window
	size restoring.

2001-12-20  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/Makefile.am : patch from Peter Moulder 
	<pmoulder@csse.monash.edu.au> to make the python plug-in
	compile on *nix too.
 
2001-12-03  Cyrille Chepelov  <chepelov@calixo.net>

	Patch from Alan <horkana@tcd.ie>:

	* app/menus.c: bind the F1 shortcut to the Help/_Manual function.

2001-11-20  Hans Breuer  <hans@breuer.org>

	* app/makefile.msc : add new diagram_tree_menu(_callbacks).obj

2001-11-18  Jose A Ortega Ruiz  <jaortega@acm.org>

	* app/diagram_tree.[hc] : Added new functions and types for
	sorting diagram and objects, and attaching the popup menus.

	* app/preferences.h: Added more diagram tree preferences, using a
	DiagramTreeConfig struct in DiaPreferences. The new prefs are the
	height and width of the diagram tree window and the default sort
	orders for diagrams and objects.

	* app/preferences.c (prefs_data): Added new entries for the new
	diagram tree preferences.

	* app/preferences.c (prefs_tabs): New tab for diagram tree
	preferences.

	* app/diagram_tree_window.[hc] (create_diagram_tree_window): 
	* app/diagram_tree_window.c (diagram_tree_window_new): 
	* app/interface.c (create_tree_window): The diagram tree window is
	initialised using the DiagramTreeConfig part of prefs.


2001-11-14  Jose A Ortega Ruiz  <jaortega@acm.org>

	* app/diagram_tree_menu.[hc]: New files. Functions to create the
	diagram tree popup menus.

	* app/diagram_tree_menu_callbacks.[hc]: New files. Callbacks for
	the diagram tree popup menus.

	* app/Makefile.am (dia_core_files): diagram_tree_menu* files
	added.

2001-11-13  Jose A Ortega Ruiz  <jaortega@acm.org>

	* app/diagram_tree.c (double_click_callback, diagram_tree_new):
	double-clicking a diagram tree node raises the diagram window
	to the foreground (and, if a object node was clicked, selects the
	object in the diagram).

	* app/diagram_tree.c (select_tree_widget): selecting an object
	node with single click simply updates it (no raise).

2001-11-08  Jose A Ortega Ruiz  <jaortega@acm.org>
        These changes make the diagram tree lazy: it is not created unless
	the diagram tree window is requested.
	
	* app/diagram_tree_window.[hc] (create_diagram_tree_window): new
	function for creating the tree window.

	* app/interface.c (create_tree_window): call
	create_diagram_tree_window() instead of diagram_window().

	* app/diagram_tree.c (diagram_tree_add, diagram_tree_remove) 
	(diagram_tree_update, diagram_tree_update_name) 
	(diagram_tree_add_object, diagram_tree_add_objects) 
	(diagram_tree_remove_object, diagram_tree_remove_objects) 
	(diagram_tree_update_object): accept a NULL tree as a nominal
	argument (and do nothing in this case!), so that the diagram tree
	is not initialised if not used.

	* app/diagram_tree_window.c (diagram_tree): do not create the
	diagram tree until diagram_window() or diagtree_show_callback()
	are invoked.

2001-10-31  Jose A Ortega Ruiz  <jaortega@acm.org>
	[slightly modified and applied from Hans Breuer <hans@breuer.org>]

	* app/diagram_tree_window.[hc] : (new files) implementation of 
	the diagram tree window, a container for a diagram tree. [Removed
	the horizontal scroll bar glitch by disableing it]

	* app/diagram_tree.[hc] : (new files) implementation of the 
	diagram tree widget. [Don't rely on the layers GPtrArray to be
	NULL terminated, but use its ->len field] 

	* app/Makefile.am (dia_core_files): added new files
	diagram_tree.[hc] and diagram_tree_window.[hc]

	* app/interface.[hc] : (create_tree_window): this function 
	creates the new diagram tree window widget

	* app/undo.c (delete_objects_apply) (delete_objects_revert) 
	(insert_objects_apply) (insert_objects_revert) (group_objects_apply) 
	(ungroup_objects_apply) (ungroup_objects_revert): 
	every time that an undoable command modifies a diagram 
	adding/removing/(un)grouping objects, a diagram_tree_something() is 
	invoked to keep the diagram tree window in sync

	* app/properties.c (properties_apply): call to
	diagram_object_modified(), which updates the diagram tree window
	when the properties of an object are modified

	* app/preferences.[hc] : new "show_diagram_tree" configuration option 
	(whether the diagram tree window should be shown on dia startup)

	* app/menus.c : added '<Toolbox>/File/Diagram Tree' entry

	* app/diagram.h (diagram_object_modified): callback notifying of a
	diagram object modification

	* app/diagram.c (diagram_load_into): added call to
	diagram_tree_add() to add newly loaded diagrams to the diagram
	tree window
	(diagram_destroy): call to diagram_tree_remove() to remove a
	destroyed diagram from the diagram tree window
	(diagram_add_object): call to diagram_tree_add_object() to add an
	object to the diagram tree window
	(diagram_add_object_list): as above, but with an object list
	(diagram_selected_break_external): deletion of objects from the
	diagram is detected here, and diagram_tree_remove_object() is
	invoked to remove the object from the diagram tree window (it
	would be nice to have a diagram_remove_object() in the Diagram
	interface)
	(diagram_set_filename): update the diagram tree window when a
	diagram's filename changes

	* app/commands.c (file_new_callback): added call to
	diagram_tree_add() to add newly created diagrams to the diagram
	tree window

	* app/app_procs.c (app_init): added call to create_tree_window()

	* app/makefile.msc : updated

2001-10-28  Hans Breuer  <hans@breuer.org>

	* app/preferences.h (DiaPreferences): 
	* app/preferences.c (prefs_data): new "show_diagram_tree"
	configuration option (whether the diagram tree window should be
	shown on dia startup)

	* app/menus.c: added the new "<Toolbox>/View/Diagram tree" menu
	entry (both for GNOME and gtk)

	* app/diagram.h (diagram_object_modified): callback notifying of a
	diagram object modification

	* app/diagram.c (diagram_load_into): added call to
	diagram_tree_add() to add newly loaded diagrams to the diagram
	tree window
	(diagram_destroy): call to diagram_tree_remove() to remove a
	destroyed diagram from the diagram tree window
	(diagram_add_object): call to diagram_tree_add_object() to add an
	object to the diagram tree window
	(diagram_add_object_list): as above, but with an object list
	(diagram_selected_break_external): deletion of objects from the
	diagram is detected here, and diagram_tree_remove_object() is
	invoked to remove the object from the diagram tree window (it
	would be nice to have a diagram_remove_object() in the Diagram
	interface)
	(diagram_set_filename): update the diagram tree window when a
	diagram's filename changes

	* app/commands.c (file_new_callback): added call to
	diagram_tree_add() to add newly created diagrams to the diagram
	tree window

	* app/app_procs.c (app_init): added call to create_tree_window()

2001-10-28  Hans Breuer  <hans@breuer.org>
 
	* plug-ins/python/pydia-property.c : apparently I missed
	to commit this last time. Now it has some more SetAttr
	support (apply from property)

	* plug-ins/python/pydia-properties.h : added PyDiaProperty_Check

	* plug-ins/python/pydia-text.[ch] : new files

2001-10-14  Hans Breuer  <hans@breuer.org>

	* lib/charconv.c : g_locale_to_utf8() does not handle NULL
	strings. Use g_strdup() for these.

	libxml2 does not produce 'any extra indentation when saving a tree'
	[libxml2-2.4.2/doc/upgrade.html] anymore, which was the default with
	libxml(1). To get human readable XML some extra tweaking is required.
	It is enabled by setting 'pretty_formated_xml' to 'true' in 'diarc'.
	* lib/dia_xml.[hc] : provide and use 'DIAVAR pretty_formated_xml'
	* app/preferences.[ch] : initialize 'pretty_formated_xml'

	* lib/libdia.def : updated externals

	* lib/properties.h : add prototype for prop_list_from_single ()

	* plug-ins/makefile.msc : build metapost plug-in

	* plug-ins/metapost/render_metapost.c : msvc does not like
	switch labels without operation 'default: }'. Added a noop.

	* plug-ins/python/pydia-text.[hc] : (new files) wrap DiaText
	* plug-ins/python/diamodule.c : added PyDiaText 
	* plug-ins/python/makefile.msc : dito. Also added LIBXML_CFLAGS.
	Although the python plug-in does not use libxml at all, the
	headers are required to use the lib/prop*.h headers

	* plug-ins/python/pydia-diagramdata.c : added wrappers for
	update_extents and get_sorted_selected (should I duplicate
	more functions from PyDiaDiagram or should they be moved?)

	* plug-ins/python/pydia-properties.c : allow to set (some) properties
	through the dictionary api
	* plug-ins/python/pydia-property.h : declare PyDiaProperty_ApplyToObject
	* plug-ins/python/pydia-property.c : implement it (currently only
	string properties can be set)

	Reimplement PyDiaProperty_GetAttr by means of the new StdProp api.
	Quoting myself: 'Still not convinced that this is better than an 
	 integral property->type and some casting ...
	 It is trading a straightforward 40 lines switch statement to
	 this nice 'type safe' function mapping (about 125 lines)'
	(But now it works again, better than changing the News file :)
	
2001-10-14  Cyrille Chepelov  <chepelov@calixo.net>

	patch from <robert.young@dsto.defence.gov.au>: 
	* objects/UML/component.c: remember to set font in UML component
	object (fixes #62132)	

2001-10-02  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/metapost/metapost.c: 
	* plug-ins/metapost/Makefile.am:
	* plug-ins/metapost/render_metapost.c:
	* plug-ins/metapost/render_metapost.h:
	Metapost renderer from Chris Sperandio

2001-09-14  Hans Breuer  <hans@breuer.org>

	* app/render_gdk.c : reflect the fact, that GTK already talks
	UTF8 on win32, fixes #59982, #56100, (#55992 ?) ...

	* lib/font.c : 
	* app/render_libart.c : trying to fix #58045 but it appears
	to be an Gdk/win32, too. 

	* lib/charconv.c : handle utf8 conversion with the help of
	glib-1.3 even in the !HAVE_UNICODE case.

	* lib/dia_xml.c : reduce complaing about missing encoding, by
	detecting if the default (utf8) would break the file.

2001-09-13  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/charconv.c: (get_local_charset): at least please try to not 
	silently change the logic, while avoiding crashes. 

	* lib/font.c: (suck_font): put a #error, we have a nasty something
	to fix there before we switch to Gtk 2.0.
	
2001-09-09  Hans Breuer  <hans@breuer.org>

	* **/makefile.mingw : Approach to compile Dia with mingw.
	Compiling mostly works but running does not (yet) ... 

	* lib/geometry.h : 
	- use G_OS_WIN32 instead of _MSC_VER to drag in isinf, etc. definitions. 
	  Apparently mingw needs it too.
	- enable 'normalization' of a null verctor. Otherwise the beziergon
	  bounding box calculation would be broken at least with msvc. What's
	  the mathematical correct result of 0.0/0.0 ?

	* lib/dia_xml.c : isinf() for mingw too.

	* lib/dia_dirs.c : use MAX_PATH instead of _MAX_PATH (works for mingw 
	and msvc)

	* lib/charconv.c : still crashes if strcmp(NULL, "UTF-8"). 
	Please don't do it.

	* lib/font.c : Trying to reflect that GTK_TALKS_UTF8_WE_DONT

	* lib/libdia.def : updated externals. Apparently mingw needs
	them to produce the right mangling.

	* plug-ins/shape/shape-exports.c : get prototypes for xmlStrdup
	and xmlDiaSaveFile

2001-09-08  Wang Jian  <lark@linux.net.cn>

	* configure.in(ALL_LINGUAS): Renamed zh_CN.GB2312 to zh_CN

2001-09-07  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/dia_xml_libxml.h:
	* lib/dia_xml.c: (data_add_string), (xmlDiaSaveFile): Duplicated
	libxml1's code, to rework the output file before it gets committed
	to disk. This is rubbish, and will be removed when libxml2
	switches from discouraged to mandatory. 
	All in all, this fixes #60152. 
	
	* lib/charconv.h: 
	* lib/charconv.c: (charconv_unichar_to_utf8):
	made the type of the input parameter explicitly an unsigned long.

	* configure.in: Added a check for libz (we must now include it
	explicitly, for xmlDiaSaveFile).
	
	* app/load_save.c: (diagram_data_save):
	* lib/plug-ins.c: (ensure_pluginrc), (info_fill_from_pluginrc),
	(dia_pluginrc_write):
	* plug-ins/shape/shape-export.c: (new_shape_renderer),
	(end_render), (draw_string):
	* plug-ins/svg/render_svg.c: (new_svg_renderer), (end_render),
	(draw_string):

	Made sure we always write UTF-8 XML files, and through
	xmlDiaSaveFile().

	* NEWS: documented that fact.
	
2001-09-07  James Henstridge  <james@daa.com.au>

	* configure.in (found_libxml): refactor the check for libxml a
	little so that it handles finding both libxml1 and 2 better.

2001-09-03  Cyrille Chepelov  <chepelov@calixo.net>

	* app/app_procs.c: removed a spurious } which caused a compilation
	error in the (!HAVE_GNOME && HAVE_POPT_H) case

	* lib/charconv.c: (get_local_charset): some versions of iconv(1)
	don't know what ANSI X3.4-1968 is. I didn't know until this day,
	but it's just plain old ASCII. Added a check to shield the poor
	XML library.

	Patches from <robert.young@dsto.defence.gov.au>:

	* lib/text.c: (text_calc_boundingbox) Bounding box now calculates the
	width and height of text before calculating bounds. Fixes #59928

	* app/preferences.c: Moved grid related items into Grid Tab.
	
2001-09-02  Cyrille Chepelov  <chepelov@calixo.net>

	* app/interface.c: (create_zoom_widget): connected one more signal
	to the Zoom selector combo's list. Fixes #59879.

	* app/app_procs.[ch]: (app_init) (do_convert)
	(build_output_file_name): brought back into the main executable
	the rare useful bits of the ill-fated diaconv. This means we have
	one new feature : --export-to-format (-t), which should make
	writing conversion scripts easier, and a crude implementation of
	-t and -e for the poptless argument parsing, which means the Win32
	port should be able to take advantage of it (that should make
	resolving #58197 possible).

	* app/diaconv.c: kept the poor duck compiling (but that's about
	it).

	* plug-ins/svg/render_svg.c: updated the SVG DTD header (I hope
	I've got it right).

	* NEWS: updated about the new feature above, and documented the 
	"missing encoding specification" complaint. 
	
2001-09-01  Abel Cheung  <maddog@linux.org.hk>

	* configure.in: Rename zh_TW.Big5 -> zh_TW in ALL_LINGUAS.

2001-09-01  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/standard/bezier.c: used g_new0 instead of g_new, to take
	care of #59837.

2001-09-01  James Henstridge  <james@daa.com.au>

	* */Makefile.am: various changes to include missing files, and fix
	sheets dir to handle building with builddir != srcdir.

	* autogen.sh: unconditionally pass the --enable-maintainer-mode
	and --enable-db2html flags so that builds from CVS work correctly.

	* configure.in: increment version number.  Also add an
	--enable-db2html flag.  Without the flag, db2html won't be run (if
	the flag is passed and db2html is not present, do nothing).

2001-08-30  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/poly_conn.c: (polyconn_copy): it's a wonder this routine
	even compiled. It's really too bad there is no lint tool easily
	available (or a more cautious, pedandic, paranoid and verbose
	compiler). Anyway, this fixes #59662. (this didn't affect 0.88.x)

2001-08-27  Cyrille Chepelov  <chepelov@calixo.net>

	* app/load_save.c:
	* dia/lib/plug-ins.c: use g_strdup() instead of strdup(). Patch
	from <robert.young@dsto.defence.gov.au>. Fixes #59591.

	* app/menu.c: added ellipsis(...) to diagram properties menu item.
	* app/dia-props.c: diagram properties dialog contents did not
	represent current diagram settings.
	* app/dia-props.[ch]:
	* app/display.c: diagram properties contents now follows currently
	selected diagram.
	Patch also from <robert.young@dsto.defence.gov.au>, fixes #59409.

	* AUTHORS: added Robert Young.
	
2001-08-27  Cyrille Chepelov  <chepelov@calixo.net>

	* app/modify_tool.c: (modify_button_release): Patch from
	<robert.young@dsto.defence.gov.au>. Fixes the remaining bit from
	#59090: if selection dragging was released outside of the window, 
	artifacts of the selection box remained.

2001-08-25  Cyrille Chepelov  <chepelov@calixo.net>

	* Objects/custom/shape_info.c: added missing #include <xmlmemory.h>

2001-08-19  Cyrille Chepelov  <chepelov@calixo.net>

	* configure.in:
	* sheets/Makefile.am: prepared the terrain for the Version of
	xml-i18n-tools Which Comes After 0.9 (and which will feature at
	last a sane behaviour with XML files). Some reasonible delay
	before enforcing that version *will* be given.

	* xml-i18n-merge.in.kg: included the current CVS xml-i18n-merge.in
	
	* lib/plug-ins.c: <xmlmemory.h> defines xmlFree(), otherwise it
	becomes a nonexistent symbol.
	
2001-08-18  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : made it compile without ENABLE_NLS

	* app/diap_callbacks.c : strcmp isn't guaranteed to work
	with NULL pointers

	* app/load_save.c :
	* lib/plug-ins.c : 
	* objects/custom/shape_info.c : avoid mixing allocators and dealocators. 
	It has to be :
		xmlGetProp, ... -> xmlFree
		malloc, strdup -> free
		g_new, g_malloc, g_strdup - > g_free

	* app/win32print.c : some more error checking, still not
	working on Win9x

	* lib/charconv.c : get_local_charset is used even with !HAVE_UNICODE

	* lib/dia_xml.c : msvc still has no unistd.h

	* lib/dia_xml.c :
	* lib/sheets.c : temporary resolved libxml include brokeness

	* plug-ins/python/pydia-*.c : reflect Font and StdProp api
	changes. Compiles again, but doesn't do anything useful anymore.
	(see THE_PROP_TYPE_IS_INTEGRAL)

	* **/makefile.msc : updated to use LIBXML2

	* lib/libdia.def : reflect api changes

2001-08-17  Cyrille Chepelov  <chepelov@calixo.net>

	* config.h.win32: added defines telling that gtk speaks UTF8.
	Hans, I believe this reflects what GTK on Win32 does.

	* app/app_procs.c: if GTK talks UTF8, we'll feed it UTF8 localised
	strings.	
	* lib/prop_inttypes.c: 
	* lib/prop_text.c:
	* lib/prop_widgets.c: fixed typos in the GTK_TALKS_UTF8_WE_DONT
	code path.
	
	* lib/plug-ins.c: (dia_register_plugins_in_dir): If there is a
	trailing // (or whatever (G_DIR_SEPARATOR * 2) is), a recursive
	search for plug-ins is done.
	* app/Makefile.am: made app/run_dia.sh use the // capability. No
	need to update this anymore if we get a new plug-in library (or
	remove one).

	* lib/dia_xml.c: #include <unistd.h> was missing.
	
	* lib/properties.h: 
	* lib/proplist.c: (pdtpp_defaults): Added a new flag,
	PROP_FLAG_NO_DEFAULTS. Will be used in the "automatic defaults"
	support.	

2001-08-16  Cyrille Chepelov  <chepelov@calixo.net>

	* sheets/civil.sheet: removed duplicate "Danish" entries.

	* autogen.sh:
	* configure.in: 
	* .cvsignore:
	* sheets/Makefile.am: 
	* po/POTFILES.in:
	* Makefile.am: applied the xml-i18n-tools README's instructions.

	* po/(da de fr hu nl nn no sl).po: merged the translations from
	the sheet files into the .po files. I hope I haven't mixed
	languages...
	* sheets/*.sheet (REMOVED):
	* sheets/*.sheet.in (NEW): moved the sheet files sans
	translations into .sheet.in files. 
	
	* sheets/xml-i18n-unicodify: (NEW) included from xml-i18n-tools,
	because we don't yet want to force all translators to work using
	UTF-8 editors. We'll want to do that sometime (sooner rather than
	later).	Okay, I sing a slightly different tune in po/ChangeLog...

	* dia.desktop (REMOVED):
	* dia.desktop.in (NEW): used also the x18t infrastructure for
	this too.

	* xml-i18n-update.in.kg (NEW): This one will stay in CVS until an
	"official" version of x18t with support for .sheet files is available.
	* xml-i18n-merge.in.kg (NEW): This one will stay in CVS until an
	"official" version of x18t which doesn't corrupt UTF-8 data in XML
	is available.
	
	** yes, we are now using xml-i18n-tools to manage the sheet
	translations. For the Win32 build, Nemo stores snapshots of
	translated strings next to the CVS snapshots. **

	* sheets/checktrans.py: suddenly, some sheets have lots of
	translations (objects which existed before sheets, mostly).
	Adapted the formatting.

	* po/README (REMOVED): this is obsolete ! It was ignored, anyway.

	* app/display.[ch]: (ddisplay_autoscroll), (ddisplay_scroll):
	* app/modify_tool.[ch]: (modify_motion): A (modified) patch from
	<robert.young@dsto.defence.gov.au>, to fix #59090.

	* app/display.c: (ddisplay_scroll): While at it, added some
	margin, so that autoscrolling can happen within a margin outside
	the diagram's extents.

	* app/tool.[ch]: 
	* app/interface.c:
	* app/disp_callbacks.c: Robert "forced" me to go when I usually
	don't, namely the app/ directory. So while I was there, I
	scratched a long-time itch. If no object has focus, pressing the
	space bar will select back the tool which was selected before the 
	current one (I find this especially useful with "reset after create" !)
	
	* lib/proplist.c: (prop_list_from_single): Renamed
	prop_list_singleton() to avoid confusion with the Singleton
	pattern (which it definitely is not).
	
	* lib/propobject.c: (object_prop_by_name_type),
	(object_prop_by_name): The "flags" parameter was not necessary.
	These don't return synthetic properties, but properties built from
	a real property description list; therefore, we don't call
	make_new_prop() but use the existing property descriptor, which
	has perfectly valid (and meaningful) flags.

	* lib/proplist.c: (pdtpp_synthetic), (pdtpp_from_object): These
	new predicates better reflect the reason why properties exist when
	they're created by make_new_prop() or object_prop_by_name().	

	* lib/propobject.c: (object_prop_by_name_type), (object_prop_by_name):
	* lib/prop_basic.c: (make_new_prop): used the new reasons instead
	of pdtpp_true().

	* lib/properties.h: reflects all the above changes.

	* objects/SADT/arrow.c:
	* objects/SADT/annotation.c:
	* sheets/SADT.sheet: minor renamings to better match FIPS 183's
	IDEF0 terminology.
	
2001-08-15  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/properties.h:
	* lib/proplist.c: (prop_list_singleton):
	* lib/propobject.c: (object_prop_by_name_type), (object_prop_by_name):
	Added these, to simplify interactions of plug-ins with the StdProp
	core.

	* lib/Makefile.am:
	* lib/dia_xml.h:
	* lib/dia_xml_libxml.h (NEW): 
	* app/load_save.c:
	* lib/dia_xml.c:
	* lib/plug-ins.c:
	* lib/sheet.c:
	* objects/custom/shape_info.c: A few prototypes were causing
	#include hell, because we generally attempt to not pull the whole
	libxml header set when we include dia_xml.h. Moved those
	prototypes away for the rare cases they're necessary.
	
2001-08-15  Hans Breuer  <hans@breuer.org>

	* lib/font.c : made LARS_TRACE_MESSAGES Standard C conform

	* lib/libdia.def : 
	* lib/makefile.msc : updated

	* lib/prop_basic.c : __FUNCTION__ is a gcc extension. Please
	use G_GNUC_FUNCTION instead.

	* lib/prop_inttypes.c : include <stdlib.h> for strtol()

	* objects/sadt/annotation.c : disable TEMPORARY_EVENT_TEST for
	msvc instead of cleaning missing includes

	* plug-ins/wmf/wmf.cpp :
	* plug-ins/wmf/wmf_gdi.h : fixed for Font to DiaFont renaming

2001-08-15  Cyrille Chepelov <chepelov@calixo.net>

	* app/app_procs.c:
	* app/load_save.c:
	* lib/dia_xml.c:
	* lib/plug-ins.c:
	* lib/sheet.c:
	* objects/custom/shape_info.c:
	* plug-ins/shape/shape-export.c:
	* plug-ins/svg/render_svg.c: used the libxml1/libxml2
	compatibility macros as taught by http://xmlsoft.org/upgrade.html;
	removed xmlKeepBlanksDefault(0) in favour for proper
	xmlIsBlankNode() testing. Lots of other fixups to use the
	"libxml1.5" (libxml2 parser embedded in recent libxml1), and to
	make libxml1 output correct files.

	* configure.in: use libxml2 (>= 2.3.9) if it's found, or
	libxml1 (>= 1.8.14). Exactly one of these must be installed (devel
        packages). If both devel packages are found, the build will stop 
        (Fredrik: please add a Build-Conflicts: on libxml2-dev for the moment) 

	* lib/bezier_conn.c: (bezierconn_init): Lars, you forgot to
	allocate the first handle :-)
	
	* lib/object.c: (object_init): <gratuitous>g_new() used instead of
	a cast and a sizeof.</gratuitous>

	* objects/custom/custom_object.c: (custom_copy): don't call
	text_get_attrbutes if the shape has no text...
	(custom_update_data): The info->resize_with_text code was a bit
	directive; basically, the shape's bounding box was forced to be 
	proportional to the text's bounding box.... This fixes #57187.
	
	* objects/custom/shape_info.c: (load_shape_info): Set an obvious
	default for info->aspect_ratio; unobfuscated a line about
	info->resize_with_text;
	
2001-08-15  Cyrille Chepelov <chepelov@calixo.net>

	* lib/properties.h: added comments next to the PROP_TYPEs to tell
	which C Property subclass to use.
	
	* plug-ins/dxf/dxf-import.c: (read_entity_line_dxf): Removed the
	cast-ridden form of setting properties in a list, in favour for
	the "local pointers" form. I'll take any better offer...

2001-08-14  Cyrille Chepelov <chepelov@calixo.net>
	
	* lib/font.c: fprintf(...) --> fprintf(format...)

	* configure.in: added a disabled versioned test for glib.
	* lib/prop_geomtypes.c: (bezpointprop_load), (bezpointprop_save),
	(bezpointarrayprop_load), (bezpointarrayprop_save): replaced
	g_critical() with a simple g_error(). Proper fix is to implement
	that stuff. 

	* lib/properties.h: PROP_STD_TEXT is a PROP_TYPE_TEXT, not a
	PROP_TYPE_STRING.
	
	* lib/properties.h: 	
	* lib/propdesc.c: (prop_desc_list_calculate_quarks):
	* lib/proplist.c: (find_prop_by_name_and_type):
	* lib/prop_basic.c: (make_new_prop), (initialize_property):
	* lib/propoffsets.c: (do_set_props_from_offsets),
	(do_get_props_from_offsets), (prop_offset_list_calculate_quarks):
	Added a type_quark member to PropDescription, Property and
	PropOffset. Used it to implement a safety in
	do_[sg]et_props_from_offsets().
		
	* objects/flowchart/diamond.c: the diamond's text was not saved,
	and thus not even copied (c&p).
	* objects/standard/textobj.c: ditto.

	Most of the above changes thanks to Robert Young's testing. Thanks !
	
2001-08-14  Kjartan Maraas  <kmaraas@gnome.org>

	* sheets/*.sheet: Added some Norwegian translations (both nynorsk
	and bokmÃ¥l).
	
2001-08-13  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/proplist.c (prop_list_from_descs): added a call to
	prop_desc_list_calculate_quarks(). (find_prop_by_name_and_type):
	too embarrassing to tell.
	
	* lib/propdesc.c (prop_desc_list_calculate_quarks): converted the
	while loop to a for loop, for symmetry with
	prop_offset_list_calculate_quarks().

	* lib/geometry.h: new inline function, rectangle_equals.

	* lib/diagramdata.[ch]: refactored a bit the diagram extents
	computation logic, and changed it to always be the union of the
	visible layers' extents. This should close #58882 (Debian
	#107167), and fixes #55498.

	* app/display.c: made the initial visible box more coherent with
	the diagram being loaded's extents.

	* app/prop_attr.c: don't set the font (from offset) if font_data
	is NULL. Two brainos in colorprop_load() and fontprop_load().
	
2001-08-13  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/properties.[ch]: split in a lot of pieces: 

	* lib/prop_*.[ch] (NEW): all property types are now first-class
	objects, inheriting from the original abstract Property type.
	* lib/propdesc.c (NEW): property description handling routines
	* lib/propoffsets.c (NEW): property offset handling routines
	* lib/proplist.c (NEW): property list handling routines
	* lib/propobject.c (NEW): property list <-> object routines
	* lib/propregistry.c (NEW): holds the PropertyType-->PropertyOps
	relations.
	* lib/propinternals.h: prototypes for stuff not usually needed by 
	the outside of StdProps.
	* lib/Makefile.am: a lot of new files have been added...

	THE ABOVE CHANGES ARE MAJOR CHANGES AND AFFECT THE WHOLE TREE, IN
	BOTH INTERFACES AND RUN-TIME STABILITY.

	* lib/plug-ins.h: bumped up DIA_PLUGIN_API_VERSION
	
	* lib/object.h: removed the incestuous relationship with
	properties.h' contents. Now a Property list is a GPtrArray -->
	object interface change !

	* app/app_procs.c/app_init(): removed a disabled call to a
	non-existent routine. Added a call to stdprops_init().
	
	* objects/Makefile.am: disabled the construction of EML. I'm not
	touching these until a certain issue is solved (or this module
	removed).
	* app/group.c:	
	* objects/**/*.c except objects/EML/*: adapted all stdprop-using 
	objects to the interface changes.
	
	* app/disp_callbacks.c: killed a warning.
	* lib/dia_xml.[ch]: sprinkled "const" modifiers. 

	* app/commands.c: 
	The macros PROP_VALUE_* have disappeared. Adapted to using the new 
	interface.

	* plug-ins/dxf/dxf-import.c: 
	* plug-ins/xfig/xfig-import.c: 
	PROP_VALUE_* macros have been removed. Converted to the new API.

	* plug-ins/python/**/*: I gave up converting this; I can't
	compile --with-python (problems with object.h defined both by us
	and by Python). I'll gladly help whomever cares to fix it !
	(or, fix it myself if someone tells me how to compile it).
	
	* configure.in: added the UNICODE-related progress defines.
		
	* configure.in:
	* lib/geometry.h: On Solaris and perhaps other systems, finite()
	is defined in ieeefp.h rather than in math.h. Patch from Andrew
	Halper <ashalper@acm.org> with further modifications, isinf() is
	provided by -lsunmath (sunmath.h).
	
	* lib/font.c: conditionally disabled Lars' debugging messages.
	Bracketed the definition of DiaFontFamily with #ifdef HAVE_FREETYPE.
	
2001-08-11  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/bezier_conn.h: 
	* objects/standard/bezier.c (bezierline_create): 
	* lib/bezier_conn.c (bezierconn_init): 
	Preparations for use of userdata for bezier lines.
	
	* objects/standard/polygon.c: 
	* objects/standard/create.h:
	* lib/polyshape.c:
	* lib/polyshape.h:
	* plug-ins/xfig/xfig-import.c:
	Use of user_data for polygon as well, including adding
	polyshape_set_points.  Include file for non-interactive 
	creation of standard objects, objects/standard/create.h

2001-08-10  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_gdk.c: 
	* app/render_gdk.h: 
	* lib/font.c:
	* lib/font.h:
	* lib/widgets.c:
	More preliminary freetype support.  Not at all functional, crashes
	when rendering.

	* lib/poly_conn.h: 
	* lib/poly_conn.c: 
	* objects/standard/polyline.c: 
	Support for creating polyline objects with more than two points.
	This includes an extra function and a prototype change in the
	poly_conn lib object.

	* lib/object.c (object_copy): Fixed memory leak of handles and
	connections.

2001-08-08  Abel Cheung  <maddog@linux.org.hk>

	* dia.desktop: added traditional Chinese strings

2001-08-04  Cyrille Chepelov  <chepelov@calixo.net>

	* NEWS: updated to reflect build-time dependencies.

	* lib/properties.[ch]: wrote get_prop_descriptions() as a wrapper
	around obj->ops->describe_props(obj). Quarks are none of an
	object's business in the general case... 
	* lib/text.c: Added an apply_textattr_properties() function to
	factor out some common code related to applying a dialog's text
	attribute properties to a (Text *) which wasn't edited there. 
	Ditto for textstr, for the string part of an objet.

	* objects/GRAFCET/action.c:
	* objects/SADT/annotation.c:
	* objects/SADT/box.c: used apply_textattr_properties().
	
	* objects/UML/actor.c: 
	* objects/UML/branch.c:
	* objects/UML/component.c:
	* objects/UML/constraint.c:
	* objects/UML/small_package.c:
	* objects/UML/state.c:
	* objects/UML/usecase.c:
	* objects/UML/large_package.c:
	* objects/UML/note.c:
	* objects/UML/node.c:
	* objects/UML/message.c:
	* objects/UML/classicon.c:
	* objects/UML/object.c:
	* objects/UML/realizes.c:
	* objects/UML/dependency.c:
	* objects/UML/implements.c:
	slim-fast(tm) cure using more StdProps, and UTF-8 audit.
	(most objects were already using StdProps to some extent ; this
	systematises usage and removes some dead wood). 
	
	* objects/UML/stereotype.[ch]: use UTF-8 internally. const police work.
	* objects/UML/uml.[ch]: audited for UTF-8.

	* objects/UML/class.c: the UML_STEREOTYPE_* strings defined by
	uml.h can be in UTF-8... this code isn't yet ready. Duplicating a
	private (ISO-8859-1) definition.
	
	* lib/charconv.c: Added a warning if we didn't run
	nl_langinfo(CODESET) but rely instead on a hardcoded default.
	
2001-08-02  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/diamenu.h:
	* app/disp_callbacks.c: added a way for an object to cause an
	already realised menu to be destroyed (for instance if it changes
	too much).

	* objects/custom/custom_object.c: used the above to fix #55073.

2001-08-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* configure.in: Remove 2.50 prereq.

2001-07-30  Cyrille Chepelov  <chepelov@calixo.net>

	* po-checktrans.py: under some circumstances, there was one column 
	more than what was supposed to be, thus breaking the formatting.
	
2001-07-29  Cyrille Chepelov  <chepelov@calixo.net>
	
	* objects/SADT/annotation.c: forgot to add a #include <stdlib.h>

	* NEWS: updated with new stuff since 0.88

	* shapes/network/antenna.shape: the text was misplaced ; fixed.

	* shapes/network/firewall.(shape|xpm) (NEW): a brick-wall looking
	firewall router (upon request from Cyril Lacoux
	<clacoux@easter-eggs.com>)

	* configure.in (didn't rename to configure.ac): autoconf 2.50
	constructs were used ; added an AC_PREREQ call to guard against
	older autoconfs.
	
2001-07-27  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/properties.c: minor clean-ups with the event delivery code.

	* EML/instantiation.c: brought this object back from stone and ice
	age.	

	* app/diaconv.c(NEW): added a command-line conversion tool. Still
	lacks a man page and correctness. In fact, it doesn't work. Please
	see #58196 if you want to finish it.
	
	* lib/message.[ch]: redefined things a little so that a different
	message_internal routine could be passed.
	applications can use that to fit themselves to the display model.

2001-07-26  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/SADT/box.c: 
	* objects/GRAFCET/action.c: spelling in property descriptors (name
	field...)
	* objects/SADT/annotation.c: ditto, plus a temporary test of the
	event delivery code (try to click on the "click me !" button !).

	* app/group.c: 
	* lib/properties.[ch]: improved (fixed) support for group event 
	handlers. Fixed various things from yesterday's code to make it
	not too obviously crash.

2001-07-26  Cyrille Chepelov  <chepelov@calixo.net>

	* app/group.c: added delivery of events to the first member of the
	group which is able to process it.

	* lib/properties.c(prop_desc_lists_intersection): properties
	don't match if they don't have identical event handler.
	* lib/properties.h: simplified the PropEventHandler signature.

	Event delivery code is still untested so far, but should be
	lurking harmless.
	
2001-07-25  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/properties.[ch]: Added (untested !) property event handler
	capability. Added a new PROP_TYPE_BUTTON, for the purpose of
	generating such events. This stuff compiles, and should lurk
	around silently as long as you don't declare property descriptors
	with events (AFAICT).
	In object_create_props_dialog() and friends:
	attached a single structure with lots of data instead of lots of
	little attachments of data to the dialog widget.
	
	* lib/object.h: fixed mild typedef breakage introduced by the above.

2001-07-17  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lots of files: Changed Font to DiaFont
	* */Makefile.am: Added FREETYPE_LIBS
	* plug-ins/xfig/xfig-export.c: Improved (working:) color handling

2001-07-13  Kjartan Maraas  <kmaraas@gnome.org>

	* configure.in: Added "nn" to ALL_LINGUAS.
	
2001-07-09  Alex Larsson  <alexl@redhat.com>

	* app/disp_callbacks.c:
	Add gdk_im_ready() calls to XIM code.

2001-07-04  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/properties.[ch]: splitted prop_get_widget() into
	prop_get_widget() (gives a widget but doesn't fill it) and 
	prop_reset_widget() (fills an existing widget with a property's value).

	* lib/widgets.[ch]: const enforcement police work.

	* shapes/network/antenna.shape: added a connection point at top,
	upon request from <Emmanuel.Quemener@cri.ens-cachan.fr>.
	
2001-06-25  Cyrille Chepelov  <chepelov@calixo.net>

	* intl/*: tested with gettext-0.10.38
	* configure.in: moved a macro call around (AM_PROG_CC) to keep
	some of autogen.sh from complaining.
	* INSTALL: added a warning against gettext older than at least 0.10.36
	
2001-06-19  Cyrille Chepelov  <chepelov@calixo.net>

	* configure.in: added explicit calls to AM_LANGINFO_CODESET and
	AM_ICONV (both provided by gettext)

2001-06-14  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/charconv.c: corrected the degraded mode for when
	!HAVE_UNICODE. Thanks to Ben A. Hetland for reporting this.	

	* objects/chronoline/chronoline_events.c: UTF8 compliance.
	
2001-06-13  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/properties.[ch]: convenience macros around PROP_NOTEBOOKS ;
	new "eye candy" properties: PROP_MULTICOL_(BEGIN|PAGE|END) to lay 
	widgets on several columns, PROP_FRAME_(BEGIN|END) to put widgets
	into a frame box.

	* objects/chronogram/chronoline.c:
	* objects/chronogram/chronoref.c: took advantage of the above to
	make nicer looking dialogs.

	* lib/charconv.[ch]: added charconv_unichar_to_utf8 ("inspired"
	from libunicode's internals).
	* lib/message.c: convert strings to local encoding prior to
	display (UNICODE_WORK_IN_PROGRESS)
	* lib/properties.[ch]: convert strings to local encoding prior to
	display, and back to UTF8 (UNICODE_WORK_IN_PROGRESS).
	* lib/render.h: tagged strings as (utfchar *) instead of (char *)
	* lib/stringprerenderer.[ch]: ditto

	(lib/text.c has been audited for UTF8, but the size of the changes
	make them inappropriate for commit before 0.89)
	
2001-06-12  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/boolequation.h (<save|load>_boolequation): made the 
	prototypes for match the .c file.
	
	* samples/grafcet.dia: minor non-conformance with IEC-848
	fixed (in the transition from step 100 to step 101).

	* lib/properties.[ch]: added a flag (PROP_FLAG_DONT_MERGE) to
	disallow editing of properties if the object is part of a group.

	* objects/chronogram/chronoline.c: 
	* objects/SADT/annotation.c:
	* objects/SADT/box.c:
	* objects/GRAFCET/step.c:
	* objects/GRAFCET/transition.c:
	* objects/GRAFCET/condition.c: took advantage of PROP_FLAG_DONT_MERGE.
	
2001-06-12  Hans Breuer  <hans@breuer.org>

	* lib/libdia.def : removed lazyprop exports
	* lib/makefile.msc : removed lazyprop.obj

	* objects/custom/custom_objects.c : use HAVE_UNISTD_H
	and avoid crashes by always creating a custom->text,
	when (custom->info->has_text) 

	* objects/makefile.msc : removed sybase from build

	* objects/GRAFCET/boolequation.c (<save|load>_boolequation) :
	ObjectNode is a pointer already, which is what we want
	instead of a pointer pointer.

	* plug-ins/wmf/wmf.cpp : fixed problem with arc scaling
	and implemented working export for images

	* shapes/network/zip-disk.shape : added connection points 

2001-06-12  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/SADT/box.c: removed lazyprops for standard props.
	* objects/chronograms/chronoline.c: removed lazyprops (phew !)
	* objects/chronograms/chronoref.c: ditto 

	* lib/Makefile.am:
	* lib/dummy_dep.h:
	* lib/connpoint_line.c:
	* lib/lazyprops.[ch] (DELETED): good riddance (closes #55895)
	* lib/properties.[ch]: new property types:
	    - PROP_TYPE_STATIC: static text to be displayed in the dialog.
	    - PROP_TYPE_MULTISTRING: same as string, but renders as a
	    multi-line entry box.
	    - PROP_TYPE_NOTEBOOK_BEGIN,_PAGE,_END: stuff to make dialogs
	    in a tabbed-notebook style (this is a bit complicated to use; 
	    see objects/chronograms/chronoline.c for an example).
	       
2001-06-11  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/GRAFCET/boolequation.[ch]: zap lazyprops. Add standard props.
	* objects/GRAFCET/step.c: ditto.
	* objects/GRAFCET/vector.c: ditto.
	* objects/SADT/annotation.c: ditto.
	* objects/SADT/arrow.c: ditto (plus bounding box fixes).
	
	* lib/properties.[ch]: two more non-visible types
	(PROP_TYPE_ENUMARRAY and PROP_TYPE_INTARRAY).

	* lib/neworthconn.[ch]:
	* lib/orthconn.[ch]: added support for manipulation through
	standard properties.

	* configure.in: removed -fomit-frame-pointer, this seems to
	confuse recent gcc/gdb's, maybe we'll get better stack dumps in 
	bugzilla.

	* charconv.[ch]: more functions from unicode.h.
	get_local_charset() wasn't working properly, fixed now.
	A subtle crashbug in charconv_utf8_to_local8() nailed (thanks to 
	ElectricFence !)
	
	* objects/EML/process.h: pulled the bits of lazyprops.h it uses.
	* lib/lazyprops.[ch]: put a big fat warning in.

	* app/render_eps.c: one line mysteriously went away, causing a
	variable to be used uninitialised....

2001-06-10  Cyrille Chepelov  <chepelov@calixo.net>

	* app/app_procs.c: commented out the call to
	bind_textdomain_codeset(): it's premature.
	
	* lib/connpoint_line.c: a NULL point can be given to
	connpointline_adjust_count(), in case there's not really a clicked
	point.

	* lib/textattr.h(NEW): moved the definition of TextAttributes to sort
	#include order troubles. #included by lib/text.h, so there is no 
	impact outside lib/.
	* lib/properties.[ch]: added support for CONNPOINT_LINE and
	(nonvisible) TEXT properties.

	* objects/GRAFCET/action.c:
	* objects/GRAFCET/vergent.c: dropped lazyprops for standard
	properties.
	
	* objects/UML/lifeline.c: pruned some legacy stuff (now pure
	standard properties code). Grafted a dynamic number of connection
	points (heavily inspired from what Vergent does). This is the real
	fix for #55863.

	* objects/GRAFCET/boolequation.[ch]: audited for UTF-8

	* lib/fonts.c: some hardening (mostly g_assert())
2001-06-09  Cyrille Chepelov  <chepelov@calixo.net>

	* app/app_procs.c (app_init): added a call to
	bind_textdomain_codeset() so that gettext gives us UTF-8 strings
	(UNICODE_WORK_IN_PROGRESS).
	
2001-06-08  Cyrille Chepelov  <chepelov@calixo.net>

	* plug-ins/xfig/xfig-import.c: corrected a typo (fixes #55910)

	* objects/UML/lifeline.c: patch from Marc <mrw@siemens.ch> 
	(fixes #55863) : some clean-ups in the handling of connection
	points. Now the total number of connection points is just a
	#define (the proper solution is to retrofit the GRAFCET Vergent's
	dynamic behaviour wrt connection points).
	
2001-06-07  Cyrille Chepelov  <chepelov@calixo.net>

	* app/app_procs.c (app_init): added a call to unicode_init() (only
	if HAVE_UNICODE, of course).

	* lib/charconv.c: simplified the code which detects the local
	charset. No need to use <langinfo.h>, libunicode already takes the
	burden of figuring that out. Also, if local charset is utf8, no
	conversion will take place.
	Exposed a way to get the current charset (similar to
	unicode_get_charset() but actually working, hopefully).

	* lib/charconv.h: Added a partial non-UTF8 implementation of
	unicode.h if !HAVE_UNICODE (actually, all the time for the
	moment). The UTF8 implementation is just macros on libunicode (use
	the functions prefixed by uni_, as defined by charconv.h, not
	unicode_, unless that code is to be compiled only if HAVE_UNICODE).
	From now on, all strings which don't *need* to be ASCII should be
	utfchar *, not gchar *. Just include charconv.h, let it sort out
	the details (such as: "is libunicode available and enabled?") 

	* lib/ps-utf8.c: fixed a few name clashes. Used the charconv.h
	"API" instead of directly libunicode. Removed the now unnecessary
	speculative clustering of characters in encoding pages.

	* app/render_eps.c: made the local8->utf8 conversions dependent of
	!UNICODE_WORK_IN_PROGRESS (this is not where the local8/utf8
	boundary will be when this WIP is done).

	* lib/dia_xml.c (data_point): fixed a format string typo.

	* po/POTFILES.in: added all C files from lib/ 
	
2001-06-06  Cyrille Chepelov  <chepelov@calixo.net>

	* app/disp_callbacks.c: make sure the objects' connected objects
	are updated when the objects' size changes after a keypress event
	(fixes #51222)

	* configure.in: added a big warning about the possible future
	non-optionality of --enable-unicode. 

	* TODO: removed entries which look like done ; added a few ones
	(Bugzilla "enhancement" bugs may be a better way to keep track of
	this)
	
2001-06-05  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/UML/message.c: got rid of #55564 and of message_copy()
	by using more standard properties (are the message_state_*()
	functions still necessary ?)

2001-06-04  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* lib/plug-ins.c: 
	* objecs/custom/shape_info.c:
	* plug-ins/shape/shape-export.c:
	* plug-ins/svg/render_svg.c: patch from obecian <obecian@openbsd.org>
	use xmlChar instead of obsolete CHAR.

2001-06-03  Hans Breuer  <hans@breuer.org>

	* app/diagram.h : added prototype for diagram_update_menu_sensitivity()
	* app/commands.c : give the right number of parameters
	to diagram_update_menu_sensitivity ()

	* app/preferences.c : do proper initialization for DiaPrefsData:
	render_bounding_boxes. It would be a real surprise if 'hidden'
	properties would have ever worked before.
	Don't try to access the widgets of hidden property, it does not
	have one.

	* lib/diagramdata.h : make render_bounding_boxes a DIAVAR, cause
	it is defined in libdia, but initialized from dia app, which 
	otherwise gave nice start-up crashes.

	* lib/diagramdata.c : initialize the color for rendering bounding 
	boxes in the Dia range (0 .. 1.0)

	* lib/libdia.def : added *_bbox functions for export

	* lib/makefile.msc : added new sources

	* objects/custom/custom_object.c : use HAVE_UNISTD_H

2001-05-30  Cyrille Chepelov  <chepelov@calixo.net>

	* app/interface.c:
	* app/menus.c: patch from Hubert Figuiere <hfiguiere@teaser.fr> ;
	removes a translation of menus (in a place where there shouldn't
	have been), which gets rid of a waterfall of warnings if LANG!=C,
	and a fix to #55047.

2001-05-29  Steffen Macke     <sdteffen@yahoo.com>

	* lib/charconv.c : added #include <errno.h>

	* app/dia_embedd.c : updated menus_get_item_from_path usage
	
2001-05-27  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/ps-utf8.c: Strings in Symbol fonts were incorrectly rendered.
	Added a special case for Symbol strings, so that they're not
	re-encoded using the LN encoding (we use the bare Adobe encoding
	instead).

	* objects/custom/custom_object.c: Now that #52912 is fixed,
	I could remove the ugly hack I wrote to squash the shape bounding box
	problem shown by Ben A. Hetland a few months ago, and fix it
	properly this time.
	
	* lib/text.c: enlarged a little the bounding box to account for
	the cursor in rightmost position.
	
	* lib/diagramdata.c: draw bounding boxes only if the relevant
	variable is set (as before), but also only if the rendere is
	interactive (ie, don't bother rendering bounding boxes on 
	Postscript...)
	Made the bounding box's line width a fixed value, 0.01
	
	* lib/boundingbox.c: fixed the "pointy corners" code for polylines
	and assymmetric control beziers. Implemented ellipse_bbox().
	
	* Makefile.am: incantations to get po/dia.pot build, as suggested
	by Hubert in #55075.
	
	* shapes/network/computer.shape: typo fixed.
	* shapes/network/antenna.shape: fixed #55074 (antenna is now
	properly translucent, except for its base where it makes sense. It
	doesn't look that ugly anymore if transparent mode is on).

	* configure.in: --enable-unicode is now the default. This
	still currently affects only printing.
	
2001-05-26  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/boundingbox.c: fixed a minor logic error wrt closed shapes. 
	The overshoot code is buggy, and the bounding boxes for polyshapes
	looks a bit cheezy. To be done ASAP.

2001-05-26  James Henstridge  <james@daa.com.au>

	* configure.in: call AM_PATH_PYTHON rather than AM_PATH_PYTHON_JH.
	This should clear up some of the build problems people have been
	having.

	* acinclude.m4: call AM_PATH_PYTHON_JH AM_PATH_PYTHON

2001-05-26  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/Makefile.am:
	* lib/boundingbox.[ch] (NEW): (some) refactoring of the bounding
	box code (beginning with lines, polylines and polybeziers), into a
	more generic facility. While at it, a better shot at correctly
	computing the bounding box of a Bezieroid (should take care of
	#53424, #51233 and of course is part 1 of #52912).

	* lib/diagramdata.c: turned the RENDER_BOUNDING_BOXES conditional
	into a hidden preference (set render_bounding_boxes in diarc).
	* app/preferences.[ch]:	Added support for hidden preferences.

	* lib/geometry.[ch]: sprinkled with "const" modifiers.
	
	* lib/bezier_conn.[ch]:
	* lib/beziershape.[ch]:
	* lib/connection.[ch]:
	* lib/element.[ch]:
	* lib/poly_conn.[ch]:
	* lib/orth_conn.[ch]:
	* lib/neworth_conn.[ch]:
	* lib/polyshape.[ch]: adapted to take advantage of
	boundingbox.[ch] instead of relying on private (duplicate) code.

	* object/FS/flow.c:
	* object/GRAFCET/action.c:
	* objects/GRAFCET/condition.c:
	* objects/GRAFCET/vergent.c:
	* objects/GRAFCET/vector.c:
	* objects/SADT/annotation.c:
	* objects/SADT/arrow.c:
	* objects/ER/participation.c:
	* objects/UML/constraint.c:
	* objects/UML/implements.c:
	* objects/UML/lifeline.c:
	* objects/UML/message.c:
	* objects/UML/realizes.c:
	* objects/UML/generalization.c:
	* objects/UML/association.c:
	* objects/UML/dependency.c:
	* objects/FS/flow-ortho.c:
	* objects/network/bus.c:
	* objects/standard/arc.c:
	* objects/standard/bezier.c:
	* objects/standard/beziergon.c:
	* objects/standard/line.c:
	* objects/standard/polygon.c:
	* objects/standard/zigzagline.c:
	
	* objects/standard/polyline.c: Some *BBExtras structures changed
	names while moving to boundingbox.[ch]. A trivial mass-renaming.
	
2001-05-20  Cyrille Chepelov  <chepelov@calixo.net>

	* app/disp_callbacks.c (ddisplay_canvas_events): Take into account
	wheel mouses for scrolling (from Patrick Sung <phsung@ualberta.ca>)

	* app/display.c (ddisplay_update_scrollbars): from Patrick's
	suggestion, remove the extra scrollable area (it was only visible
	to the scrollbars). This is experimental.
	
	* objects/custom/custom_object.c: If a shape's icon file doesn't 
	exist, warn and substitute a default icon, instead of crashing.
	(fixes #52913)
	
	* objects/network/network.c:
	* shapes/network/modularswitch.(shape|xpm) (NEW):
	* shapes/network/printer.(shape|xpm) (NEW):
	* shapes/network/genmonitor.(shape|xpm) (NEW):
	* shapes/network/computer.(shape|xpm) (NEW):
	* shapes/network/Makefile.am: four less objects, four more shapes.
	These were the last known RenderObjects. (phew !)

	* lib/Makefile.am:
	* lib/dummy_dep.h:
	* objects/sybase/Makefile.am: 
	* objects/network/Makefile.am: Removed the older Renderobjects
	from the build, and their infrastructure (not yet deleted,
	though).

	* shapes/network/sceadplug.shape:
	* shapes/network/antenna.shape:
	* shapes/network/modem.shape:
	* shapes/network/hub.shape:
	* shapes/network/rj45plug.shape:
	* shapes/sybase/client.shape:
	* shapes/sybase/dataserver.shape:
	* shapes/sybase/ltm.shape:
	* shapes/sybase/repserver.shape:
	* shapes/sybase/rsm.shape:
	* shapes/sybase/stableq.shape: Minor corrections (line widths were
	ten times too narrow).
	
2001-05-19  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/network/network.c:
	* shapes/network/sceadplug.(shape|xpm) (NEW):
	* shapes/network/antenna.(shape|xpm) (NEW):
	* shapes/network/modem.(shape|xpm) (NEW):
	* shapes/network/Makefile.am: four less objects, four more shapes.
	
	* lib/Makefile.am:
	* lib/diagramdata.c:
	* lib/render.h:
	* lib/string_prerenderer.[ch] (NEW):
	Add a new renderer primitive, predraw_string() (does nothing, to be
	used as a hook to optimise the character encodings if needed). 
	Added a string pre-renderer, which can be viewed as a filter
	renderer (to route draw_string() to predraw_string() and ignore
	the rest, in a first rendering pass)
	
	* app/render_eps.c: Took advantage of the above to make wholly
	optimised Postscript encoding page(s), even (especially) with 
	non-latin1 code (HAVE_UNICODE must be true).

	(#53512 in fact is wholly resolved).
	
2001-05-18  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/charconv.c: steps towards resolution of #53512 (inspired by
	Alexey Novodvorsky <aen@logic.ru>'s patch).

	* app/menus.c (dia_menu_signal_proxy): checked that the signal
	handler is not NULL before transferring control to it... (fixes #52836)

	* app/app_procs.c (app_init): removed non-constant initialiser
	(fixes #52950)

	* objects/custom/custom_object.c:
	* objects/custom/shape_info.[ch]:
	* objects/custom/test.xml: merged patch #53476 from Steven Hawkins 
	<skh@mathstar.com>. This add support for a <svg:text> shape
	element, and some related style properties (font, font height, 
	alignment)

	* doc/custom_shapes: a precision about the meaning of case in a
	SVG path (closes #52364)

	* lib/dummy_dep.h: fix for SGI IRIX 6.2 (#53053, reported and
	fixed by <drk@sgi.com>)
	
2001-05-17  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/network/network.c:
	* shapes/network/Makefile.am:
	* shapes/network/hub.(shape|xpm) (NEW):
	* shapes/network/flash.(shape|xpm) (NEW):
	* shapes/network/rj45plug.(shape|xpm) (NEW):
	More shapes, less renderobjects.

2001-05-16  Cyrille Chepelov  <chepelov@calixo.net>
	
	* plug-ins/svg/render_svg.c: typo made exported ellipses
	corrupted (zero Y pseudo-radius).

	* objects/network/network.c:
	* objects/network/disc.c:
	* shapes/network/disc.(shape|xpm): Converted the first
	Renderobject into a shape. Normally, old diagrams should reload
	without problems (please check this against your diagrams). More
	flexibility should be gained that way. I intend to hunt and
	eradicate all renderobjects as I can commit cycles to that. 

	* objects/Makefile.am:
	* configure.in:
	* app/Makefile.am:
	* objects/sybase/sybase.c:
	* shapes/sybase/Makefile.am(NEW):
	* shapes/sybase/client.(xpm|shape) (NEW):
	* shapes/sybase/dataserver.(xpm|shape) (NEW):
	* shapes/sybase/ltm.(xpm|shape) (NEW):
	* shapes/sybase/repserver.(xpm|shape) (NEW):
	* shapes/sybase/rsm.(xpm|shape) (NEW):
	* shapes/sybase/stableq.(xpm|shape) (NEW): converted Sybase
	renderobjects into shapes. The Sybase objects are now not compiled
	anymore, and ready to be nuked if nobody objects in the next few weeks.
	
	* app/commands.c:
	* app/diagram.[ch]:
	* app/disp_callbacks.c:
	* app/display.[ch]:
	* app/interface.[ch]:
	* app/menus.[ch]:
	* app/modify_tool.c:
	* app/preferences.[ch]:
	* app/recent_files.c:
	* app/select.c: Added patch #52364 from Hubert Figuiere. This adds
	a menu bar reflecting the popup menu, to each display window. This
	is optional (changing the preference currently doesn't affect
	already opened windows; a few other rough edges to cut).

	* plug-ins/wpg/wpg.c:
	* plug-ins/xfig/xfig-import.c:
	* plug-ins/python/pydia-property.c:
	* plug-ins/python/pydia-properties.c:
	* plug-ins/python/pydia-geometry.c:
	* plug-ins/pstricks/render_pstricks.c:
	* lib/arrows.c:
	* objects/EML/dbox.c:
	* lib/ps-utf8.c: paleolithic C compilers choke on //. Should fix 
	#53054.

	* lib/ps-utf8.c: improved the clustering of alphabetic character
	definitions in custom encodings pages.
	
2001-05-02  Hans Breuer  <hans@breuer.org>

	* lib/object.h : OBJECT_COMMON_PROPERTIES_OFFSETS correct type 
	of 'obj_bb' to PROP_TYPE_RECT

	* objects/custom/custom_object.c : take all quarks into account, 
	not only 4 as copy&paste suggests

	* objects/uml/objects.c : completed the implementation of the
	property api to avoid reading of totally bogus data. Removed
	the PROBABLY_DEAD_CODE. It actually was dead code, but not because
	there was too much but too less ...
  
	The above changes removed all known crashes (mentioned below) 
	from the Property API. Property access is still incomplete though.

	* objects/flowchart/box.c :
	* objects/flowchart/diamond.c :
	* objects/flowchart/ellipse.c :
	* objects/flowchart/parallelogram.c :
	* objects/uml/classicon.c :
	* objects/uml/state.c : calculate number of quarks from quark array 
	size instead of using hardcoded values for consistence and to avoid 
	future bugs like the above
	
	* objects/eml/nlist.c : include <string.h> for strcmp()

	* lib/dia_xml.c : relax g_warning for values, which
	appear to be too small. There is nothing which prevents
	them while saving

	* plug-ins/python/pydia-geometry.c : changed stringifying of
	geometry objects accept BezPoint back to %f, which does not
	crash anymore, because all the data is intialized now and it
	simply is more readable than %e ...

	* plug-ins/python/python-startup.py : removed dependency
	to PyGtk, because it isn't required here and probably won't
	in i.e.: export filters.

	* plug-ins/python/gtkcons.py : create the gtkoutfile even
	if sys.stderr.fileno() isn't supported

	* app/makefile.msc : make version 0.88
	* plug-ins/makefile.msc : make version 0.88 an added new
	xfig files to build

2001-05-11  James Henstridge  <james@daa.com.au>

	* NEWS: remember to add news items this time.

	* dia.spec: update spec file for 0.88 release.

	* configure.in: up version number to 0.88

	* plug-ins/python/Makefile.am (EXTRA_DIST): fix up typo that was
	preventing any of the useful python scripts from being
	distributed.

	* sheets/Makefile.am (sheet-translation-report): fix bustage I
	introduced in my fixups for the 0.87 release :(

2001-05-10  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xfig/xfig-import.c: Finally got groups working.

2001-05-09  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xfig/xfig-import.c: Improvements to error handling and
	group manipulation.

2001-05-09  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/ps-utf8.[ch]:
	* lib/Makefile.am: fix makefile breakage which led to not
	including ps-utf8.[ch] in the released tarballs. 

2001-05-09  James Henstridge  <james@daa.com.au>

	* Makefile.am (core-translation-report): dist scripts needed for
	this target, and change to $(srcdir) before running.

	* sheets/Makefile.am (EXTRA_DIST): actually dist the sheets.  DATA
	files aren't automatically included in the tarball by automake
	because they could be generated files.

	* objects/EML/Makefile.am (EXTRA_DIST): fix directory names.

	* doc/en/Makefile.am (install-data-hook): fix up where graphics
	are installed.

	* configure.in: up version number to 0.87

	* plug-ins/python/*.py: no longer necessary to explicitly set
	sys.argv, as python.c does it for us now (like it should).

	* plug-ins/python/gtkcons.py: fix up so it plays nicely as a dia
	python plugin.

	* plug-ins/python/python-startup.py: startup script that imports
	all modules in $(datadir)/dia/python and ~/.dia/python.

	* plug-ins/python/python.c (dia_plugin_init): change so that it
	only runs the $(datadir)/dia/python-startup.py script.  Make sure
	that sys.argv and __main__.__file__ are set when calling the
	startup script.

	* plug-ins/python/Makefile.am: update makefile.  Make it install
	gtkcons.py plugin.  I haven't set any other plugins to install, as
	they look like they are mainly for debugging purposes.

	* configure.in: add tests to detect if python is available, so we
	can build the python plugin.  Only run if --with-python passed to
	configure.

2001-05-08  James Henstridge  <james@daa.com.au>

	* acinclude.m4: add macros for detecting python.

	* app/menus.c (dia_gnome_menu_get_widget): handle paths that point
	at GNOME_APP_UI_SUBTREE entries.
	(menus_add_path): function to add a menu item to the menubars.
	Uses a hash table to keep track of extra menu items it adds.  Also
	notifies the item factory about the entries so that accels can be
	saved for them.
	(menus_add_path): implement gtk only version.
	(menus_init): use menus_add_path() to add the menu.
	(plugin_callback): simplify.

2001-05-08  Steffen Macke <sdteffen@yahoo.com>

	* app/menu.c: removed #ifndef GNOME; GNOME build was broken
	
2001-05-08  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xfig/xfig-export.c: 
	* plug-ins/xfig/xfig-common.c: 
	* plug-ins/xfig/xfig-import.c: 
	* plug-ins/xfig/xfig.c: 
	* plug-ins/xfig/xfig.h: 
	* app/Makefile.am: Added support for exporting to Fig format
	(except splits, which are less powerful in Fig).  Some refactoring
	along the way.

2001-05-02  Hans Breuer  <hans@breuer.org>

	* plug-ins/python/debug_objects.py : added another
	test to get massive crashes from the Property API due
	to unintialized data.

	* app/menu.c : the callback_action wasn't incremented
	(should have checked my last optimization). Now more
	than one plug-in callback is supported again.

	* plug-ins/python/pydia-geometry.c : avoid crashes from
	glib, when trying to g_strdup_printf unintialized floats.

	* plug-ins/python/pydia-property.c : avoid crashes from
	because of string_data == NULL (PROP_TYPE_FILE, PROP_TYPE_STRING)

2001-05-01  Hans Breuer  <hans@breuer.org>

	* objects/makefile.msc : added eml
	* objects/eml/instantiation.c : initialize 'inst' pointer
	before using, zero initialization for objects
	* objects/eml/interaction-ortho.c :
	* objects/eml/interaction.c : zero initialization for objects

	* app/menus.c : removed Gimp mru stuff which slipped in at
	2000-08-15, was never activated and will never be needed, 
	because of Steffens recent file list patch added at 2001-01-05.

	* objects/eml/*.c : some more zero initialization of objects
	to avoid infinite (uninitialized) bounding boxes

	Implemented a callback api which allows plug-ins to register
	menu call backs. Dia for Gnome should compile, but will need 
	some extra tweaking to make it work because I can't test it.

	* plug-ins/python/pydia-error.h :
	* plug-ins/python/pydia-render.c : moved Pxthon function return 
	value handling from pydia-render.c to pydia-error.h, to make it
	usable for
	* plug-ins/python/diamodule.c : implement callback function
	registration from and relaying to Python code

	* app/menus.c : register and use plug-in menu callbacks

	* lib/filter.[hc] : implement filter_register_callback() and
	filter_get_callbacks() for the above
	* lib/libdia.def : export them

	* plug-ins/python/debug_objects.py (new file): 
	sample using the above

2001-04-27  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/shape/shape-export.c (new_shape_renderer): 
	The name of a shape is now taken from the dir, to conform with
	standard naming.

2001-04-25  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/properties.c (properties_show): Added title containing
	object type, plus (hopefully) fix of the ghost properties dialog.

2001-04-16  Cyrille Chepelov  <chepelov@calixo.net>

	* app/display.c: remove the display idle handler in case we
	destroy the ddisplay (caused crashes in ddd, probably random
	crashes elsewhere).

	* autogen.sh: 
	* configure.in:
	* Makefile.am: hack around gettext-0.10.36's new "features".
	
	* lib/properties.[ch]: added new function object_copy_props().
	Added new property type PROP_TYPE_ENDPOINTS

	* lib/connection.h: added support for load/saving through the
	properties interface.

	* lib/object.[ch]: object_load/save/copy_using_properties()
	support functions (code factorisations).
	
	* objects/GRAFCET/boolequation.c: check against null values in
	boolequation_set_value() and boolequation_destroy().

	* objects/GRAFCET/transition.c: Converted from lazyprops to
	standard properties. 31% less (x86) code !

	* objects/GRAFCET/condition.c: also converted from lazyprops to
	standard properties. Also killed lots of code.
	
2001-04-13  Hans Breuer  <hans@breuer.org>

	* plug-ins/wmf/wmf.cpp : changed text conversion from
	g_utf8_utf16 to g_convert usage. The latter function is already
	available in tml's last "official" Gtk+ version (2000-12-26).
	This change allows to use recent Dia with either the official
	version or the latest cvs "gtk-1-3-win32-production"-branch.

2001-04-14  Lars Clausen  <lrclause@cs.uiuc.edu>

	* Patch from David S. Thompson <dcthomp@mail.utexas.edu>:
	* app/disp_callbacks.c:
	- Allow submenus in DiaMenus.
	- Don't require DiaMenu.title to be non-null (so that
	  submenus aren't required to have titles)
 
        * objects/FS/function.c:
	- object menu now has submenus, an almost complete list of
          standard-basis verbs, and a start on nouns.
	- box padding, dash length, and other visual attributes are
	  scaled by the font size... eventually font height will be
	  a function property.
	- draw functions with smaller font to make initial view hold
          a reasonable number of functions.
	
2001-04-13  Cyrille Chepelov  <chepelov@calixo.net>

	* sheets/ER.sheet:
	* sheets/chronogram.sheet:
	* sheets/jigsaw.sheet:
	* sheets/sybase.sheet: Updated Dutch sheet translations from Dag
	Wieers <dag@wieers.com>

2001-04-13  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c (app_exit) : added g_return_if_fail (!app_exit_once)
	to ensure that all the deinitialization is only done once. Fixes
	recent app exit crash on win32

	* lib/dia_xml.c : provide isinf() replacement for msc which does only
	have _finite()

	* lib/libdia.def : updated

	* objects/makefile.msc : added wanlink.c 

	* objects/network/wanlink.c : added M_PI_2 definition for poor
	platforms which don't have one

	* objects/standard/arc.c :
	* objects/standard/zigzagline. c: part of ConectionBBExtras wasn't
	initialized which led to rather huge bounding boxes (try Ctrl^A on
	diagrams with Arcs or ZigZagLines).
	* objects/*/*.c : to avoid further bugs like the above changed all
	object initializations to g_malloc0 or g_new0


2001-04-09  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/paper.[ch]: get rid of "no previous prototype fo `foo'" by
	doing a s/T foo()/T foo(void)/ for all possible values of T and foo.

	* objects/UML/class.c: 
	* objects/UML/usecase.c:
	* objects/UML/large_package.c:
	* objects/UML/message.c:
	* objects/UML/object.c:
	* objects/UML/lifeline.c:
	* objects/FS/flow.c:
	* objects/FS/flow-ortho.c:
	* objects/FS/function.c:
	* objects/custom/custom_object.c:
	* objects/GRAFCET/vergent.c:
	* objects/chronogram/chronoref.c:
	* objects/SADT/box.c:
	* objects/SADT/annotation.c:
	* plug-ins/dxf/dxf-import.c:
	* plug-ins/xfig/xfig-import.c:
	* plug-ins/wpg/wpg.c:
	* app/command.c:
	* app/app_procs.c:
	* app/display.c: /* certainly more WIP than dead code there */
	Unused variables, unused static function definitions, forgotten or
	incomplete prototypes added or fixed, lack of const or unwanted const,
	etc. (mostly clean-ups of leftovers of the pre-properties era).
	Non-obvious cases bracketed by #define THIS_IS_PROBABLY_DEAD_CODE,
	please check these.

	* app/lineprops_area.c: More of the same. Missing prototypes
	added, and functions unused outside made static.

	* app/recent_files.c:
	* app/properties.c:
	* app/defaults.c: some variables are used only when doing a GNOME
	build.
	
	* app/magnify.c: missing #include <stdlib.h>.

	* app/paginate_gnomeprint.c: Unused variable; missing "message.h".

	These are a lot of clean-ups (by the way, this compiles and runs
	cleanly with "gcc-3.0 -O2 -Wall --std=gnu99" too !); please grep
	for DEAD_CODE, and if it's yours, judge it.
	
2001-04-07  Cyrille Chepelov  <chepelov@calixo.net>

	* plug-ins/dxf-import.c: some progress with the arcs; still some
	clean-ups to do and line width scaling issues to figure out.

	* objects/standard/arc.c: start_point and end_point properties
	(duplicated from standard/line.c)

	* plug-ins/xfig/xfig-import.c: zip ! zap ! no more dead DXF import
	code there.
	
2001-04-06  Cyrille Chepelov  <chepelov@calixo.net>

	* plug-ins/dxf-import.c: setlocale-related clean-ups and fixes ;
	preliminary support for arcs (doesn't work). Circles and ellipses are
	now transparent. Coordinate and width scaling are now a common 
	static constant (probably before morphing into a preference).
	
	* sheet/checktrans.py: improved error reporting. Made checktrans
	count lack of <name xml:lang="code"> as a lack of translation for
	language "code" (no, it's not a plot to bring down other
	language's scores !)
	
	* sheet/*.sheet: Ensured all sheets have an encoding="iso-8859-1"
	in the header, and have <name xml:lang="fr"> components.
	
2001-04-05  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/custom/custom_object.c: temporary hack to fix the shape
	bounding box reported by Ben A. Hetland. Proper fix isn't .87
	material, see bugzilla #52912.

2001-04-05  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/image.c (get_directory): Now uses
	G_SEPARATOR_CHAR_S instead of "/"

	* sheets/network.sheet: 
	* sheets/Logic.sheet:
	* sheets/Flowchart.sheet:
	* sheets/Electric.sheet:
	* sheets/Circuit.sheet:
	* sheets/ER.sheet:
	* sheets/Pneumatic.sheet:
	* sheets/SDL.sheet:
	* sheets/UML.sheet:
	* sheets/GRAFCET.sheet:
	* sheets/MSE.sheet:
	* sheets/chronogram.sheet:
	* sheets/civil.sheet:
	* sheets/network.sheet:
	Danish translations.
	
	* objects/standard/image.c (get_directory): Changed get_directory
	to use g_dirname to find the directory part.

2001-04-05  Cyrille Chepelov  <chepelov@calixo.net>

	* sheets/ER.sheet:
	* sheets/Electric.sheet:
	* sheets/Flowchart.sheet:
	* sheets/Logic.sheet:
	* sheets/network.sheet: More Dutch translations from Dag Wieers.

2001-04-04  Cyrille Chepelov  <chepelov@calixo.net>

	* sheets/checktrans.py: now emits a warning when two descriptions
	for a single language code are found.

	* Makefile.am:
	* sheets/Makefile.am: -translation-reports now also depend on their
	checktrans.py
	
2001-04-04  Cyrille Chepelov  <chepelov@calixo.net>

	* sheets/Circuit.sheet:
	* sheets/Contact.sheet:
	* sheets/Logic.sheet:
	* sheets/chronogram.sheet:
	* sheets/sybase.sheet: 
	Dutch translations from Dag Wieers <dag@wieers.com>

2001-04-04  Cyrille Chepelov  <chepelov@calixo.net>

	* po-checktrans.py: Now shows the detailed counts alongside the
	percentage of translations.
	
2001-04-03  Cyrille Chepelov  <chepelov@calixo.net>

	* Makefile.am:
	* po-checktrans (NEW):
	* po-checktrans.py (NEW): builds core-translation-report:
	percentages of core (gettext) translations done [Not placed into
	po/ where that should belong, because of integration fear^Wissues
	with gettextize]. 

	TO THE KIND ATTENTION OF PACKAGERS: core-translation-report and 
	sheets/sheet-translation-report probably ought to be copied on the 
	user's /usr/share/doc/dia (or equivalent) directory.

	* sheets/Makefile.am: sheet-translation-report now a simple
	EXTRA_DIST; make install won't install it by default. 
	
2001-04-03  Cyrille Chepelov  <chepelov@calixo.net>

	* app/preferences.c: changed the default grid colour to something
	less intrusive.	

	* shapes/SDL/*.shape:
	* sheets/SDL.sheet: renamed all SDL shapes to conform to the
	"$LIBRARY - $NAME" convention. THIS REQUIRES FIXING THE EXISTING
	DIA FILES (well, for files using SDL), see the mailing list
	archive "SDL (ab)using the global shape namespace" for a script to
	do this conversion.

	* sheets/SDL.sheet: translated into French
	* sheets/network.sheet: fixed XML typos. Yay ! 100% :-)
	
2001-04-02  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/dia_xml.c: made data_point() more paranoid

	* sheets/Makefile.am:
	* sheets/checktrans (NEW):
	* sheets/checktrans.py: Made checktrans handle more gracefully the
	absence of python and python-xml packages, and made the error
	message more helpful.
	
2001-04-01  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/render_object.c (new_render_object): Made initial handles
	behave like on most other objects.

	* app/load_save.c (read_objects): Fixed premature free'ing ofr
	typestr causing garbage.

2001-04-01  Lars Clausen  <lrclause@C194282.chmpgn1.il.home.com>

	* objects/FS/flow-ortho.c: Fixed a crashbug causes by not
	accouting for handle ordering through copy and save. (#51479)

2001-03-31  Cyrille Chepelov  <chepelov@calixo.net>

	* sheets/Circuit.sheet: Norwegian translation mistagged to German.

2001-03-31  Steffen Macke  <sdteffen@yahoo.com>

	* sheets/Circuit.sheet
	* sheets/UML.sheet
	* sheets/network.sheet: Updated German translations
	
2001-03-30  Cyrille Chepelov  <chepelov@calixo.net>
        * lib/arrows.[ch]:
	* lib/widgets.c:
	* app/lineprops_area.c: The return of the revenge of the arrow
	heads. Now all types covered by ISO 10303-201 should be covered.
	
2001-03-30  Cyrille Chepelov  <chepelov@calixo.net>

	* sheets/Flowchart.sheet: translations in probably Hungarian were
	a victim of cut-n-paste from the German one. Fixed (hopefully).
	* sheet/UML.sheet: translation in probably Norwegian was a victim
	of cut-n-paste from the French one. Fixed (hopefully).
	* sheets/Logic.sheet: French translation not tagged with
	xml:lang="fr".
	
	* sheets/checktrans.py:
	* sheets/Makefile.am: new file, sheet-translation-report, to be
	installed along the sheets, show how much of them has been
	translated into which language (I wish the result was prettier...)

	* po/README: most translators don't read this file, but anyway...

	* sheets/.cvsignore:
	* objects/network/.cvsignore: the usual negotiation with CVS.

2001-03-30  Cyrille Chepelov  <chepelov@calixo.net>

	* sheets/*.sheet: French translations

2001-03-28  Cyrille Chepelov  <chepelov@calixo.net>

	Added patch #52363 from Hubert Figuiere <hfiguiere@teaser.fr>:

	** objects/network/network.c:
	** objects/network/wanlink.c:
	** objects/network/pixmaps/wanlink.c:
	** sheets/network.sheet:
	** objects/network/Makefile.am: a better object to use instead of
	the older WAN Connection.
	
	** lib/geometry.[ch]: rotation matrix functions in geometry.c (derived from gimp)

	** objects/GRAFCET/vector.c: renamed Vector to GRAFCETVector to avoid a
	name clash 

	* objects/GRAFCET/vector.c: Re-renamed GRAFCETVector into
	Arc; kept the C file name (because CVS wouldn't like it), and
	still registering the older object name (but advertising the newer
	one in sheets/GRAFCET.sheet).	

2001-03-24  Hans Breuer  <hans@breuer.org>

	* app/dia.def : some plug-ins (currently only python, xfig) are using 
	functions from the dia executable. To get them working these functions 
	need to be explicit exported on win32. IMO the much cleaner way would
	be to move these functions to libdia, but that would require some
	long term restructuring ...

	* lib/libdia.def : updated

	* plug-ins/makefile.msc : build xfig plug-in

2001-03-24  Hans Breuer  <hans@breuer.org>

	* app/diagram.c : g_strdup (dia->filename) because it will be
	g_free ()d

	* app/display.c : set ddisp->renderer to NULL after destruction.
	This may solve or help to identify erroneous access to it after
	destruction.
 
	* plug-ins/wmf/wmf.cpp : convert string from utf8 to wchar to
	get 'umlauts' working

2001-03-22  Cyrille Chepelov  <chepelov@calixo.net>

	* object/chronogram/chronoline_event.c: stupid bug ; rises and falls
	were reversed... (look for the patch, and drink a beer to my
	stupidity)	
	
2001-03-23  Hans Breuer  <hans@breuer.org>

	* app/app_procs.c : don't g_error () if the config directory
	can't be created (at least not on windoze) because it's quite
	common that the user don't read or understand the FAQ ...

	* app/cursor.c : use ddisplay_active () instead of active_display
	from app/display.c

	* app/display.[hc] : made active_display var static and provide
	an accessor funtion ddisplay_active_diagram ()

	* app/dia-props.c : don't store the active_diagram, but ask
	for it everytime it needed.

	* lib/properties.h : #include "intl.h"

	* lib/makefile.msc : need to take care of inclusion order to
	avoid clashes with gtk+2.0's gdk-pixbuf

	* objects/makefile.msc : added uml/stereotype.c to build

2001-03-23  Lars Clausen  <lrclause@cs.uiuc.edu>

	* **/*.c: Added config.h to the remaining .c files, and changed
	all to be <config.h>.

2001-03-22  Steffen Macke <sdteffen@yahoo.com>

	* lib/arrows.c
	* lib/arrows.h
	* lib/widgets.c
	* app/lineprops_area.c: added new arrow types with double
	heads
	
2001-03-20  Steffen Macke <sdteffen@yahoo.com>

	* shapes/Civil/civil_gas_bottle.xpm
	* shapes/Civil/civil_gas_bottle.shape
	* sheets/civil.sheet
	* shapes/Civil/Makefile.am: Added gas bottle shape by Arne
	Battermann
	
2001-03-20  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/custom/shape_info.c (load_shape_info): 
	* objects/custom/shape_info.h: 
	* objects/custom/custom_object.c (custom_update_data): 
	Better support for text outside the box -- new attributes 'resize'
	and 'align' for text entity.  Align not fully supported yet.

	* lib/text.c (text_calc_boundingbox): Adding BB for cursor width.

2001-03-20  James Henstridge  <james@daa.com.au>

	* app/interface.c (display_data_received_callback): comment out
	status message.

2001-03-19  James Henstridge  <james@daa.com.au>

	* app/GNOME_Dia.oaf: rename from GNOME_Dia.oafinfo.

	* objects/UML/realizes.c: similar here.

	* objects/UML/implements.c: similar here.

	* objects/UML/component.c: similar here.

	* objects/UML/generalization.c: same here.

	* objects/UML/dependency.c: allow NULL for ->name and
	->stereotype.  This fixes a number of problems in loading saved
	files.

	* lib/properties.c: various changes so that NULL string properties
	should work.

	* objects/standard/line.c (line_update_data):
	line->extra.start_long and line->extra.end_long were not being
	initialised.  This fixes potential problems with the bounding box
	of "Standard - Line" objects.

2001-03-19  Hans Breuer  <hans@breuer.org>

	* app/commands.c : added win32 specific code to display a html
	file. #include "text.h" for text_delete_all prototype.

	* app/dia.ico :
	* app/dia.rc : (new) to give Dia win32 an icon

	* app/win32print.[ch] : new files to support direct postscript
	file printing on win32. Beware: it *requires* a ps-printer!

	* app/paginate_psprint.c : disable the signal code for win32 build
	and added small specific changes to support win32print.

	* app/makefile.msc : added win32print and linking shell32.lib

	* lib/libdia.def : updated

2001-03-18  Kevin Breit <battery841@mediaone.net>

	* doc/en/dia-C.omf: Added file.  Dia should now list in the Nautilus
          Help tabs.

2001-03-17  James Henstridge  <james@daa.com.au>

	* app/paginate_psprint.c (diagram_print_ps): add code that traps
	SIGPIPEs during printing.  This gets rid of a number of crashes
	caused by printing (eg. typing an incorrect print command).

	* dia.spec (%install): gzip the manpage.

	* lib/beziershape.c (beziershape_save): fix off by one error in
	beziershape save code, which was adding an extra segment to the
	object on save.

	* app/menus.c: add a separator in the gnome version of the help
	menu.

	* app/app_procs.c (app_init): add a --nosplash argument which
	disables the splash screen.

	* app/dia_embedd.c (main): don't leave the splash screen open for
	embeddable component.

	* app/splash.c (app_splash_init): the gtk_widget_show_now() call
	didn't seem to be showing the splash screen like expected, so I
	have replaced it with some code that calls gtk_main() until the
	first exposure of the window.

2001-03-16  James Henstridge  <james@daa.com.au>

	* app/Makefile.am (EXTRA_DIST): add extra pixmaps.

	* objects/UML/Makefile.am (libuml_objects_la_SOURCES): add
	stereotype.h

	* lib/Makefile.am (libdia_a_SOURCES): add diavar.h here.

	* app/Makefile.am (dia_core_files): remove splash.h from file
	list, as it doesn't exist.

	* doc/en/Makefile.am (uninstall-local): remove the docdir on
	uninstall.

	* doc/Makefile.am (uninstall-local): target to remove the C
	symlink.

	* dia.spec (%files): include the documentation in the package.

	* app/menus.c (toolbox_menu_items): add menu item for manual,
	which calls help_manual_callback.

	* app/commands.c (help_manual_callback): find help file and load
	netscape to view it.

	* app/commands.h: add prototype for help_manual_callback()

	* doc/Makefile.am (helpdir): similar here.

	* doc/en/Makefile.am (helpdir): make the helpdir
	$(pkgdatadir)/help/en in the non gnome case.

	* configure.in (HAVE_GNOME): add conditional.

	* doc/en/Makefile.am: handle the graphics in a more general way,
	so it is easier for Kevin to add them to the build (just add them
	to the GRAPHICS var).

	* app/Makefile.am (embed_extra_print_files): make the case of
	building without gnome-print support but with bonobo support work.
	dia-embedd needs to be include the gnome-print

2001-03-09  Cyrille Chepelov  <chepelov@calixo.net>

	* samples/Makefile.am: included all samples in the distribution....
	
2001-03-09  Cyrille Chepelov  <chepelov@calixo.net>

	* configure.in: removed premature test for DPS. Added -*- m4 -*-
	at the beginning. Made HAVE_UNICODE non-default. po/es_ES.po has
	vanished, removed it from ALL_LINGUAS.

	* lib/charconv.[ch] (NEW): a very small wrapper around
	unicode_iconv to convert strings between utf8 and local charset
	(actually, ISO-8859-1, though one can do
	CFLAGS="-DEFAULT_8BIT_CHARSET=\"ISO-8859-2\"" and the like).

	* lib/ps-utf8.[ch] (NEW): A PostScript Unicoder ; a smallish
	library to help build Postscript streams which use as many custom
	font encodings as necessary to correctly represent all characters
	used (testing from users with non-latin1 and/or more than 256
	characters in routine use *very* welcome).

	* app/Makefile.am, lib/Makefile.am: integrated these into the
	build process.

	* shapes/Logic/.cvsignore (NEW): .cvsignore
	
	* app/render_eps.h: forwarded some changes Lars forgot to include.
	* app/render_eps.c: turned off ASCII85 and FILTERS, as this
	doesn't yet build.

2001-03-08  Kevin Breit <battery841@mediaone.net>

	* doc/en/home_network.png: Added file.
	* doc/en/line_props.png: Added file.
	* doc/en/usage-objects.sgml: Added two graphics to file.
	* doc/en/usage-quickstart.sgml: Added one graphic to file.

2001-03-06  Kjartan Maraas  <kmaraas@gnome.org>

	* app/grid.h: Place comment around text after #endif.
	* lib/bezier_conn.c: #include <string.h>.
	* lib/beziershape.c: #include <string.h>.
	* lib/connpoint_line.h: Comment after #endif.
	* lib/dia_dirs.c: #include <string.h>.
	* lib/element.c: Same.
	* lib/lazyprops.c: #include <config.h> and "intl.h".
	* lib/lazyprops.h: Comment out text after #endif.
	* lib/neworth_conn.c: #include <string.h>
	* lib/orth_conn.c: Same here.
	* lib/poly_conn.c: Here too.
	* lib/polyshape.c: And here.
	* lib/properties.c: Remove #include "intl.h" from here and add
	an array of static strings to work around bug in gettext that
	makes it miss strings in a #define body.
	* objects/GRAFCET/action_text_draw.h: Comment out text after #endif.
	* objects/GRAFCET/boolequation.h: Same here.
	* objects/chronogram/chronoline_event.h: Add prototype for
	destroy_cle().
	
2001-03-05  Lars Clausen  <Lars R. Clausen <lrclause@cs.uiuc.edu>

	* objects/FS/function.c: 
	* objects/FS/flow.c: 
	* objects/FS/flow-ortho.c: 
	Updated to use properties.

2001-03-03  James Henstridge  <james@daa.com.au>

	* lib/lazyprops.c (__propdlg_build_enum): translate the radio
	button labels when creating them.

2001-02-28  Lars Clausen  <Lars R. Clausen <lrclause@cs.uiuc.edu>

	* objects/UML/actor.c
	* objects/UML/realizes.c 
	* objects/UML/implements.c 
	* objects/UML/generalization.c 
	* objects/UML/dependency.c 
	* objects/UML/constraint.c
	Updated to use properties.
	
	* objects/UML/stereotype.c 
	* objects/UML/stereotype.h
	Generalized to any kind of bracketting.
	
2001-02-28  James Henstridge  <james@daa.com.au>

	* app/menus.c: add help entry to the help menu.  Need to get this
	working for the non GNOME case as well (maybe put help under
	$(datadir)/dia/help for non GNOME?)

	* doc/en/topic.dat: add a topic.dat file for GNOME menus.

	* doc/en/dia-manual.sgml (legalnotice): add an id attribute to
	this element so that we get a meaningful filename in the html
	translation.

	* doc/Makefile.am, doc/en/Makefile.am: new makefiles to handle the
	documentation.

	* configure.in (DB2HTML): add a check for the db2html program, and
	set an automake conditional if it is found.

	* Makefile.am: remove EXTRA_DIST rules that cover doc/ directory,
	and descend into doc/ directory while building.

	* configure.in (AC_OUTPUT): add doc/ makefiles to output list, now
	we need more complex rules for building the docs.

2001-02-25  Hans Breuer  <hans@breuer.org>

	* config.h.win32 : some cleanup

	* app/prefererences.c : g_scanner_(freeze|thaw)_symbol_table
	are deprecated since glib-1.3.2. Sorry needing to use them
	contionally, but there is no glib-1.2 for win32

	* app/recent_files.c : use g_strescape (params) conditionally

	* lib/connection.c : include string.h for memcpy

	* lib/geometry.h : added some stuff for compatibility with
	msvc, which previously came from included config.h

	* lib/libdia.def : updated

	* objects/makefile.msc : updated

	* objects/GRAFCET/action.c(490) : fixed warning C4700: local variable 
	'extra' used without having been initialized

	* objects/network/bus.c(658) : initialize 'extra'

	* plug-ins/makefile.msc : updated

	* plug-ins/cgm/cgm.c :
	* plug-ins/pstricks/render_pstricks.c : 
	g_free() memory allocated by dia_image_rgb_data(). Plugs possibly 
	huge memory leaks.

	* plug-ins/python/python.c : use HAVE_DIRENT_H

2001-02-23  Lars Clausen  <Lars R. Clausen <lrclause@cs.uiuc.edu>

	* lib/connection.c (connection_update_boundingbox): 
	Made the BB shrink on right and lower sides, too.

2001-02-23  Kjartan Maraas  <kmaraas@gnome.org>

	* */*.c: #incude <config.h> at the top.
	* */*.h: Remove include of "config.h" since it should only
	be included in .c files and at the very top for things to
	work.
	* sheets/*.sheet: Updated Norwegian translations.
	
2001-02-22  Lars Clausen  <Lars R. Clausen <lrclause@cs.uiuc.edu>

	* objects/UML/small_package.c: 
	* objects/UML/class.c: 
	* objects/UML/node.c: 
	* objects/UML/usecase.c:
	* objects/UML/lifeline.c: 
	* objects/UML/message.c:
	Various cleanup of properties in particular.  Now much more use of
	standard properties.

	* lib/diagramdata.c (layer_render): Visualization of bounding
	boxes, for debugging purpoises.

2001-02-22  Cyrille Chepelov  <chepelov@calixo.net>

	* lib/geometry.h:
	* lib/connection.[ch]:
	* lib/poly_conn.[ch]:
	* lib/polyshape.[ch]:
	* lib/bezier_conn.[ch]:
	* lib/beziershape.[ch]:
	* lib/orth_conn.[ch]:
	* lib/neworth_conn.[ch]:
	* lib/element.[ch]: Changed a bit the _update_boundingbox()
	interface. Now the parent elements have an extra_spacing
	structure, which child objects just need to fill, to take care of
	most arrow & line width extra space needs.

	* objects/**/*.c: updated all objects to the new interface.
	While at it, killed all instances of (Object *) downcasts (phew !)

	* objects/GRAFCET/condition.c: removed the arrowhead, which IEC848
	doesn't speak about.
	
2001-02-21  Lars Clausen  <Lars R. Clausen <lrclause@cs.uiuc.edu>

	* sheets/Logic.sheet: New sheet for Logic symbols.

2001-02-21  James Henstridge  <james@daa.com.au>

	* app/menus.c (dia_gnome_menu_get_widget): new function to find a
	widget by its path name.  Walks the GnomeUIInfo heirachy rather
	than widget tree, compares untranslated label names and ignores
	underscores in the labels.
	(menus_get_item_from_path): use dia_gnome_menu_get_widget so that
	lookups are not dependent on the current locale, as with
	gnome_app_find_menu_pos.

	* acconfig.h: guard against multiple inclusion of config.h.

	* app/select.c (select_style_callback): simply set the selection
	style to the value of action.

	* app/menus.c (menus_init): simplify the item factory based menu
	code a bit.  It looks like it was using some code cut and pasted
	from the gimp, which looked a bit unnecessary.  Things work fine
	without it.
	(selectmenu): set the action to the type of selection mode
	requested.
	(display_menu_items): use the symbolic enumeration values for the
	action field.

	* app/plugin-manager.c: 
	* app/plugin-manager.h: 
	* app/filedlg.c:
	* app/filedlg.h: 
	* app/select.c:
	* app/select.h: change prototypes.

	* app/commands.c: update all callback prototypes, and get rid of
	some #ifdef GNOME's.

	* app/commands.h: change function prototypes.

	* app/dia_embedd.c (save_fn):
	s/ex_Bonobo_IOError/ex_BonoboStorage_IOError/

	* app/menus.c (menus_init): for gnome menus, use
	gnome_app_fill_menu_custom and pass in a GnomeUIBuilderData
	structure that proxies the callbacks to have the same signature as
	GtkItemFactory type 1 callbacks.
	(menus_init): for GTK menus, change from callback type 2 to type
	1.
	(display_menu_items): add back tearoffs.  I don't know who removed
	these for the gtk menu case.

2001-02-20  Kevin Breit <battery841@mediaone.net>

	* doc/en/usage-objects-special.sgml: Fixed a few of the special
        object descriptions.  More to come in the next few days.

2001-02-20  Lars Clausen  <lrclause@cs.uiuc.edu>

	* app/render_eps.c: Fixed for internationalized floating point
	output. 

	* objects/UML/note.c: Fixed properties -- was missing
	Get/ApplyPropertiesFunc.  Also improved update to recalculate text
	position. 

2001-02-19  Lars Clausen  <lrclause@cs.uiuc.edu>

	* plug-ins/xfig/xfig-import.c: 
	File added importing xfig files.  Still very rough, but good
	enough to let others hack on it.

2001-02-07  Cyrille Chepelov  <chepelov@calixo.net>

	* app/interface.c:
	* app/linewidth_area.c:
	* lib/lazyprops.c:
	* lib/properties.c:
	* lib/widgets.c:
	* objects/ER/attribute.c:
	* objects/ER/entity.c:
	* objects/ER/relationship.c:
	* objects/custom/custom_object.c:
	* objects/flowchart/box.c:
	* objects/flowchart/diamond.c:
	* objects/flowchart/ellipse.c:
	* objects/flowchart/parallelogram.c:
	* objects/standard/box.c:
	* objects/standard/textobj.c: per Vlad Harchev's request, made
	page sizes of gtk_adjustments different than their step sizes.
	When sensible values of page size weren't found (overwhelming
	majority of cases), page sizes were set to 10.0 * respective step
	size.	

2001-02-07  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/network/hub.c: 
	Patch from Hubert Figuiere applied, adding connection points.

2001-02-02  James Henstridge  <james@daa.com.au>

	* app/display.c (new_display): set update id to 0 here.
	(ddisplay_update_handler): rename from ddisplay_flush, and set
	update_id to 0 at end of processing.
	(ddisplay_flush): new implementation that simply sets an idle
	handler to perform the actual drawing.

	* app/display.h: add structure member to hold the redraw idle
	handler id.

2001-01-31  Lars Clausen  <lrclause@cs.uiuc.edu>

	* objects/standard/ellipse.c (ellipse_copy): 
	* objects/standard/zigzagline.c (zigzagline_copy): 
	Fix of copying provided by Martin Hawlisch.

2001-01-23  Kevin Breit <battery841@mediaone.net>

	* doc/en/graphics/: added directory

	* doc/en/graphics/greendots.png: added file

	* doc/en/*sgml: made minor and some major changes to prepare for 1.4
        release.

2001-01-23  Kevin Breit <battery841@mediaone.net>

	* doc/en/*sgml: made some grammar changes and fixed a few markup bugs.
			thanks to John Fleck!

2001-01-21  Kevin Breit <battery841@mediaone.net>

	* doc/en/*sgml: made just minor changes to a few lines; nothing major.

2001-01-12  Michael Meeks  <michael@helixcode.com>

	* app/dia_embedd.c (init_server_factory): do a bonobo_activate
	so our POA gets setup properly.

	* app/paginate_gnomeprint.c (paginate_gnomeprint): g_free
	things we g_malloc.

	* configure.in: Use bonobox_print.

	* app/dia_embedd.c (embeddable_factory): add print interface.
	(object_print): impl.

2001-01-11  Michael Meeks  <michael@helixcode.com>

	* app/dia_embedd.c (embeddable_factory): aggregate PersistFile.
	(load_fn, save_fn): impl.
	(view_factory): hide modified status bar, & use activate fn.
	(refresh_view): force redraws of the views.
	(view_show_hide): split from
	(dia_view_activate): here.

	* app/diagram.c (diagram_load_into): split from diagram_load.
	(new_diagram): simplify bu splittin stuff into
	(diagram_init): here.

2001-01-10  Steffen Macke <sdteffen@yahoo.com>

	* shapes/jigsaw/*.shape: replaced #000000 with foreground
	and #ffffff with background
	
2001-01-08  Steffen Macke <sdteffen@yahoo.com>

	*configure.in: GTK+-build was broken due to missing
	have_bonobo=no
	
2001-01-06  Michael Meeks  <michael@helixcode.com>

	* app/dia_embedd.c (main): add running context support.
	(dia_embeddable_destroy): remove old running object counting.
	(embeddable_factory): ditto.
	(view_factory): comment out menu path hiding.

	* lib/sheet.c (load_register_sheet): use free to free
	stuff from libxml not g_free.

	* acconfig.h: kill cover for USE_BONOBOX and USE_OAF

	* configure.in: remove USE_OAF checks, check for a precice
	Bonobo version >= 0.31, revamp bits.

	* app/dia_embedd.c (init_server_factory): upd.
	(init_dia_factory): remove OAF conditionals, everything uses
	oaf now.

	* app/GNOME_Dia.oafinfo: rename OAFIIDs

	* app/Makefile.am: remove ancient gnorba code.
	rename dia.oafinfo to GNOME_Dia.oafinfo

2001-01-07  Hans Breuer <Hans@Breuer.Org>

	* config.h.win32
	* install.win32
	* readme.win32 : some more files required or useful to build 
	Dia on win32

	* plug-ins/wmf/wmf.cpp : fixed open issues like fill_arc and
	fill_bezier implementation, boundary drawing in fill mode, etc.
	Next one complaining gets the source, uncommented ...

	* shapes/network/router-symbol.xpm 
	* shapes/network/switch-atm-symbol.xpm 
	* shapes/network/switch-symbol.xpm : removed "-*- picture -*- "
	from /* XPM */ header, cause it stopped Dia/gdk_pixbuf to detect 
	the files as XPMs. Maybe the X versions of these functions are more
	tolerant ...

2001-01-06  Steffen Macke <sdteffen@yahoo.com>

	* plug-ins/python/Makefile.am: added libart path

	* plug-ins/python/python.c: added dirent.h

	* configure.in: added es_ES and pt_BR to ALL_LINGUAS
	
2001-01-06  Hans Breuer <Hans@Breuer.Org>

	* objects/uml/actor.c
	* objects/uml/branch.c
	* objects/uml/class.c
	* objects/uml/classicon.c
	* objects/uml/component.c
	* objects/uml/large_package.c
	* objects/uml/node.c
	* objects/uml/note.c
	* objects/uml/object.c
	* objects/uml/small_package.c
	* objects/uml/state.c
	* objects/uml/usecase.c : started to implement the generic property
	interface for the uml objects. Would appreciate some help on how
	to implement properties which are list of properties themselves,
	e.g. member functions and their parameters of UMLClass.

2001-01-06  Hans Breuer <Hans@Breuer.Org>

	* plug-ins/python/diamodule.c : finally ported to win32.
	Added new objects and implemented register_export function.

	* plug-ins/python/pydia-object.h
	* plug-ins/python/pydia-display.c
	* plug-ins/python/pydia-handle.c
	PyObject_HEAD_INIT needs some tweakink on win32. Done in
	pydia-object.h; others files simply using it.

	* plug-ins/python/pydia-layer.c : reflect 
	layer_find_closest_connection(_)point renaming

	* plug-ins/python/pydia-object.c : add property properties.
	Also change bounding_box to DiaRectangle.

	* plug-ins/python/python.c : extended error reporting; use
	all *.py files from Dia's plug-in dir instead of hardcoded
	test.py. This sollution should be fine with Win32, but on
	Unix it may need some tweaking (dunno) ...

	* plug-ins/python/export-object.py
	* plug-ins/python/export-render.py : test and documentation 
	implementations for export filter implementations in Python

	* plug-ins/python/pydia-color.[hc]
	* plug-ins/python/pydia-diagramdata.[hc]
	* plug-ins/python/pydia-error.[hc]
	* plug-ins/python/pydia-export.[hc]
	* plug-ins/python/pydia-font.[hc]
	* plug-ins/python/pydia-geometry.[hc]
	* plug-ins/python/pydia-image.[hc]
	* plug-ins/python/pydia-properties.[hc]
	* plug-ins/python/pydia-property.c
	* plug-ins/python/pydia-render.c : new objects in new files 

	* plug-ins/python/makefile.am : added new files but can't test it

	* plug-ins/python/pydia.def
	* plug-ins/python/makefile.msc : for win32 build

	* plug-ins/cgm/cgm.c
	* plug-ins/dxf/dxf-import.c
	* plug-ins/dxf/dxf-export.c
	* plug-ins/hpgl/hpgl.c : reflect export API change

	* plug-ins/shape/shape-export.c : reflect export API change
	and check for libart (better the availibility of a png exporter) 
	at run-time instead of compile-time. 

2001-01-06  Steffen Macke <sdteffen@yahoo.com>

	* app/recent_files.h was missing from Hans's commit

	* plug-ins/shape/shape_export.c: shape export was broken
	due to interface changes
	
2001-01-05  Hans Breuer <Hans@Breuer.Org>

	Applied Steffen's recent file list patch :
	* app/Makefile.am : added recent_files.[hc]
	* app/diagram.c : add files to recent file list
	* app/menus.c : add recent file menu
	* app/app_procs.c : changed initialization order to
	make recent file list work with command line processing.

	The Filter export()/import() functions have got an additional 
	parameter to allow multiple filters via one C callback (required
	for Python bindings)

	* app/commands.[hc] : corrected the signature for gtk menu callback
	functions, which actually use the second or third parameter. This
	is the absolute minimum change to make these functions/menu entries
	work again. Using the other possible gtk menu callback signature
	would have required one more function to change. (see mailing list
	thread "Objects/Align/Equal Distance" for more information.

	* app/disp_callbacks.c : applied Gustavo J.A.M. Carneiro's
	zoom-combo focus patch

	* app/display.c
	* app/interface.c : wrapped the Zoom Combo code into 
	#ifndef WITHOUT_ZOOM_COMBO because IHMO it isn't an useabilty
	improvement but cluttering the user interface. Also it wasn't
	compiling on Win32 anyway. The win32 version does define 
	WITHOUT_ZOOM_COMBO to keep the old look. 
	There are plans to use the statusbar to display size and placement
	of selected objects, whereas the Zoom Combo would need to get out
	of the way as well.

	Added "Save Changes?" to diagram close dialog. Hopefuly the
	Yes/No/Cancel option isn't too much windoze like. IHMO this is
	an useability improvement.

	* app/export_png.c
	* app/filedlg.c
	* app/load_save.c
	* app/layer_dialog.c
	* app/paginate_psprint.c
	* app/render_eps.c
	- reflect signature changing of filter->export function
	- replaced '/' with G_DIR_SEPARARTOR where appropriate

	* app/diaunitspinner.c
	* app/render_libart.c
	added misssing headers like <string.h>

	* app/object_ops.c : fixed copy&paste bug in dialog string

	* app/splash.c : gdk_widget_show_now () does not ensure actual
	drawing of the splash screen, at least not on win32. Reuse the
	previous implementation with gtk_main_iteration() again.

	* */makefile.msc : make use of the build module (available in
	gnome-cvs/build. Updated for other source changes

	* lib/filter.h : added an user_data pointer to <ex/im>port()
	function signature and Dia<Im/Ex>portFilter to allow different
	filters to reuse the same callback function

	* lib/font.c : #include <string.h>

	* lib/orth_conn.c 
	* lib/poly_conn.c 
	* lib/poly_shape.c 
	* lib/neworth_conn.c
	* lib/text.c : don't mix allocator functions (g_)realloc, free, ...

	* */*.def : export function definition files required by win32 build

	* objects/custom/custom.c : #include <string.h>

	* plug-ins/pstricks/render_pstricks.c
	* plug-ins/shape/shape_export.c
	* plug-ins/svg/render_svg.c
	reflect changes to filter export function signature

	* plug-ins/wmf/wmf.cpp : fixed indent and scaling. It now should
	mostly work as expected
	* plug-ins/wmf/wmf_gdi.[hc] : Updated comment. Still not used
	to build the wmf plug-in because on the one hand the GDI emulation 
	isn't finished and on the other hand it isn't required when building
	for win32. Is there anybody out there, who wants to save WMF on non
	windoze platforms ?

	* plug-ins/wpg/wpg.cpp : fixed scaling to take axis dependent
	offset into account.

2001-01-02  Steffen Macke <sdteffen@yahoo.com>

	* app/Makefile.am: added missing plug-ins to run_dia.sh

	* lib/paper.c: added paper sizes A0, A1, A2

	* objects/UML/class.c
	objects/UML/class.h
	objects/UML/class_dialog.c: added support for colored UML
	classes
	
2000-12-30  Kevin Breit <battery841@mediaone.net>

	* doc/en/usage-customization.sgml: added more content

2000-12-24  Kevin Breit <battery841@mediaone.net>

	* doc/en/usage-layers.sgml: added file, contributed by Remypsb
	<remy.viard@laposte.net>

2000-12-24  Steffen Macke <sdteffen@yahoo.com>

	* added limiting lines to Civil Engineering sheet,
	fixed vertical pump icon
	
2000-12-20  Steffen Macke <sdteffen@yahoo.com>

	* updated/additional Civil Engineering shapes: better icons,
	shapes use foreground/background colors now and are filled
	
2000-12-03  Kevin Breit  <battery841@mediaone.net>

	* doc/en/dia-manual.sgml Integrated a few diffs.  New section should be
        the selection <sect1>

2000-11-29  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* app/load_save.c (diagram_data_save): avoid using obsoleted
	libxml calls (only matters when compiling with libxml2)

2000-11-25  James Henstridge  <james@daa.com.au>

	* app/disp_callbacks.c (ddisplay_drop_object): add a function to
	handle the tool drops on the canvas.

	* app/interface.c (display_data_received_callback): do the check
	to make sure that the drag is from a local toolbox here as well.

	* app/interface.c (create_tools): unref the pixmap/mask after
	creating the GtkPixmap.
	(tool_setup_drag_source): function to set up a drag source for
	create object tool buttons.
	(create_tools): setup drag source for CREATE_OBJECT_TOOL's.
	(fill_sheet_wbox): same here.
	(create_display_shell): set up the display canvas as a drag
	destination.
	(display_drop_callback, display_data_received_callback): functions
	to handle drops of tool buttons.

	* app/menus.c (menus_init): don't use gnome_popup_menu_new().  It
	does weird shit to the user_data pointer for a menu item.  Object
	alignment should work again now.

	* app/splash.c (get_logo_pixmap): don't unref the bitmap if it is
	NULL, and mark this function static.
	(app_splash_init): use gtk_widget_show_now() instead of the
	gtk_main_iteration loop.
	(app_splash_init): connecting gtk_widget_destroy to the destroy
	signal of a widget seems pretty useless.

2000-11-23  Kevin Breit <battery841@users.sourceforge.net>

	* doc/en/dia-manual.sgml:
		Added sect1 for advanced object types.  Starting development
                on that part.

2000-11-18  Kevin Breit <battery841@mediaone.net>

	* doc/en/dia-manual.sgml:
		Stupid spelling fixes.

2000-11-18  Kevin Breit <battery841@mediaone.net>

	* doc/en/dia-manual.sgml:
        	Just some small changes I made.  Props to Greg LeBlanc on the
                recommendations.

2000-11-17  Alexander Larsson  <alla@lysator.liu.se>

	* app/display.c:
	(ddisplay_add_display_area): Clip input rectangle to
	the visible part of the display.
	(ddisplay_scroll): Optimization, don't scroll and
	redraw if moving to the same position as before.

	* app/render_libart.c (renderer_libart_copy_to_window):
	Removed sanity check. Now moved to ddisplay_add_display_area().

	* lib/diavar.h:
	Added return at end of file.
	
2000-11-13 Kevin Breit <battery841@mypad.com>
 	* doc/en/dia-manual.sgml
		Commited manual changes from Henry House <hajhouse@houseag.com>

2000-10-21 Hans Breuer <Hans@Breuer.Org>
	* lib/beziershape.c :
		The previous code was accessing unowned memory due to IHMO
		wrong index calculation. Now it appears to be fixed.
		*Please Review!*
 
	* lib/makefile.msc
	* plug-ins/makefile.msc
	* objects/makefile.msc
	* app/makefile.msc: (new files)
		Makefiles for Dia on Win32, Micro$oft VC only.

	* plug-ins/pstricks/render_pstricks.c
	* plug-ins/dxf/dxf-import.c
	* plug-ins/shape/shape-export.c
	* plug-ins/svg/render_svg.c
	* app/commands.c
	* app/filedlg.c
	* app/preferences.c
	* app/render_eps.c
	* lib/sheet.c
	* lib/plug-ins.c
	* objects/custom/custom.c
	* objects/standard/image.c
		portability (not only win32): use HAVE_UNISTD_H, HAVE_DIRENT_H 
		where	appropriate, add missing prototypes like <string.h>

	* plug-ins/wmf/wmf_gdi.cpp
	* plug-ins/wmf/wmf_gdi.h:
		start of wmf write functions for non Win32 platform. Not 
		finished yet. The other way to get it working maybe to
		link the plug-in against wine libs.
		
	* plug-ins/wpg/wpg.c : add missing brace

	* app/load_save.c :
		Handling for unknown objects at load time. Previously Dia
		was crashing, if you try to load a file referencing objects
		whiches plug-ins aren't installed/available. Now it spits out 
		a warning and ignores the unknown objects.

	* app/interface.c
		toolbox DND support for files like The Gimp does it.

	* app/main.c
	* app/app_procs.h
		Simple splash screen support and usage.

	* app/app_procs.c
		Splash screen, portability fixes, dont' g_error if there is
		g_get_homedir return NULL. This may remove the one and only
		FAQ for Win32.

	* app/menus.c :
		Make it compile without ENABLE_NLS

	* app/render_libart.c :
		Sanity check to avoid calling libart with wrong window coordinates.
		They come from the update handler. Direct Gdk is dealing nicely
		with coordinates out of range, libart does access un-owned memory
		in this case, mostly causing crashes.

	* app/winmain.c: (new file) Export the Win32 Gui version of the
		main function. This file is only required for Windoze.

	* app/splash.c: (new file) splash screen implementation

	* lib/color.h
	* lib/font.h
	* lib/diavar.h: (new file)
		moved special variable export code to diavar.h, because it is
		needed in color.h and font.h

	* lib/paper.c :
		M$VC cann't export inlined functions. Quick hack to let it
		link again. Probably the glib mechanics should be used here?

	* objects/UML/lifeline.c : initialize var before usage

	* objects/GRAFCET/step.c : removed unused var

2000-10-14  James Henstridge  <james@daa.com.au>

	* app/render_gnomeprint.c (draw_image): change code so images
	don't get flipped when printing.

	* app/paginate_gnomeprint.c (diagram_print_gnome): check to make
	sure that the return value of
	gnome_print_context_new_with_paper_size is not NULL.

	* app/render_gnomeprint.c (draw_arc): add code to convert arcs
	into a series of bezier segments.
	(fill_arc): similar code to handle filled arc segments.

2000-10-12  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* app/app_procs.c
	* app/commands.c
	* app/dia-props.c
	* app/diagram.c
	* app/diagram.h
	* app/disp_callbacks.c
	* app/display.c
	* app/linewidth_area.c
	* app/paginate_psprint.c
	* app/preferences.c
	* app/undo.c
	* app/font.c
	* app/message.c
	* app/neworth_conn.c
	* app/orth_conn.c
	* objects/standard/box.c: various small changes to get rid of 
	annoying warnings (eg faulty prototypes and unused variables)

	* app/disp_callbacks.c
	* app/cursor.h
	* app/magnify.c
	* app/magnify.h: update magnify tool icon when pressing/releasing
	shift. I will try to make something more general so that similar
	things can be used by other tools.

	* shapes/SDL/inout.shape
	* shapes/SDL/return.shape: fixed some typos

2000-10-09  James Henstridge  <james@daa.com.au>

	* objects/custom/shape_info.c (parse_path): apply patch from
	Robert Young <robertdotyoung@dsto.defence.gov.au> to fix bug
	#25221

2000-10-08  James Henstridge  <james@daa.com.au>

	* objects/standard/image.c (image_set_props): if the file could not
	be loaded, show the broken image icon.

	* plug-ins/Makefile.am (SUBDIRS): add shape to the subdirs list.

	* plug-ins/shape/*: the shape export plugin by Steffen Macke.

	* app/interface.c (fill_sheet_wbox): use gdk-pixbuf to load the
	object icon when loading from a file.  This allows you to have PNG
	icon files for shapes.

2000-10-07  James Henstridge  <james@daa.com.au>

	* app/Makefile.am (dia_LDADD): remove GDK_IMLIB_LIBS reference.

	* lib/Makefile.am, app/Makefile.am (INCLUDES): remove
	GDK_IMLIB_CFLAGS reference.

	* app/commands.c (help_about_callback): remove imlib code.

	* lib/dia_image.c: only include the pixbuf version of the image
	routines.

	* acconfig.h: remove the HAVE_GDK_PIXBUF flag from here.

	* configure.in (CPPFLAGS): remove the check for imlib, as we now
	require gdk-pixbuf.

	* plug-ins/pstricks/render_pstricks.c (new_pstricks_renderer):
	conditionally define \setfont as well.

2000-10-05  James Henstridge  <james@daa.com.au>

	* plug-ins/pstricks/render_pstricks.c (new_pstricks_renderer): fix
	preamble so that we define \setlinejoinmode and \setlinecaps
	commands conditionally on them being undefined.  This way, the
	pstricks output files should work without modification, and will
	support the commands when they are implemented in pstricks.

2000-10-05  Szabolcs Ban  <shooby@gnome.hu>

	* dia.desktop: added hungarian translations to dia.desktop

2000-10-04  James Henstridge  <james@daa.com.au>

	* sheets/UML.sheet: fix typo.

	* objects/custom/shape_info.c: use strtod instead of g_strtod.
	(parse_path): actually call setlocale around strtod calls.

	* lib/dia_xml.c: use strtod rather than g_strtod.  We wrap each
	call in setlocale(LC_NUMERIC, "C"), so there is no reason to call
	the g_strtod wrapper.

	* shapes/SDL/: add SDL shapes from Rubens Ramos
	<rubens_ramos@yahoo.com>

	* acinclude.m4 (DIA_CHECK_CFLAG): fix up macro.

	* sheets/Makefile.am (SHEETS): add SDL.sheet to list.

	* shapes/MSE/: add Mobile Subscriber Equipment shapes from
	W. Michael Petullo <mike@flyn.org>.

	* sheets/Makefile.am (SHEETS): add civil.sheet (which got missed
	from the 0.86 tarball) and jigsaw.sheet.

	* configure.in: add shapes/jigsaw/Makefile to list of generated files.

	* shapes/jigsaw/: jigsaw shapes from Martin Hawlisch.

	* shapes/network/: add network-additional shapes here.

	* sheets/network.sheet: add the network-additional shapes from
	Martin Hawlisch <Martin.Hawlisch@bflow.com> to the main network
	sheet.

2000-09-30  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* configure.in: Updated ALL_LINGUAS

	* po/nl.po: Removed newline from translation

2000-09-17  Asbjorn Pettersen  <asbjornP@dualog.no>

	* app/commands.c (help_about_callback): Use G_DIR_SEPARATOR_S in 
	logo filename generation. 

	* lib/dia_dirs.c (dia_get_data_directory): Handle empty subdir better.
	Avoiding "//dia_logo.png".

2000-09-16  Asbjorn Pettersen  <asbjornP@dualog.no>

	* app/filedlg.c: add include <sys/types.h> to
	remove warning. (OS/2)

2000-09-13  Cyrille Chepelov <chepelov@calixo.net>

	* objects/chronogram/chronoline_event.c (reparse_clevent):
	the __checksum routine was simply bogus. Redone it in a slightly
	saner way (reported by Michael Farr <mfarr@cs.latrobe.edu.au>).

2000-09-10  Asbjorn Pettersen  <asbjornP@dualog.no>

	* app/create_object.c (create_object_button_press): 
	* app/modify_tool.c (click_select_object): 
	* lib/object.h: select renamed to selectf to prevent
	compiler problems with function select().  OS/2 version.

2000-09-08  Karsten Weiss  <knweiss@gmx.de>

	* po/de.po: Updated.

2000-09-07  Karsten Weiss  <knweiss@gmx.de>

	* dia.desktop: Added German translation
	* app/menus.c: "Diagram Propeties..." -> "Diagram Properties..."

2000-08-29  Manuel de Vega Barreiro <barreiro@arrakis.es>

        * configure.in (ALL_LINGUAS): added "es"

2000-08-28  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* app/magnify.c:
	* app/cursor.h:
	* app/cursor.c:
	* app/scroll_tool.c:
	Standardized cursor function get_cursor().  Magnify now has
	looking-glass cursor with + and -.

	* app/create_object.c (create_object_button_press): 
	Newly created connections now snap to connection points even when
	off the grid. 

2000-08-17  Daniel Egger  <egger@suse.de>

	* app/menus.c: #ifdef'ed some code for the none GNOME
	case.
	* app/dia_embedd.c: Changed obvious hackery. Can anyone
	please have a look at the GNOME UI menu creation? The
	gnome-app-helper code is ages old and plainly broken!

2000-08-15  Daniel Egger  <egger@suse.de>

	* app/commands.c:
	* app/commands.h:
	* app/diagram.c:
	* app/display.c:
	* app/menus.c:
	* app/select.c: First big patch to get the menus
	working again in the international version. Copied
	some code written by Sven and me from GIMP and
	thus implemented automatic tearoffmenu creation and
	proper translation. I also removed that pseudo
	radiomenu hack and cleaned up several translation
	hacks which have never really worked. All in all
	this is part I of the big menu patch. Enjoy and tell
	me if you detect any problems.

2000-08-14  Daniel Egger  <egger@suse.de>

	* sheets/UML.sheet: Changed one German translation as
	suggested by Heribert Schuetz <hs@heribert-schuetz.de>.

2000-08-10  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* app/diapagelayout.c:
	* lib/diagramdata.c:
	* lib/diagramdata.h:
	* lib/Makefile.am:
	* lib/paper.c:
	* lib/paper.h: honour PAPERCONF env variable and /etc/papersize when
	selecting paper size for a new diagram. TODO: Use libpaper if 
	available and use gnome_paper-stuff if using GNOME.

	* sheets/Electric.sheet: fixed typo.
	
2000-08-08  James Henstridge  <james@daa.com.au>

	* po/README: added a readme file to tell translators to translate
	the .sheet files as well.

	* app/commands.c (help_about_callback): fix small bug where we tried
	to gdk_bitmap_unref() the mask for the about box image, even though
	it was NULL.  Now check for a NULL mask.

2000-08-07  Daniel Egger  <egger@suse.de>

	* sheets/*.sheet: Added translations for the name
	in the toolbar tab. Brushed up some descriptions 
	and some translations a bit.

2000-08-06  James Henstridge  <james@daa.com.au>

	* plug-ins/svg/render_svg.c (new_svg_renderer): update public
	identifier and dtd url for SVG output.
	(new_svg_renderer): fix the output of the viewBox output.  The
	second two numbers are the width and height -- not the right
	and bottom sides of the box.

	* shapes/*/*.shape: update svg namespace URI.

	* objects/custom/shape_info.c (load_shape_info): change the
	namespace URI for custom shapes yet again to match the Candidate
	Recommedation.  It looks like this one will probably be the final
	one.

	* app/display.c (new_display): remove the code that sets ic and
	ic_attr members to NULL, as one of the previous function calls
	causes the display to be realised.  This means that the ic gets
	lost.  Thanks to Yukihiro Nakai <ynakai@redhat.com> for finding
	this one.

2000-08-06  James Henstridge  <james@daa.com.au>

	* shapes/Makefile.am (SUBDIRS): add Civil back to list.

	* NEWS: fixed date in NEWS file, as I will release today.

	* README: updated the README a little.  Added note that Dia is now
	a GNU program.

	* dia.spec: fix up spec file.

	* plug-ins/wpg/wpg.c: changed DIAG_NOTE stuff here as well.

	* plug-ins/hpgl/hpgl.c: change Hans's DIAG_NOTE stuff so that we don't
	get heaps of warnings when you turn off debugging.
	Also made a few other warning fixes.

2000-08-02  James Henstridge  <james@daa.com.au>

	* plug-ins/svg/Makefile.am (INCLUDES): add XML_CFLAGS to INCLUDES.

	* configure.in: update version number.

2000-08-01  James Henstridge  <james@daa.com.au>

	* app/commands.c (help_about_callback): add Hans to about dialog.

	* doc/shape.dtd: dtd for shape file format.

	* doc/custom-shapes: update doc file about creating custom shapes.

	* shapes/*/*.shape: change namespace URI for the SVG portion to the
	one for the latest draft.

	* shapes/*/*.shape: fix up rect definitions.

	* objects/custom/shape_info.c (load_shape_info): recognise newer
	namespace tag for SVG.
	(parse_svg_node): the rect element should take attributes x, y, width
	and height -- not x1,y1,x2,y2.

	* plug-ins/svg/render_svg.c (new_svg_renderer): updated doctype
	output to use the newest draft DTD.

	* plug-ins/svg/svg.c: initialisation code for plugin.

	* plug-ins/svg/render_svg.c: move svg export code to a plugin.

	* plug-ins/svg/Makefile.am: makefile for svg plugin.

	* app/app_procs.c (internal_plugin_init): don't register the svg
	export filter here.

	* app/Makefile.am (dia_core_files): don't compile in render_svg.[ch]

2000-07-31  James Henstridge  <james@daa.com.au>

	* objects/standard/textobj.c (textobj_get_defaults): 
	* objects/standard/polygon.c (polygon_get_defaults): 
	* objects/standard/image.c (image_get_defaults): 
	* objects/standard/ellipse.c (ellipse_get_defaults): 
	* objects/standard/box.c (box_get_defaults): 
	* objects/standard/beziergon.c (beziergon_get_defaults): 
	* objects/flowchart/parallelogram.c (pgram_get_defaults): 
	* objects/flowchart/ellipse.c (ellipse_get_defaults): 
	* objects/flowchart/diamond.c (diamond_get_defaults): 
	* objects/flowchart/box.c (box_get_defaults): 
	* objects/custom/custom_object.c (custom_get_defaults): 
	* objects/FS/flow.c (flow_get_defaults): 
	* objects/FS/flow-poly.c (flow_get_defaults): 
	* objects/FS/flow-ortho.c (orthflow_get_defaults): ref and sink the
	defaults widget.

	* app/defaults.c (defaults_show): don't keep on ref'ing the defaults
	widgets for various object types.
	(create_dialog): ref and sink the no_defaults_dialog.

	* app/preferences.c (prefs_create_dialog): change
	gtk_container_border_width call to gtk_container_set_border_width.

2000-07-29  James Henstridge  <james@daa.com.au>

	* app/commands.c (view_aa_callback): show a warning dialog if
	you start AA mode.

	* app/interface.c (fill_sheet_menu): don't add a menu item for
	empty sheets.

2000-07-26  James Henstridge  <james@daa.com.au>

	* plug-ins/dxf/dxf-export.c: updates from Steffen to fix bug #18677

	* app/menus.c: remove edit grid menu item.

	* app/commands.[ch] (view_edit_grid_callback): removed.

	* app/display.c (new_display): don't initialise removed Grid members.

	* app/grid.c: remove unused functions.

	* app/grid.h: remove dialog related stuff from Grid structure.
	Remove prototypes for dialog functions.

	* app/menus.c: add to menus
	
	* app/commands.[ch] (view_diagram_properties_callback): new command
	for showing the diagram properties dialog.

	* app/dia-props.[ch]: a new diagram properties dialog.  To replace
	the edit grid dialog.

2000-07-25  James Henstridge  <james@daa.com.au>

	* app/grid.c (grid_x_update): 
	(grid_y_update): as the grid setting is stored with the diagram,
	update all displays when a change is made.

	* app/modify_tool.c (modify_motion): use new snap_to_grid sig.

	* app/create_object.c (create_object_button_press): 
	(create_object_motion): use new snap_to_grid signature.

	* app/grid.c (grid_draw): use the grid settings in the DiagramData,
	and handle invisible grid lines.
	(snap_to_grid): use new grid settings.  Also changed signature to
	take a DDisplay rather than Grid pointer.
	(grid_show_dialog): get the defaults from the correct place.

	* app/display.c (new_display): do not set ddisp->grid.width_[xy].

	* app/diagram.c (new_diagram): set the grid size defaults from the
	user preferences.

	* app/load_save.c (diagram_data_save): save grid and guide info to
	diagram file.
	(diagram_data_load): add guide and grid load support.

	* lib/diagramdata.c (new_diagram_data): set the new DiagramData
	members.

	* lib/diagramdata.h: add members to DiagramData for grid and guide
	settings.

	* configure.in (BONOBO_LIBS): update configure scripts

	* app/dia.oafinfo: oafinfo file for dia embeddables.

	* app/dia_embedd.c: add OAF support.

2000-07-24  James Henstridge  <james@daa.com.au>

	* plug-ins/wpg/Makefile.am: 
	* plug-ins/pstricks/Makefile.am: 
	* plug-ins/hpgl/Makefile.am: 
	* plug-ins/dxf/Makefile.am: same here.

	* plug-ins/cgm/Makefile.am: remove LIBADD.  Dia already links with
	the required libraries, and the link line was causing libtool not
	to build a shared library on some systems :(

	* plug-ins/cgm/cgm.c (write_real): the initial if statement should
	be checking x, not n.

2000-07-23  James Henstridge  <james@daa.com.au>

	* app/preferences.c (prefs_data): set the "reset tools after
	create" preference to true by default.  That seems to be what most
	people expect.

	* app/interface.c (create_sheets): instead of a notebook, use an
	option menu that updates the sheet tools.  The notebook tabs were
	getting a bit unwieldly, so the option menu should fix that.  This
	also reduces the number of widgets in the tools radio button
	group, which should make the UI a little more responsive.

2000-07-19  Fatih Demir	<kabalak@gmx.net>
	
	* configure.in: Added tr to ALL_LINGUAS.
		[ Yeah, we're now having a Turkish translation,
		   too. ]
	
	* dia.desktop: Added the Turkish entries.

2000-07-02  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* doc/diagram.dtd: changed string-element so it conforms to the
	output from dia.

2000-06-30  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* configure.in: added chinese. 
	Use AM_PROG_LIBTOOL instead of AC_PROG_LIBTOOL.

	* app/app_procs.c:
	  app/load_save.c:
	  app/render_svg.c:
	  lib/dia_xml.c:
	  lib/plug-ins.c:
	  lib/sheet.c:
	  objects/custom/shape_info.c: 
          shapes/Circuit/npn.shape:
	  shapes/Circuit/pnp.shape:
	  sheets/*.sheet: dia now works with libxml2.
 	Libxml2 is a bit more picky when parsing xml and reported errors on all 
	sheet files because they use non ascii characters (added 
	encoding="iso-8859-1"). Also "xml:lang=en@layman" is not proper xml so 
	I commented out these.

2000-06-30  Christopher R. Gabriel  <cgabriel@linux.it>

	* configure.in (ALL_LINGUAS): added Italian

2000-06-27  Sung-Hyun Nam  <namsh@lgic.co.kr>

	* configure.in (ALL_LINGUAS): added Korean

2000-06-25  James Henstridge  <james@daa.com.au>

	* objects/flowchart/parallelogram.c (pgram_create): use default font
	and add properties interface support.

	* objects/flowchart/ellipse.c (ellipse_create): use default font and
	add properties interface support.

	* objects/flowchart/diamond.c (diamond_create): use default font and
	add properties interface code.

	* objects/flowchart/box.c (box_create): use default font.

	* objects/custom/custom_object.c (custom_create): use default font
	here too.

	* objects/standard/textobj.c (textobj_create): update to use default
	font.

	* lib/attributes.c: add implementations.

	* lib/attributes.h (attributes_[gs]et_default_font): add function
	prototypes for setting/getting a default font.

2000-06-24  James Henstridge  <james@daa.com.au>

	* app/paginate_gnomeprint.h: updated prototype.

	* app/paginate_gnomeprint.c (paginate_gnomeprint): update to use
	diagram page settings.

	* objects/standard/beziergon.c (beziergon_copy): same here.

	* objects/standard/polygon.c (polygon_copy): copy the fill colour
	as well.

	* app/undo.h: 
	* app/tool.h (tool_options_dialog_show): 
	* app/scroll_tool.h (free_scroll_tool): 
	* app/render_svg.h: 
	* app/render_libart.h (renderer_libart_copy_to_window): 
	* app/render_gdk.h (renderer_gdk_copy_to_window): 
	* app/properties.h (properties_hide_if_shown): 
	* app/preferences.h (prefs_load): 
	* app/object_ops.h: 
	* app/modify_tool.h (free_modify_tool): 
	* app/magnify.h (free_magnify_tool): 
	* app/linewidth_area.h (linewidth_area_create): 
	* app/layer_dialog.h: 
	* app/handle_ops.h (handle_is_clicked): 
	* app/group.h: 
	* app/grid.h (grid_destroy_dialog): 
	* app/defaults.h (defaults_show): 
	* app/cut_n_paste.h (cnp_exist_stored_objects): 
	* app/create_object.h (free_create_object_tool): 
	* app/connectionpoint_ops.h (diagram_unconnect_selected): 
	* app/commands.h: 
	* app/color_area.h (color_area_create): 
	* app/app_procs.h (app_is_embedded): remove extern keyword from
	function prototypes.

	* lib/text.h: 
	* lib/sheet.h (load_all_sheets): 
	* lib/render_store.h: 
	* lib/render_object.h (render_object_load): 
	* lib/polyshape.h (polyshape_closest_segment): 
	* lib/poly_conn.h (polyconn_closest_segment): 
	* lib/orth_conn.h: 
	* lib/object.h: 
	* lib/objchange.h (new_object_state_change): 
	* lib/neworth_conn.h (neworthconn_add_segment): 
	* lib/message.h (message_error): 
	* lib/lazyprops.h: 
	* lib/geometry.h: 
	* lib/font.h (font_descent): 
	* lib/focus.h (remove_focus): 
	* lib/element.h: 
	* lib/diagramdata.h: 
	* lib/dia_xml.h (data_add_composite): 
	* lib/dia_image.h: 
	* lib/connpoint_line.h: 
	* lib/connection.h (connection_move_handle): 
	* lib/color.h: 
	* lib/attributes.h (attributes_set_default_line_style): 
	* lib/arrows.h (arrow_draw): remove extern keyword from function
	definitions.  It is not required for functions.

	* plug-ins/dxf/Makefile.am (INCLUDES): 
	* plug-ins/pstricks/Makefile.am (INCLUDES): 
	* plug-ins/cgm/Makefile.am (INCLUDES): 
	* objects/SADT/Makefile.am (INCLUDES): 
	* objects/chronogram/Makefile.am (INCLUDES): 
	* objects/GRAFCET/Makefile.am (INCLUDES): 
	* objects/flowchart/Makefile.am (INCLUDES): 
	* objects/sybase/Makefile.am (INCLUDES): 
	* objects/FS/Makefile.am (INCLUDES): 
	* objects/standard/Makefile.am (INCLUDES): 
	* objects/network/Makefile.am (INCLUDES):
	* objects/UML/Makefile.am (INCLUDES): same here.

	* objects/ER/Makefile.am: changed inclusion of some macros to
	variables.

	* lib/plug-ins.c (dia_register_plugins_in_dir): use a few defines to
	handle the plug in extension, rather than have all the #ifdef's in
	the code.

	* plug-ins/Makefile.am: add renderer.inc to dist.

	* plug-ins/dxf/dxf-import.c: Updates from Steffen Macke.

2000-06-11  Asbjorn Pettersen  <asbjornP@dualog.no>

	* lib/plug-ins.c: Handle OS/2 dll's too.

2000-06-07  James Henstridge  <james@daa.com.au>

	* app/plugin-manager.c (get_plugin_manager): set some table
	packing options to make it look a little nicer.

	* plug-ins/hpgl/Makefile.am, plug-ins/wpg/Makefile.am: added
	makefiles for these plug-ins.

	* plug-ins/{hpgl,wmf,wpg}/*: removed dos style cariage returns.

	* configure.in: added hpgl and wpg directories to build.  Added
	note about whether gnome-print support was enabled, and noted that
	it is not recommended.

2000-06-06  James Henstridge  <james@daa.com.au>

	* plug-ins/{hpgl,wmf,wpg}/*: Hans Breuer's plug-ins.  They still need
	a little work, but I am checking them in so I don't lose them.

2000-06-01  James Henstridge  <james@daa.com.au>

	* objects/standard/arc.c: added extra properties.

	* lib/beziershape.c (beziershape_closest_handle): fix a bug where I
	was using the wrong index into the handles array.  This gets corner
	type changing working correctly.

	* lib/properties.[ch]: add support for BezPoint's and BezPoint arrays
	to properties code (no editing or loading yet though).  Also added
	support for point array manipulation through the offsets interfaces.

	* lib/Makefile.am (INCLUDES): added include of gdk-pixbuf 

	* app/interface.c (origin_button_press): changes so the origin
	button doesn't grab the pointer when we pop up the menu.

	* app/commands.c (help_about_callback): fix small memory leak in
	about box code.

	* app/menus.c (menus_init): fixed breakage I introduced in the non
	gnome menus when I was doing the menu changes.  The tearoffs work
	really nicely in plain gtk mode as well.

	* objects/standard/beziergon.c (beziergon_create): changed the
	returned handles to match the handle numbering changes.  Now
	segment addition and removal works correctly with undo!

	* lib/beziershape.c: various changes to the code.  Changed the
	numbering of handles, and fixed the segment removal code.

2000-05-31  James Henstridge  <james@daa.com.au>

	* objects/standard/beziergon.c: remove connection point handling.
	There is still a bit of work to be done to get adding and removing
	of segments working correctly.

	* lib/beziershape.c: add connection point handling to beziershape.
	I set it for two connection points per segment.

2000-05-30  James Henstridge  <james@daa.com.au>

	* objects/standard/polygon.c: don't do connectionpoint handling.

	* lib/polyshape.c: changed to handle connection points internally.
	Also, don't worry about connections to handles on polyshape, as
	all handles are non connectable.

2000-05-30 Ville Hautamaki <villeh@cs.joensuu.fi>

	* configure.in: Added finnish
	
2000-05-30  James Henstridge  <james@daa.com.au>

	* sheets/*.sheet: translation updates to the .sheet files.

	* po/fr.po: updated po file from Christophe Merlet.

	* menus.h: removed prototypes for functions which have been removed.

2000-05-29  James Henstridge  <james@daa.com.au>

	* app/layer_dialog.c (layer_dialog_set_diagram): set the selected
	item in the option menu when changing selected diagram.

	* app/dia_embedd.c (view_factory): fix up function to work with new
	menus API.

	* app/disp_callbacks.c (ddisplay_realize): remove call to
	display_set_active from here.
	(ddisplay_canvas_events): move call here.  This gets rid of all the
	warnings, as the renderer has been fully set up correctly at this
	point.

	* app/menus.c (menus_init): add the tearoff item to the start of the
	right click menu.

	* app/app_procs.c (create_user_dirs): we don't need to create the
	menus directory anymore.

	* app/disp_callbacks.c (ddisplay_popup_menu): it should not be
	necessary to update the menu state here, as it was done when the
	active display was set.

	* app/display.c (display_set_active): update the menu state when
	changing active displays.

	* app/interface.c (origin_button_press): set the display as active
	when a click is made on the menu button.

	* app/menus.c (menus_init): set up a quit function to save the accels
	at exit.
	Add tearoff items for the non GNOME menus, add accelerators for
	several GNOME menus.

	* app/disp_callbacks.c (ddisplay_popup_menu): get the menu with
	menus_get_image_menu().

	* app/menus.c (menus_get_item_from_path): use display_menus here
	rather than ddisp->popup.

	* app/display.h: remove the popup member in the DDisplay structure.

	* app/interface.c: remove option of not using wrap box.
	(create_toolbox): change to always use menus_get_toolbox_menubar
	even when using gnome menus.
	(create_display_shell): use menus_get_image_menu to load accelerators
	only -- not the actual popup menu.

	* app/menus.c (menus_init): new function to create the menus.
	(menus_get_toolbox_menubar): use this function whether gnome is
	in use or not.  Changed to use menus_init.
	(menus_get_image_menu): same here.  Also, now this function always
	returns the same menu, rather than a new one each time.
	(menus_init): read a menurc file to load accelerators here.

2000-05-28  James Henstridge  <james@daa.com.au>

	* app/display.c (ddisplay_really_destroy): unset active display if
	active display is destroyed.
	(ddisplay_active): simplify function to return active_display as set
	by display_set_active.  This allows using a pinned menu with any
	display -- not just the one it was popped up from.
	(display_set_active): notify the layer dialog of change of diagrams
	when active diagram changes.

	* app/disp_callbacks.c (ddisplay_canvas_events): set active display
	on button and key presses.
	(ddisplay_realize): set active display on realize.

	* app/display.c (display_set_active): simple implementation of this
	function.

	* app/display.h (display_set_active): add prototype for setting
	the active display.

	* app/interface.c (create_display_shell): don't give focus to the
	menu button.

	* app/menus.c: fix up menus for Beziergon.

	* app/interface.c (create_display_shell): make the widget in the
	top left corner a button that can be used to pop up the right click
	menu, like in gimp and sketch.

	* app/disp_callbacks.c (ddisplay_popup_menu): new function to popup
	the display menu.

	* objects/standard/beziergon.c (beziergon_set_corner_type_callback):
	add code to set corner types for beziergon.

	* lib/beziershape.c (beziershape_set_corner_type): fix up corner type
	setting code.
	(beziershape_move_handle): use the previous corner type for right
	controls.

	* app/interface.c (tool_data): add beziergon to toolbox.

	* objects/standard/standard.c (dia_plugin_init): initialise the new
	Beziergon object type.

	* objects/standard/beziergon.c: an object based on BezierShape.

	* lib/dummy_dep.h (dummy_dep): added to dummy_dep.

	* lib/beziershape.[ch]: new files implementing a bezier shape.

2000-05-26  James Henstridge  <james@daa.com.au>

	* lib/text.c (text_key_event): handle multibyte inserts.
	(text_key_event): also add home and end keybindings.

	* app/interface.c (create_display_shell): connect handlers for
	focus_in_event, focus_out_event, realize and unrealize signals.

	* app/display.[ch] (new_display): initialise input context members.

	* app/disp_callbacks.[ch]: added XIM support here.

	* lib/font.c (suck_font): the black and white pixel values should be
	taken from a 1 bit colormap rather than the default colormap.

	Hans Breuer's Windows patches ...

	* lib/font.c: use Courier New for fixed width font on windows
	machines.

	* lib/dia_image.h: change to "struct _DiaImage".

	* lib/dia_image.c: change "struct DiaImage" to "struct _DiaImage"

	* app/disp_callbacks.c (ddisplay_canvas_events): allow ctrl+right
	mouse button for object menu.  This will make two button mouse owners
	happier.

2000-05-25  James Henstridge  <james@daa.com.au>

	* app/filedlg.c (file_open_ok_callback): use diagram_load here.

	* app/app_procs.c (app_init): add extra NULL argument to call of
	diagram_load.

	* app/load_save.h: remove prototype.

	* app/load_save.c: remove diagram_data function here.

	* app/diagram.h: added prototype.

	* app/diagram.c (diagram_load): new function here, which uses import
	filters.

	* plug-ins/dxf/dxf.c: register the import filter as well.

	* plug-ins/dxf/dxf-import.c: added (unfinished) DXF import filter from
	Steffen Macke <macke@heini.fbbwu.fh-lueneburg.de>

	* objects/standard/line.c: add start_point and end_point properties
	to standard line object.

2000-05-21  James Henstridge  <james@daa.com.au>

	* app/paginate_psprint.c: added missing include of locale.h.

	* objects/custom/custom_object.c (custom_draw): use fabs rather than
	abs for scaling factors.
	(custom_distance_from): same here.

	* dia.spec: make sure rpm doesn't bomb out when LINGUAS isn't set.

2000-05-18  James Henstridge  <james@daa.com.au>

	* po/POTFILES.in: updated POTFILES.in.

	* dia.spec: incremented version number in spec file.

	* NEWS: added (lots of) news items for the 0.85 release.

	* app/preferences.c (prefs_save): set LC_NUMERIC to C while writing
	the config file.

	* configure.in: updated version number here.

	* app/Makefile.am (run_dia.sh): include plug-ins in the lib path.

2000-05-17  James Henstridge  <james@daa.com.au>

	* app/app_procs.c (internal_plugin_init): register the native import
	filter.

	* app/load_save.c (diagram_data_load, diagram_load): split this
	function into two -- one that does all the work on the DiagramData
	structure, and the other that provides compatibility with the old
	function.
	(dia_import_filter): use diagram_data_load to define an import
	filter.

	* app/diagram.h (new_diagram): added const to prototype.

	* app/filedlg.c (file_open_callback): change to use new import filter
	code.

	* lib/filter.c: added import filter management functions.

	* lib/filter.h: added prototypes for import filter interface.

	* app/commands.c (help_about_callback): updated about dialog to
	contain a few more names.

2000-05-16  James Henstridge  <james@daa.com.au>

	* configure.in (Configuration): added a status message to the end of
	the configure script to give the user some idea of what was
	configured.

	* plug-ins/dxf/Makefile.am: Makefile for new plugin.

	* plug-ins/dxf/dxf.c (dia_plugin_init): added file to initialise the
	plugin.

	* plug-ins/dxf/dxf-export.c: new file -- Steffen Macke's DXF export
	filter for dia.

	* configure.in (AM_PATH_LIBART): use the check function provided
	with libart rather than our own code.  It is more reliable, and
	it only requires that people who build out of CVS have libart.m4
	installed (not necessarily all of libart).
	(AM_PATH_GDK_PIXBUF): same here for gdk-pixbuf.

2000-05-12  Andreas Hyden  <a.hyden@cyberpoint.se>

	* dia.desktop: Added Swedish translation.

2000-05-09  James Henstridge  <james@daa.com.au>

	* lib/dia_xml.c: you can't free a const pointer, so remove const
	from variable definitions.

	Explicitely set LC_NUMERIC where needed, as sometimes it isn't
	initialised correctly.

	* app/render_svg.c (export_svg): set locale to C.

	* app/paginate_psprint.c (paginate_psprint): set locale to C.

	* app/render_eps.c (export_eps): set locale to C for EPS export.

	* lib/dia_xml.c (data_add_real): change to C locale for snprintf call.
	(data_add_point): same here.
	(data_add_rectangle): same here.
	(data_real): use g_strtod to convert strings to real numbers, so that
	locales are taken into account.
	(data_point): same here.
	(data_rectangle): same here.

	* AUTHORS: added Henk and Jacek to authors file.

	Daniel Egger's code cleanups.

	* app/select.c (select_invert_callback): remove unused variable.

	* app/plugin-manager.c (get_plugin_manager): fix typo.

	* app/load_save.c (read_connections, write_objects): 
	(write_connections): made some functions static.

	* app/interface.c (toolbox_delete, toolbox_destroy): made some
	functions static.

	* app/filedlg.c (file_export_callback): remove unused variable.

	* app/app_procs.c: various warning fixes.

	Integrating Jacek Pliszka's pstricks export filter.

	* plug-ins/pstricks/pstricks.c: code to initialise the plugin.

	* plug-ins/pstricks/render_pstricks.[ch]: Jacek Pliszka's pstricks
	renderer (with a few small modifications by me).

	* plug-ins/pstricks/Makefile.am: new makefile for pstricks plug-in.

	* plug-ins/Makefile.am (SUBDIRS): add pstricks subdirectory.

2000-05-07  Alexander Larsson  <alla@lysator.liu.se>

	* configure.in:
 	* sheets/Makefile.am:
	* shapes/Makefile.am:
	* shapes/Civil/Makefile.am:
 	* sheets/civil.sheet:
	* shapes/Civil/*:
	Added civil/hydraulic/structural engineering objects from
	sdteffen <macke@heini.fbbwu.fh-lueneburg.de>.
	
2000-05-07  Alexander Larsson  <alla@lysator.liu.se>

	* objects/FS/flow-poly.c:
	* objects/FS/flow.c:
	Fix division by zero in point_normalize().
	Patch by David Thompson <dcthomp@mail.utexas.edu>

2000-04-27  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/arrows.c:
	* lib/bezier_conn.c:
	* lib/connpoint_line.c:
	Added checks for zero-length lines before calls to point_normalize.

2000-04-24  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* app/preferences.c (prefs_data): Changed
	reversed_dragging_intersects to not make the dialog ridiculously
	wide.
	
2000-04-22  James Henstridge  <james@daa.com.au>

	Hans's win32 patches:

	* app/export_png.c: include message.h
	* app/interface.c: include dia_dirs.h
	* app/linewidth_area.c: check for rint
	* app/main.c: include interface.h
	* app/paginate_psprint.c: remove unused variable.
	* app/preferences.c: include message.h
	* app/render_svg.c: include stdlib.h
	* app/select.c: include object_ops.h
	* lib/dia_dirs.c: miscelaneous fixes for win32.
	* lib/dia_image.c: include string.h
	* lib/plug-ins.c: look for .dll files rather than .la files on win32.
	* lib/properties.c: include stdlib.h
	* lib/properties.h: define extra data for standard properties as
	static variables on win32 (to get around dynamic linker problems).
	* objects/standard/polygon.c: polygon_create_change missing return
	statement.

2000-04-18  Pablo Saratxaga <pablo@mandrakesoft.com>

	* configure.in (ALL_LINGUAS): added Catalan

2000-04-18  James Henstridge  <james@daa.com.au>

	* objects/standard/bezier.c (bezierline_get_object_menu): add a
	separator to the object menu between the add/remove segment items
	and the corner type items.
	(bezierline_get_object_menu): add code to disable the menu item for
	the current corner type.  Really just a cosmetic change.

	* app/disp_callbacks.c (create_object_menu): handle DiaMenuItems with
	a NULL for the label or with no associated callback.

	* objects/standard/bezier.c (bezierline_menu_items): use the
	enumeration values rather than numeric values for the corner types.

	* lib/bezier_conn.[ch]: added a corner_types member to the BezierConn
	structure, and add code to handle it.  Also, don't save the corner
	types inline in the bez_points node.  The way it is conditionally
	including the element just feels like it will break.

	* lib/geometry.h (BezPoint): removed the corner_type stuff from
	BezPoint.  The corner type stuff is a user interface level idea rather
	than something required by the renderer, so should be taken care of
	at the object level.

2000-04-17  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* configure.in: Fixed some problems with the gdk-pixbuf/imlib
	checks.  Weren't able to reproduce original bug, tough.

2000-04-16  Cyrille Chepelov  <chepelov@calixo.net>

	* sheets/Electric.sheet:
	* sheets/Contact.sheet:
	* sheets/Pneumatic.sheet:
	* sheets/Circuit.sheet: sprayed some <br/>'s around.
	(added a few French translations in the last file)
	
2000-04-16  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* lib/geometry.h: 
	* lib/bezier_conn.h: 
	* objects/standard/bezier.c: 
	* lib/bezier_conn.c: Support for cuspy, smooth and symmetric
	bezier points.  Only one minor problem known:  Menus are active
	for endpoints minor handles.
	11:28: Save and load now works, too.
	(bezierconn_closest_major_handle): 12:03: New function to get the
	non-control point handle associated with the nearest control
	point.  
	Also fixed the menu activation problem, and made remove_segment
	not remove the endpoint.

2000-04-15  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* configure.in: Added check for gdk-pixbuf being >= 0.7.0 since
	new API is in use.

2000-04-15  Asbjorn Pettersen  <asbjornP@dualog.no>

	* lib/plug-ins.c: Added <sys/types.h> and moved <fcntl.h> below
	<sys/stat.h>.   OS/2 patch.

2000-04-15  James Henstridge  <james@daa.com.au>

	* objects/FS/flow-ortho.c, objects/FS/function.c: Applied David
	Thompson's patch that adds undo support to the function structure
	diagram objects.

2000-04-14  James Henstridge  <james@daa.com.au>

	* objects/custom/custom_object.c (custom_distance_from): new
	implementation of distance algorithm that actually takes the
	display list into account when calculating the distance.  Much nicer
	than a simple bounding box.

2000-04-13  Lars Clausen  <lrclause@cs.uiuc.edu>

	* lib/geometry.c (line_crosses_ray): Fixed division by zero bug

2000-04-12  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* objects/standard/polygon.c: Start of polygons own changes (for
	connectionpoints).  Need to do seperate changes in polyshape, too,
	rather than reuse the bezier changes.

2000-04-13  James Henstridge  <james@daa.com.au>

	* lib/dia_image.c (dia_image_draw): use the new enumeration values
	from after the gdk-pixbuf cleanup.

	* lib/geometry.c (bez_point_distance_and_ray_crosses): fix up limit
	on for loop.  Last set of coefficients were not beeing calculated,
	which caused a bit of breakage.

	* lib/bezier_conn.c (bezierconn_closest_segment): use the new
	functions in geometry.c for calculating the closest segment.
	(bezierconn_distance_from): use distance_bez_line_point to calculate
	the distance.

	* lib/geometry.c (distance_bez_line_point): new function to calculate
	the distance from an open bezier line to a point.
	(distance_bez_shape_point): new function to calculate the distance
	from a closed bezier shape.
	(distance_ellipse_point): new function to calculate the distance from
	a filled ellipse to a point.

	* lib/geometry.h (BezPoint): moved this structure here from render.h

2000-04-12  James Henstridge  <james@daa.com.au>

	* lib/geometry.c (distance_bez_seg_point): new function to calculate
	the distance from a bezier segment.

	* lib/polyshape.c (polyshape_distance_from): use distance_polygon_point
	to calculate the distance from the object.

	* lib/geometry.c (distance_polygon_point): function for calculating
	the distance from a polygon to a point.

2000-04-12  Cyrille Chepelov  <chepelov@calixo.net>

	* app/interface.c:
	* lib/sheet.[ch]: added a <br/> tag in sheet files, so that line 
	breaks can be inserted in the tool box. 

	* doc/sheet.dtd: updated the DTD
	* sheets/GRAFCET.sheet: tried <br/> on that sheet (more to come).
	
2000-04-12  James Henstridge  <james@daa.com.au>

	* app/plugin-manager.c (get_plugin_manager): use the GTK_DIALOG
	macro if the dialog is a GtkDialog :(

2000-04-11  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* objects/standard/polygon.c: Connectionpoints now properly
	managed in a GList.  As far as I can tell, this will not dieturb
	the order (but I have the nagging doubt...)

	* lib/polyshape.c: No longer knows about connectionpoints.

2000-04-11  James Henstridge  <james@daa.com.au>

	* app/Makefile.am: fix makefile for bonobo build.

	* configure.in: fix checks for bonobo.

	* app/menus.c: added entries for the plugin manager.

	* app/Makefile.am (dia_core_files): added plugin manager to files
	list.

	* app/plugin-manager.[ch]: the plugin manager dialog.

	* app/display.c (display_update_menu_state): set the antialiased
	menu entry to the correct value.

2000-04-11  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/custom/custom_object.c: not all renderers like ellipses with
	negative dimensions. This could cause ellipses to disappear when using
	the flip_h and flip_v functions.

	* samples/grafcet.dia: fixed speling and correctness.
	
2000-04-11  James Henstridge  <james@daa.com.au>

	* lib/plug-ins.[ch]: added more accessors for use by a plugins dialog.
	exposed the dia_plugin_load and dia_plugin_unload functions.

	* lib/plug-ins.c (plugin_load): change plugin_load to work on an
	already created PluginInfo structure.

	* app/app_procs.c (app_exit): call dia_pluginrc_write() to write
	the pluginrc file.

	* lib/sheet.c: fix up call to dia_config_filename.

	* lib/plug-ins.[ch]: started writing code for handling a pluginrc
	file.  This would save information such as which plugins not to
	load during startup.

2000-04-09  James Henstridge  <james@daa.com.au>

	* lib/sheet.c: use dia_config_filename to resolve file in ~/.dia.

2000-04-10  Alexander Larsson  <alla@lysator.liu.se>

	* lib/plug-ins.c (dia_register_plugins):
	Don't free the value returned from g_getenv.

2000-04-09  Anders Carlsson  <andersca@gnu.org>

	* app/preferences.h: Add reverse_rubberbanding_intersects preference variable.

	* app/preferences.c (prefs_data): Add reverse_rubberbanding_intersects preference data.

	* app/modify_tool.c (modify_button_release): If rubberbanding is done from 
	right to left, select objects that intersect the rubberbanding rectangle
	instead of selecting objects that are in the rectangle.

	* lib/diagramdata.c (layer_find_objects_intersecting_rectangle): Add function.

	* lib/diagramdata.h: Likewise.


2000-04-09  James Henstridge  <james@daa.com.au>

	* lib/plug-ins.[ch]: add copyright messages to files.

	* plug-ins/cgm/cgm.c (dia_plugin_init): convert plugin over to new
	plugin interface.

	* objects/sybase/sybase.c (dia_plugin_init): 
	* objects/network/network.c (dia_plugin_init): 
	* objects/flowchart/flowchart.c (dia_plugin_init): 
	* objects/custom/custom.c (dia_plugin_init): 
	* objects/chronogram/chronogram.c (dia_plugin_init): 
	* objects/UML/uml.c (dia_plugin_init): 
	* objects/SADT/sadt.c (dia_plugin_init): 
	* objects/GRAFCET/grafcet.c (dia_plugin_init): 
	* objects/FS/fs.c (dia_plugin_init): 
	* objects/ER/er.c (dia_plugin_init): updated plugin load code for
	object libraries.

	* objects/standard/standard.c (dia_plugin_init): change over to new
	plugin interface.

	* lib/plug-ins.h (DIA_PLUGIN_CHECK_INIT): added a macro to define
	the version checker for plugins.

	* app/app_procs.c: remove plugin loading code from here, and use
	code from plug-ins.[ch].  Also move registration of internal
	objects/filters to a `builtin' plugin.

	* lib/Makefile.am (libdia_a_SOURCES): added plug-ins.[ch] to library.

	* configure.in: use AC_PROG_LIBTOOL rather than AM_PROG_LIBTOOL.

	* app/Makefile.am (EXTRA_DIST): you can't include a conditionally
	defined variable in EXTRA_DIST.

	* app/preferences.h: removed dia_config_filename from header.

	* app/preferences.c: removed dia_config_filename function.

	* lib/dia_dirs.c (dia_config_filename): moved function over to this
	file.  Also changed implementation slightly so that it should work
	on the win32 port correctly (and use NT home directories).

	* lib/dia_dirs.h (dia_config_filename): move dia_config_filename where
	it should have been.

	* lib/plug-ins.[ch]: new plugin loading code.

2000-04-08  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* objects/standard/polygon.c: Fixed startup crash bug (do'h!).

	* lib/polyshape.c: Fix closest segment finding, exposes deeper
	bugs in adding corners to 'wraparound' segment.

	* objects/standard/polygon.c: Added connection points (fixed so
	far), set menu sensitivity.

	* lib/polyshape.c: Changed to box-style handles, fixed for start
	and ends not being special, added initial connections,

	* lib/dummy_dep.h: Added polyshape (gotcha!)

	* objects/standard/pixmaps/ellipse.xpm: 
	* objects/standard/pixmaps/box.xpm: 
	Filled element pixmaps with white.

	* lib/polyshape.c: 
	* objects/standard/polygon.c: 
	* lib/polyshape.h: 
	* objects/standard/standard.c: 
	* objects/standard/Makefile.am (libstandard_objects_la_SOURCES): 
	* lib/Makefile.am (libdia_a_SOURCES): 
	* app/menus.c: 
	* app/interface.c (tool_data): 
	Added Standard/Polygon object and PolyShape lib object.  Still
	needs inside grab and connection points.

	* app/commands.c (help_about_callback): Now uses gdk-pixbuf if
	available. 

	* configure.in: Made imlib a fallback if gdk-pixbuf is absent or
	not wanted.

	* app/app_procs.c (app_init): Moved gtk_init outside #ifdef, moved
	if (argv) outside ifdefs.

2000-04-04  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* objects/standard/image.c (image_set_props): 
	Aspect ratio is back in town.

	* app/Makefile.am (dia_LDADD): 
	* acconfig.h: 
	* configure.in: 
	Check for gdk_pixbuf (by default disabled, for now)

	* app/render_eps.c (draw_image): 
	* app/render_libart.c (draw_image): 
	* app/render_gnomeprint.c (draw_image): 
	Support for alpha mask in rendering.  Color postscript, too.

	* lib/dia_image.c: 
	* lib/dia_image.h: 
	Support for gdk_pixbuf and proper masking for exports.

2000-04-01  Kjartan Maraas  <kmaraas@online.no>

	* sheets/*.sheets: Updated Norwegian translations.
	
2000-03-30  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* lib/text.c (text_insert_char): 
	* lib/render_store.c (add_data): 
	Made realloc double the alloced space rather than add
	a fixed amount, to reduce memory stress.

	* app/select.c: Added new select method 'Transitive'
	that select every reachable (by connections) object.

2000-03-27  Kjartan Maraas  <kmaraas@online.no>

	* dia.desktop: Added Norwegian translation.
	
2000-03-26  Alexander Larsson  <alla@lysator.liu.se>

	* app/render_eps.c:
	* app/render_svg.c:
	Don't dereference NULL pointer if the renderer
	couldn't open the file. Fix by Lars Clausen.
	Bug reported by Martin Chisholm <b1mt@unb.ca>
	
2000-03-26  Alexander Larsson  <alla@lysator.liu.se>

	* dia.desktop:
	* po/pt.po:
	Updated pt translation from Pedro Morais <pmmm@rnl.ist.utl.pt>

2000-03-25  Alexander Larsson  <alla@lysator.liu.se>

	* app/dia.gnorba (location_info):
	Changed to correct executable name.

2000-03-25  Alexander Larsson  <alla@lysator.liu.se>

 	* app/app_procs.c:
	Don't do any argument parsing or initialization
	if argv==NULL.

 	* app/dia_embedd.c:
	Call init_server_factroy before app_init.
	Call app_init with argv==NULL
	Now we don't get any critical error on startup.

	* configure.in:
	Add Electric and Pneumatic to makefile list.
	
2000-03-24  Cyrille Chepelov <chepelov@calixo.net>

	* shapes/Electric/*:
	* sheets/Electric.sheet:
	Add some Electric circuit shapes.

	* shapes/Pneumatic/*:
	* sheets/Pneumatic.sheet:
	Add some Pneumatic & Hydraulic circuit shapes
	(both sheets are still incomplete, though feature enough 
	things for basic circuits).

	* shapes/Contact/l_*.(xpm|shape):
	* sheets/Contact.sheet
	* shapes/Contact/Makefile.am
	made the older electric circuit shapes in Contact obsolete (disabled
	them in the sheet, made that sheet Ladder only). Fixed the makefile
	for forgotten items.
	
2000-03-24  Alexander Larsson  <alla@lysator.liu.se>

        * app/Makefile.am:
	Add support for Dia bonobo component.
	Currently a bit raw, so it's commented out.
	
        * app/dia_embedd.c:
	* app/dia.gnorba:
	New files for embedding dia.
	The menu disabling hack is a bit gross. Esp. for GNOME.

	* app/app_procs.h:
	Add new function app_is_embedded();

	* app/diagram.c:
	Don't destroy diagram when last display is destroyed if embedded.
	
	* app/display.c:
	Change initialization of display so it works with embedding.

	* app/display.h:
	Clarify comment about display destruction.

	* app/interface.[ch]:
	Added top_level_window argument to create_display_shell.
	Don't open a top-level window if embedding.
	Don't quit app if trying to close toolbox window when embedding.
	Add toolbox_show() and toolbox_hide().

	* app/main.c:
	Added app_is_embedded() function (just returns false).
	Added toolbox_show() call in main().

	* app/menus.c:
	Added code for getting toolbox menus. This is used to
	hide some menu items when running embedded.
	
	* app/app_procs.c:
	Include sheet.h to remove warning.

	* objects/UML/association.c:
	Clarify association direction text.
	
2000-03-16  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* dia.1
	Fixed man page so whatis parsing works.

2000-03-12  Alexander Larsson  <alla@lysator.liu.se>

	* app/render_libart.c (new_libart_renderer):
	Fix from segg <segg@infonet.ca> to compile without libart.
	I forgot to change the stub for new_libart_renderer when doing
	the interactive renderer stuff for libart.

2000-03-11  Alastair McKinstry  <mckinstry@computer.org>

	* dia.desktop: Added Irish translation.
	
	* configure.in (ALL_LINGUAS): Added Irish (ga) translation.

2000-03-07  Asbjorn Pettersen  <asbjornP@dualog.no>

	* app/load_save.c (fchmod): OS/2 defines only.

2000-03-07  James Henstridge  <james@daa.com.au>

	* lib/properties.c (prop_get_widget): set the position in the option
	menu correctly.

2000-03-06  Alexander Larsson  <alla@lysator.liu.se>

	* app/display.c:
	* app/export_png.c:
	* app/render_libart.[ch]:
	Don't export png:s with an interactive libart renderer.

2000-03-03  Asbjorn Pettersen  <asbjornP@dualog.no>

	* lib/arrows.c (finite): define finite(d) isfinite(d)  for OS/2

2000-03-02  James Henstridge  <james@daa.com.au>

	* dia.spec (%build): unset LINGUAS before running configure.  This
	ensures that all translations get included in the RPM.

	* lib/properties.c (object_create_props_dialog): put in a check for
	a NULL return from the describe_props() object method.
	(prop_desc_lists_union): make sure that the returned array is not
	NULL.
	(prop_desc_lists_intersection): same here.

2000-02-29  Alexander Larsson  <alla@lysator.liu.se>

	* objects/ER/Makefile.am:
	* objects/FS/Makefile.am:
	* objects/UML/Makefile.am:
	Don't link object libs with gtk.

2000-02-29  James Henstridge  <james@daa.com.au>

	* app/preferences.c (prefs_save): check to see if the file could
	be opened before writing the prefs.

	* app/disp_callbacks.c (popup_object_menu): pass the button event
	to gtk_menu_popup.  This allows you to click and release to open
	the object menu.
	(ddisplay_canvas_events): same here.
	(create_object_menu): set the object type menu item in the object
	menu to be insensitive.

	* app/render_svg.c (draw_string): call xmlEncodeEntitiesReentrant,
	as we are now requiring a new version of libxml.

	* dia.spec: updated version number.  Added requirement for
	libxml >= 1.8.5

	* configure.in: incremented version number to 0.84.
	Added check for libxml >= 1.8.5.  This will prevent some of the
	problems people have had with broken libxml versions.

	* NEWS: added news items.

	* app/interface.c (create_color_area): removed call to realize parent
	widget.  Segg <segg@infonet.ca> reported that it caused a warning,
	but I haven't seen it on my copy of dia.

2000-02-28  James Henstridge  <james@daa.com.au>

	* app/export_png.c: added copyright notice, and made the band height
	a constant.

2000-02-27  Alexander Larsson  <alla@lysator.liu.se>

	* lib/font.c (suck_font):
	Fixed off-by one bug in font pixmap height.
	Fixes the problem with garbage at the bottom of some text in aa mode
	and in png exported files.

2000-02-27  James Henstridge  <james@daa.com.au>

	* app/app_procs.c: add the png export filter if it was compiled in.

	* app/export_png.c (export_png): new PNG export filter.  This requires
	the libart renderer to work as it needs a renderer that renders to a
	pixel buffer.

	* configure.in: add check for libpng.

	* lib/message.c (message_internal): use a GNOME dialog here as well.

	* app/display.c (ddisplay_close): use a GNOME dialog here.

	* app/render_eps.c (create_eps_renderer): use diagram scaling factor
	when exporting to EPS.  This is because some people said the EPS
	output was too large

2000-02-26  James Henstridge  <james@daa.com.au>

	* app/defaults.c (create_dialog): use a GNOME dialog for the defaults
	window.

	* app/app_procs.c (app_exit): use a GNOME dialog here.

	* app/preferences.c (prefs_create_dialog): if GNOME support is
	enabled, show a GNOME dialog.

	* app/grid.c (grid_draw): use preferences when drawing page break
	lines.

	* app/preferences.c: add page break preferences to dialog.

	* app/preferences.h: added page break preferences.

2000-02-25  James Henstridge  <james@daa.com.au>

	* sheets/UML.sheet: added new objects.

	* objects/UML/uml.c: link in the two new objects.

	* objects/UML/node.c: 
	* objects/UML/branch.c: new UML objects from Stfan Seefeld
	<seefelds@magellan.umontreal.ca>.

2000-02-24  James Henstridge  <james@daa.com.au>

	* objects/custom/custom_object.c: converted to use the properties
	interface.  In the future, it would be nice to add support for
	defining custom properties for custom objects, but that can wait.

2000-02-22  James Henstridge  <james@daa.com.au>

	* sheets/Circuit.sheet: added new circuit shapes to sheet.

	* plug-ins/cgm/cgm.c: cgm plugin updates from Henk Jan Priester
	<hj@justcroft.com>.  Fixes number encoding, colour encoding, fonts
	and adds a few new features.

2000-02-21  Daniel Egger  <egger@suse.de>

	* sheets/*.sheets: Added German translations and made some
	corrections to the others.
	
2000-02-21  James Henstridge  <james@daa.com.au>

	* shapes/Circuit/Makefile.am (SHAPES): added new shapes to list.

	* shapes/Circuit/...: added new shapes from Erik Janssens.

2000-02-20  James Henstridge  <james@daa.com.au>

	* app/interface.c (create_color_area): realize the parent window
	first.

	* objects/standard/image.c: properties patch for standard image
	object, from Lars Clausen.

	* lib/properties.c: support for PROP_TYPE_FILE from Lars Clausen.

	* lib/properties.h (PropType): added file property type.

	* shapes/Circuit/speaker_de.xpm: changed size of pixmap to match
	other shapes.

	* app/interface.c: use wrap box for toolbox.

	* app/Makefile.am: added new files.

	* app/gtk*wrapbox.[ch]: added wrap box widget.

2000-02-19  James Henstridge  <james@daa.com.au>

	* sheets/network.sheet: added extra shapes to networks sheet.

	* configure.in (AC_OUTPUT): added shapes/network/Makefile

	* shapes/network/*: added shapes that were posted to the list a while
	back.
	
	* shapes/Makefile.am (SUBDIRS): added network subdirectory

	* app/menus.c (toolbox_menu_items): don't right justify help menu for
	gtk+ version of menus.

	* app/properties.c (create_dialog): use a GnomeDialog if we happen
	to be using gnome.

2000-02-18  James Henstridge  <james@daa.com.au>

	* objects/flowchart/box.c: set extra data for corner radius and text
	padding properties.

	* objects/standard/box.c: set extra data for corner radius property.

	* lib/properties.h: set extra data in some standard properties.

	* lib/properties.c (prop_get_widget): look at the extra data for
	int, real and enum property types.  They now use GtkSpinButton and
	GtkOptionMenu respectively.

	* lib/properties.h: extra data members for creating property setting
	widgets.

2000-02-17  James Henstridge  <james@daa.com.au>

	* objects/flowchart/box.c: reverted load/save functions back to
	previous implementations.  Made box use standard property names.

	* plug-ins/cgm/cgm.c (set_linestyle): was missing a */

	* app/grid.c: add more digits to the grid edit dialog.  This patch
	was also from Lars Clausen.

	* objects/standard/zigzagline.c: 
	* objects/standard/textobj.c:
	* objects/standard/polyline.c:
	* objects/standard/line.c:
	* objects/standard/ellipse.c:
	* objects/standard/box.c: 
	* objects/standard/bezier.c: 
	* objects/standard/arc.c: patches to add properties code to standard
	objects.  Based on patches from Lars Clausen.  I have also removed
	some dead code from the files.

	* lib/properties.h (PROP_STD_*): define a number of standard
	properties.  Where appropriate, objects should include these
	properties in their PropDescription list.  This way, the intersection
	of properties of two different shapes will be greater.

2000-02-14  James Henstridge  <james@daa.com.au>

	* objects/flowchart/box.c (box_load, box_save): use property save
	routines.  Make sure that any props not handled by object_load_props
	are loaded before calling object_load_props, or we get errors because
	update_data is called.

	* lib/properties.c (object_get_props_from_offsets): fixed an indexing
	error that could cause properties to be loaded incorrectly.
	(object_set_props_from_offsets): similar here.

	* lib/properties.[ch] (prop_{load,save}): functions for loading
	or saving a property in Dia's XML file format.
	(object_{load,save}_props): load or save some properties of an
	object.  These functions should help simplify the load/save methods
	of objects that implement the properties interface.

2000-02-13  James Henstridge  <james@daa.com.au>

	* objects/flowchart/box.c: use offset code to simplify property
	get/set routines.

	* lib/element.h (ELEMENT_COMMON_PROPERTIES): standard element
	properties.
	(ELEMENT_COMMON_PROPERTIES_OFFSETS): offsets.

	* lib/object.h (OBJECT_COMMON_PROPERTIES): list of standard object
	properties.
	(OBJECT_COMMON_PROPERTIES_OFFSETS): the offsets of the properties.

	* lib/properties.[ch] (object_{get,set}_props_from_offsets): new
	functions 

2000-02-12  Alexander Larsson  <alla@lysator.liu.se>

	* app/Makefile.am:
	Add the custom object to DIA_LIB_PATH in run_dia.sh

2000-02-10  Cyrille Chepelov  <chepelov@calixo.net>

	* sheets/Circuit.sheet:
	* shapes/l_sout* (NEW):
	* shapes/l_outj.* (NEW): added new outputs : jump, and the power-saved
	variants of simple, inverted, set and reset outputs.
	Still to do: all Schneider/Telemecanique TSX *7 function blocks ; 
	probably a split of Contact and Ladder sheets. And then a major 
	revamping of the Contact sheet.

2000-02-10  James Henstridge  <james@daa.com.au>

	* app/Makefile.am (dia_LDADD): don't link with libcustom_objects.

	* app/app_procs.c (register_all_objects): don't explicitely
	register the custom objects library -- let it be loaded by the
	normal plugin loading methods.

	* lib/Makefile.am (libdia_a_SOURCES): don't include custom.h here.

	* objects/custom/Makefile.am: build libcustom_objects as a shared
	library again.

	* objects/custom/shape_info.[ch]: don't read the description field
	of custom shapes.  It makes more sense to have these in the sheet
	file to localise the parts of dia that translators have to deal
	with.

	* objects/custom/custom_object.c (custom_object_new): do not
	create the sheet object for the new custom shape -- this is
	handled by the custom sheet code.

	* objects/custom/custom.c: change over to being a normal plug-in
	rather than being linked with the main dia executable.

2000-02-09  James Henstridge  <james@daa.com.au>

	* sheets/Circuit.sheet: 
	* sheets/Flowchart.sheet: 
	* sheets/Contact.sheet: fixed up sheets.

	* objects/custom/custom_object.c (custom_object_new): set the
	extra ObjectType fields.

	* lib/sheet.c: use extra ObjectType fields when creating sheet
	objects.  Give a warning if <shape> tags are found in a sheet
	file.  Now the custom sheet code does not know about custom
	shapes -- they look like any other object type.

	* lib/object.h (ObjectType): added extra members

2000-02-08  Alexander Larsson  <alla@lysator.liu.se>

	* app/linewidth_area.c:
	Added code to set arbitrary line width.
	Patch by Lars Clausen <lrclause@cs.uiuc.edu>

2000-02-08  Alexander Larsson  <alla@lysator.liu.se>

	* app/linewidth_area.c: 
	* lib/font.[ch]:
	Add support for font-sucking.
	Implementation borrowed from gnome-canvas.
	
	* app/render_libart.[ch]:
	Implement text rendering.

2000-02-07  Alexander Larsson  <alla@lysator.liu.se>

	* app/properties.c (create_dialog):
	ref and sink no_properties_dialog.

2000-02-07  James Henstridge  <james@daa.com.au>

	* app/group.c (group_describe_props): new function.  Return the
	intersection of the properties of the contained objects that
	implement the describe_props interface.
	(group_get_props): implement by iterating through contained objects
	and calling their get_props method until all properties have been
	set.  Maybe this should go through all objects all the time??
	(group_set_props): implement by calling set_props method on all
	contained objects.
	(group_ops): use standard props dialog creation routines.

	* lib/properties.c (prop_desc_lists_intersection): fix implementation
	of intersection -- I was using i++ instead of i-- in a for loop :(

	* objects/custom/custom.c (custom_register_objects): fix usage
	of dia_get_data_directory again.

	* lib/sheet.c: fix up use of dia_get_data_directory, so that we
	actually read the sheets.

2000-02-06  Alexander Larsson  <alla@lysator.liu.se>

	Win32 port by Hans Breuer <Hans@Breuer.org>

	* app/Makefile.am:
	Remove DATADIR and LIBDIR defines.

	* lib/Makefile.am:
	Add dia_dirs.c and dia_dirs.h
	Added DATADIR and LIBDIR defines.

	* lib/dia_dirs.[ch]:
	New files for handling special directories.

	* app/app_procs.c:
	* app/commands.c:
	* lib/sheet.c:
	* objects/custom/custom.c:
	Fix warnings.  Use directory functions.

	* app/diagram.h:
	Add prototype for diagram_redraw_all.

	* app/diaunitspinner.c:
	* app/filedlg.c:
	* app/interface.c:
	* app/preferences.c:
	Fix warning.

	* app/load_save.c:
	Win32 doesn't have mkstemp and fchmod.

	* app/paginate_psprint.c:
	Win32 calls popen _popen and pclose _pclose.
	
	* app/arrow.c:
	Win32 calls finite _finite.

	* lib/color.h:
	Win32 needs to dllexport the color vars.

	* objects/GRAFCET/step.c:
	* objects/chronogram/chronoref.c:
	snprintf -> g_snprintf

2000-02-05  James Henstridge  <james@daa.com.au>

	* lib/properties.c: more fixes so that it doesn't crash when using
	properties.  The undo/redo stuff also works!!

	* objects/flowchart/box.c (box_{describe, get, set}_props): test
	object where I have implemented the new properties interface
	complete with automatic properties dialog generation.

	* lib/properties.c (object_apply_props): fixed stupid error when
	creating the old_props array.  Also, it no longer frees the props
	array -- you will have to do that yourself.

2000-02-04  James Henstridge  <james@daa.com.au>

	* app/properties.c (properties_apply): pass object_part to
	apply_properties.

	* lib/object.h (ApplyPropertiesFunc): added widget argument.

	* lib/lazyprops.h (PROPDLG_CREATE): ref and sink properties dialogs
	created this way as well.

	* objects/*/*.c: ref and sink the properties dialog window for each
	widget.  It can't rely on ref count being incremented by
	properties_show anymore.

	* app/properties.c (properties_show): don't ref the widget before
	removing it, or its ref count will increase each time you open the
	properties dialog.  Don't unparent the widget, as container_remove
	does that for us.

	* lib/object.h: fixed up prototypes for new object methods.

	* lib/properties.[ch]: added functions for automatically creating
	a properties dialog from the output of describe_props, get_props and
	set_props.
	(object_apply_props): apply properties and return an ObjectChange
	structure that can be used for undo.

2000-02-03  Cyrille Chepelov  <chepelov@calixo.net>

	* objects/GRAFCET/transition.c: minor leak plugged.

	* sheets/GRAFCET.sheet:
	* objects/GRAFCET/pixmaps/condition.xpm: (NEW)
	* objects/GRAFCET/condition.c: (NEW) added a new object type, action 
	conditions.
	* objects/GRAFCET/Makefile.am: fixed incorrect dependencies, added
	new ones (for condition.c).
	* objects/GRAFCET/action.c: added connection points for the conditions.
	* samples/grafcet.dia: updated the sample to improve conformance to
	IEC 848 and take advantage of dia's new features.
	
	* lib/geometry.h: (point_get_normed) fixed a typo.

2000-02-02  James Henstridge  <james@daa.com.au>

	* lib/object.h: added object functions describe_props, get_props and
	set_props.  Do type definitions so that object.h doesn't need to
	include properties.h, since properties.h includes object.h.

	* lib/properties.[ch]: more hacking.

	* po/de.po: updated po file.

2000-01-30  James Henstridge  <james@daa.com.au>

	* configure.in: don't add flags to CFLAGS unconditionally.  Instead,
	check to see if the C compiler accepts the flag beforehand.

	* lib/properties.[ch]: start of properties code.

	* shapes/Contact/Makefile.am (SHAPES): fix up makefile.

2000-01-30  Cyrille Chepelov  <chepelov@calixo.net>
	
	* sheets/GRAFCET.sheet:
	* sheets/GRAFCET/etapemc.xpm: (NEW)
	* sheets/GRAFCET/etapesp.xpm: (NEW)
	* objects/GRAFCET/step.c: Added the macro and
	sub-program call step types.

	* objects/GRAFCET/receptivity.[ch]: renamed to 
	objects/GRAFCET/boolequation.[ch]. 
	* objects/GRAFCET/transition.c: changed (Receptivity *) to 
	(BoolEquation *)

	* lib/connpoint_line.[ch]: 
	* objects/chronogram/chronoline.c:
	* objects/chronogram/chronoref.c:
	* objects/GRAFCET/vergent.c:
	* objects/standard/line.c:
	* objects/SADT/box.c: Minor CPL interface changes, factored out the
	point count adjustment code into the CPL object.
	
2000-01-29  Alexander Larsson  <alla@lysator.liu.se>

	* app/render_libart.c:
	Added support for images and bezier curves.
	Only text/fonts missing now.

	* app/render_gdk.c:
	Removed old erronous comment.

2000-01-29  Cyrille Chepelov <chepelov@calixo.net>

	* objects/chronogram/chronoline_event.c: removed references to
	lround(). Please don't insist, I'm already red of shame.
	
2000-01-29  Alexander Larsson  <alla@lysator.liu.se>

	* app/render_libart.[ch]:
	* app/Makefile.am:
	Non-finished libart renderer.

	* acconfig.h:
	Added HAVE_LIBART flag

	* configure.in:
	Added libart probe

	* app/app_procs.c:
	Call gdk_rbg_init().

	* app/connectionpoint_ops.c:
	* app/disp_callbacks.c:
	* app/grid.c:
	* app/handle_ops.c:
	* app/magnify.c:
	* app/modify_tool.c:
	Change ddisp->renderer type from RendererGdk * to Renderer *
	Draw zoom and select rects in ddisp->canvas->window instead
	of ddisp->renderer->renderer->pixmap.

	* app/display.[ch]:
	Add aa_renderer to DDisplay, and  support for it.
	New function ddisplay_set_renderer() for changing renderer.
	Add ddisplay_transform_coords_double() function, used by aa renderer.
	Change ddisp->renderer type from RendererGdk * to Renderer *

	* app/menus.c:
	Add antialias to menu.
	
	* app/commands.[ch]:
	add view_aa_callback function
	Change ddisp->renderer type from RendererGdk * to Renderer *

	* lib/geometry.[ch]:
	Added IntRectangle and int_rectangle_union.

2000-01-28  James Henstridge  <james@daa.com.au>

	* app/commands.h: removed prototypes.

	* app/commands.c: removed the functions that have been moved to
	filedlg.c.

	* app/filedlg.h: added new prototypes.

	* app/filedlg.c (file_open_callback): move open dialog to this
	file.  This implementation should remember the current directory
	between file loads.
	(file_save_as_callback): moved this dialog as well.
	(file_save_callback): moved this function here.

	* app/paginate_psprint.c (paginate_psprint): if not in fit to mode,
	align page boundaries to the origin.

	* app/diagram.c (diagram_update_extents): redraw the diagram if the
	scaling factor changes while updating the extents.  This is so the
	page breaks get redrawn correctly.

	* app/pagesetup.c (pagesetup_apply): added diagram_flush call when
	applying changes.

	* app/grid.c (grid_draw): draw page breaks as well as grid lines.
	For normal mode, use (0,0) as the origin.  For `fit to' mode, use
	the corner of the bounding box.

	* app/pagesetup.c (create_page_setup_dlg): load new paper attributes
	into page setup dialog.
	(pagesetup_apply): apply new `fit to' attributes to the diagram.

	* app/load_save.c (diagram_load): load new paper `fit to' attributes.
	(diagram_data_save): save `fit to' data.

	* lib/diagramdata.c (new_diagram_data): initialise `fit to' members.
	(data_update_extents): when in `fit to' mode, update scale factor
	when we update the extents.

	* lib/diagramdata.h (PaperInfo): added `fit to' members to PaperInfo
	structure.

	* .../.cvsignore: added some cvsignore files to quieten cvs.
	
	* app/pagesetup.c (pagesetup_changed): added code to change the
	scaling/fit to values as you change the options in the page setup
	dialog.  I haven't added code so that the fit to options are saved
	though.

	* app/diapagelayout.[ch]: changed the scaling portion of the widget
	to make it easier to set a `fit to' style scaling factor.

2000-01-27 Cyrille Chepelov <chepelov@calixo.net>
	* lib/neworth_conn.[ch]: (NEW) Temporary (hopefully) fork of orth_conn,
	but connpoint_line-based, so that there's a connection point at the 
	middle of each segment. Currently only the SADT arrow uses this.

	* objects/SADT/* (NEW): SADT (both idf0 and idf1) support.
	
2000-01-26 Cyrille Chepelov <chepelov@calixo.net>
	* lib/lazyprops.[ch]:(NEW) Added a bunch of macros for loading, 
	saving and editing of properties (and default properties). 
	See the new objects (GRAFCET, SADT, chonograms) for examples.
	For already too hairy stuff, see objects/chronogram/chronoline.c.

	* lib/connpoint_line.[ch] (NEW): This subobject manages a line of 
	evenly spaced connection points, which the user can add or remove at
	will. An object can own several connection point lines. See the SADT
	Box, or the GRAFCET vergents for examples.

	* lib/dummy_dep.h: added dependencies to new files. Told gcc to keep 
	quiet about unused stuff.

	* objects/GRAFCET (NEW):
	* samples/grafcet.dia (NEW):
	Added support for GRAFCET charts. 

	* objects/chronogram (NEW):
	* samples/chronograms.dia (NEW):
	Added support for chronograms (feature requested by Ronald L. Chichest;
	I found I'd use it often, too).

	* objects/standard/line.c: Replace the middle connectionpoint by 
	a whole connection point line, which defaults to one point (hint, 
	hint). New Line object menu to take advantage of this. 
	"Bothwards" compatibility is preserved (although you may loose 
	connections if you load a newer file in a older dia).

	* app/lineprops_area.c:
	* lib/arrows.[ch]:
	* lib/widgets.c: Added hollow and filled ellipse arrow head type. 
	(feature requested by Benjamin Kahn).
	Merged in Steffen Macke's slashed arrow head type.

	* app/Makefile.am (app/run_dia.sh actually):
	Added $DEBUGGER in front of dia's invocation, so that
	you can call "DEBUGGER=ddd app/run_dia.sh" (maybe naive, but useful).
	Added $(EFENCE) to app/dia's LDFLAGS, so that you can do 
	"EFENCE=-lefence" to link with Electric Fence.

	* configure.in: Made gcc do more aggressive optimisations on i386, and
	enabled warnings.
	
2000-01-24  James Henstridge  <james@daa.com.au>

	* lib/geometry.[ch]: added inline versions of functions.  Used
	glib's G_INLINE_FUNC stuff, so it should still work on systems
	without inline funcs.

	* plug-ins/cgm/cgm.c (draw_ellipse, fill_ellipse): fixed up so that
	it outputs the correct element id for the ellipse objects.

2000-01-24 Cyrille Chepelov <chepelov@calixo.net>

	* lib/object.[ch]: added object_add_connectionpoint_at, similar to
	object_add_handle_at. Message typo fixed.
	
	* lib/sheet.c (load_register_sheet):
	potential bug fixed (warning hunt).

	* objects/custom/custom.c (custom_object_load): disabled an assertion
        which made dia abort upon failure to load a shape file. Fixed a
        subsequent crash. 

	* objects/custom/shape_info.c (load_shape_info): Made the custom 
	shape load code ignore XML comments between <?xml ...?> and the 
	root object (mostly useful to put the emacs magic comments).
        
	* app/load_save.c: Made dia do backup copies of files when saving,
        and complain in case of failure.

2000-01-24  Cyrille Chepelov  <chepelov@calixo.net>

	* AUTHORS: fixed my address (ISP thought it was a great idea to change
	the domain name)
	
	* configure.in:
	* shapes/Contact:
	* shapes/Contact/*:
	* sheets/Contact.sheet:
	* sheets/Makefile.am:
	Added support for Contact and LADDER charts.

	* dia.desktop: Added a French translation.
	
2000-01-23  James Henstridge  <james@daa.com.au>

	* app/commands.c (help_about_callback): don't die if can't load
	logo image.

	* app/render_gdk.c (bezier_add_lines): sanity check to try to weed
	out NaN's when performing bezier curve subdivision.

	* objects/custom/custom_object.c: initialise memory of Custom structs
	to zero.

	* app/render_svg.c (draw_image): added image support to the XML
	output filter.  The image is just referenced, rather than being
	included inline, so if you copy the SVG file somewhere else, you
	may need to move the images or fix up the links.

	* plug-ins/cgm/cgm.c (draw_string): output a text colour element,
	so the text is not just displayed in black all the time.

2000-01-15  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* configure.in: fixed libpopt test so we wont try to build with
	too old libpopt.

1999-12-18  Yuri Syrota  <rasta@renome.rovno.ua>

	* configure.in: Added "uk" to ALL_LINGUAS.

1999-12-24  James Henstridge  <james@daa.com.au>

	* po/ru.po: updated russian translation from Valek Filippov.
	
	* app/render_svg.c (new_svg_renderer): make output use 19991203
	version of SVG DTD.  Use viewBox to set the extents of the view.

	* INSTALL (FONTS): updated locations of gnome-xml and imlib.  List
	ftp.gnome.org as the download.

	* TODO (TODO): weeded out completed todo items and added a few extra.

	* Makefile.am (EXTRA_DIST): added documentation to EXTRA_DIST.

	* doc/sheet.dtd: first stab at a DTD for the sheet files.  It would
	be good to get rid of the object/shape distinction and separate
	the custom shape code out from the main application.

	* objects/custom/README, diagram.dtd: moved to new doc directory.
	Renamed the custom shapes README to custom-shapes.  Also updated
	custom shape docs a bit and removed the section on sheet files, as
	that has changed a bit.

	* plug-ins/cgm/cgm.c (draw_image): give an error if the row length
	of the image data is larger than the maximum cell array.  I should
	add code to break scan lines down further in this case, but for now
	an error message is better than an infinite loop.

	* app/filedlg.c (file_export_ok_callback): show a dialog if we
	couldn't determine the export filter to use.

	* app/commands.c (help_about_callback): fixed up about box logo
	expose bug.  Now just use a GtkPixmap widget rather than a
	GtkDrawingArea and calling gdk_imlib_paste_image.

	* app/Makefile.am (EXTRA_DIST): added print stuff to extra dist,
	because automake does not always get things right.

	* configure.in: updated version number to 0.83.

	* app/preferences.c (prefs_save): 
	* app/render_svg.c (new_svg_renderer): "wt" is not a valid flag string
	for fopen.  Text is the default file mode anyway.

	* app/commands.c (file_save_as_dialog_ok_callback, file_new_callback): 
	* app/grid.c (grid_x_update, grid_y_update, grid_show_dialog): 
	* app/load_save.c (write_objects, write_connections): 
	* app/filedlg.c (file_export_ok_callback): 
	* lib/dia_xml.c (data_add_int, data_add_enum, data_add_real): 
	* lib/dia_xml.c (data_add_point, data_add_rectangle): 
	* lib/font.c (init_x11_font, font_get_gdkfont): changed calls to
	snprintf to calls to g_snprintf.

	* plug-ins/cgm/cgm.c (export_cgm): write the original dia file name
	as the picture name.

1999-12-23  James Henstridge  <james@daa.com.au>

	* plug-ins/cgm/cgm.c (write_int32, write_int16): fixed up output of
	negative numbers.  This fixes the upside down text problem I was
	having previously.
	(draw_image): implemented the image code.  It will try to split the
	image data up into bands if it is too big to fit into a single
	cgm cell array element.  It will have problems if you try to insert
	an image wider than about 10,000 pixels though.

	* Makefile.am: use gnomedatadir for the files that need to be
	installed in gnome's datadir.  This is mainly to help people doing
	packages for weird setups.

1999-12-22  James Henstridge  <james@daa.com.au>

	* plug-ins/cgm/cgm.c: added support for text.  Now only images and
	beziers are left to do.  The text seems to be the wrong way up
	still.  This is probably a problem with character orientation
	element, but I have used what the settings given in the standard.
	Other than this, the CGMs dia produces are readable (and displayable)
	by ralcgm and corel draw.
	(draw_string): subtract from the X coord rather than the Y coord for
	center and right aligned text.

	* plug-ins/cgm/cgm.c: a few fixups for the output.  Use REALSIZE as
	the size of a real number, and changed name of write_double to
	write_real.  Consider changing to fixed real encoding.  Also, now
	all element headers are correct.  Once the real number encoding is
	fixed, only text, beziers and images are left to do.

1999-12-21  James Henstridge  <james@daa.com.au>

	* Makefile.am (SUBDIRS): recurse into plug-ins.

	* configure.in: add plug-ins directory makefiles to list.

	* plug-ins/cgm/cgm.c: start of cgm export filter.  Beziers and text
	not done yet.  Also, the output files are not quite correct.

	* app/render_eps.c (print_reencode_font): don't reencode the Symbol
	font.  It doesn't work if you do.

1999-12-20  James Henstridge  <james@daa.com.au>

	* app/app_procs.c (app_init): don't use diagram_export_to_eps to
	export the files.  Instead, use filter_guess_export_filter to
	guess the correct format to save in and use the appropriate filter.
	It defaults to postscript for compatibility.

	* app/diagram.[ch] (diagram_export_to_eps): removed export to eps
	function.

	* app/commands.[ch]: removed export to eps functions.

	* app/menus.c: removed export to eps menu items.

	* app/app_procs.c: register new export filters.

	* app/load_save.[ch]: define dia native export filter.

	* app/render_eps.[ch]: define eps export filter.

	* lib/filter.h: added diafilename argument to the DiaExportFunc
	prototype.  This is useful for putting the source of the diagram
	into the output file for instance.

	* app/app_procs.c (app_init): register the SVG export filter.  Have
	to get EPS code converted to this API, and maybe also allow saving in
	DIA's native format from the export dialog.  In fact, it is now
	possible to load an export filter from a shared library and it will
	integrate into the interface correctly.

	* app/menus.c: removed references to the SVG renderer.

	* app/commands.[ch]: removed svg stuff.

	* app/diagram.[ch]: removed diagram_export_to_svg function.

	* app/render_svg.[ch]: added a DiaExportFilter structure for this
	renderer.

	* app/filedlg.[ch]: code for the new export diagram dialog.  Will
	probably move the open/save dialogs to this file as well.

1999-12-19  James Henstridge  <james@daa.com.au>

	* lib/filter.[ch]: start of interface for generalised handling of
	filters.  I have only done code for export filters so far.  I still
	need to do the gui for this, and convert the current SVG and EPS
	filters to the new API.

	* lib/bezier_conn.c (bezierconn_copy): fix up copy operation.  We
	weren't setting the last handle correctly.  It was actually assigning
	to the wrong position in the handles array, so the last handle was
	left as NULL, which caused the segfault.

	* objects/standard/image.c (image_copy): modified routine so that
	it just adds a reference to the DiaImage structure in the new image
	object.  This seems to have cleared up the problems with copying
	image objects.

	* dia.spec: spec file additions from John Gotts.

1999-12-12  James Henstridge  <james@daa.com.au>

	* configure.in (GNOME_LIBS): updated version number to 0.82.  0.82
	has not been released yet though.

	* Makefile.am (EXTRA_DIST): distribute diagram.dtd.

	
	The following based on a patch from Lars Clausen:
	
	* objects/standard/bezier.c (bezierline_move_handle): when performing
	the initial drag of the bezierline, move the control points to keep
	the line straight.

	* lib/bezier_conn.c (bezierconn_add_segment): when adding a segment,
	make the new control points a bit closer to the major point.

	* app/create_object.c (create_object_motion): use HANDLE_MOVE_CREATE
	as the reason for the move.
	(create_object_button_release): use HANDLE_MOVE_CREATE_FINAL as the
	move reason.

	* lib/handle.h: new handle move reasons.

1999-12-09  James Henstridge  <james@daa.com.au>

	* dia.spec: include the new files in RPMs.

	* Makefile.am: install these new files.

	* dia.keys.in: file describing actions and icon for dia diagrams for
	use in the gnome file manager.
	
	* dia.mime: a file defining the application/x-dia-diagram mime type.
	
	* dia-diagram.png: an icon for dia diagrams.

1999-12-08  James Henstridge  <james@daa.com.au>

	* plug-ins/python/pydia-diagram.c: added heaps of new methods.

	* plug-ins/python/pydia-display.[ch]: wrapper for display.

	* objects/standard/ellipse.c: applied Lars's patch to optionally not
	draw the background of the ellipse.

	* app/load_save.c (read_connections): do some sanity checking on the
	handle and connection point numbers before performing the object
	connection.

	* lib/bezier_conn.c (bezierconn_load): give the correct number of
	handles when loading a BezierConn.

1999-12-07  Kjartan Maraas  <kmaraas@online.no>

	* sheets/*.sheet: Finished Norwegian translations.
	
1999-12-07  James Henstridge  <james@daa.com.au>

	* plug-ins/python/diamodule.c (PyDia_Load): load diagram function.
	(PyDia_GetObjectType): find object type function.

	* plug-ins/python/pydia-diagram.c (PyDiaDiagram_Save): added a save
	method for diagrams.

	* plug-ins/python/pydia-object.c: added methods for DiaObject and
	DiaObjectType.

	* AUTHORS: added Lars and Cyrille to the authors file.

	* objects/standard/bezier.c (bezierline_add_segment_callback): place
	new point correctly.

	* lib/bezier_conn.h (bezierconn_closest_segment): fixed prototype.

	* lib/bezier_conn.c: applied Lars's patch for placement of the new
	point when adding a segment to a BezierConn.

1999-12-06  James Henstridge  <james@daa.com.au>

	* plug-ins/python/test.py: test script for the python plug-in.

	* plug-ins/python/python.c: this file contains the plug-in startup
	code for the python plugin.  Right now, it just initialises the
	dia module and executes a script.

	* objects/standard/polyline.c (polyline_draw): fix start arrow size.

	* objects/standard/bezier.c (bezierline_draw): draw control lines for
	bezier curve if we are using an interactive renderer (ie. only if
	displaying to the screen).

	* lib/bezier_conn.[ch] (bezierconn_draw_control_lines): function
	to draw control lines on to a bezier curve.  Based on implementation
	from Lars.

	* objects/standard/bezier.c (bezierline_delete_segment_callback):
	calculate segment number using closest_segment rather than
	closest_handle.  Sometimes the closest handle is part of a different
	segment.
	(bezierline_draw): use correct size for start arrow.

	The next few entries are from Peter Moulder <reiter@netspace.net.au>:
	* lib/geometry.c (distance_line_point): added notes to documentation
	in comment.
	* app/object_ops.c (object_list_align_v): 
	(object_list_align_h): fix of by one error when calculating free space
	for equal distance alignment.
	* app/menus.c (objects_align_h, objects_align_v): include align
	adjacent menu items in the gnome version of the menus.
	* app/diagram.c (diagram_update_menu_sensitivity): set sensitivity on
	align adjacent menu items correctly.


	* lib/dummy_dep.h (dummy_dep): added bezierconn to dummy dependency
	table.

	* objects/standard/bezier.c: converted bezierline to use BezierConn.
	Still a few bugs.  It crashes on deleting line segments.

	* lib/Makefile.am (libdia_a_SOURCES): added BezierConn to libdia.

1999-12-05  James Henstridge  <james@daa.com.au>

	* lib/bezier_conn.[ch]: start of BezierConn object

	* app/interface.c: add bezierline to toolbox.

	* objects/standard/standard.c: initialise bezierline.

	* objects/standard/bezier.c: new object from Lars R. Clausen.  I have
	made a few modifications to get it working nicely.  It still needs
	a bit of work though.  Maybe create a BezierConn object in lib.

1999-12-02  James Henstridge  <james@daa.com.au>

	* plug-ins/python/pydia-*.c: fixed compile errors in these files.
	
	* plug-ins/python/Makefile.am: tried building everything.  It is
	building as a library at the moment.  I will have to convert it
	to a libtool library and add some initialisation code.
	
	* plug-ins/python/diamodule.c: start of the dia module, using the
	other object wrappers.  Not complete.

1999-12-01  James Henstridge  <james@daa.com.au>

	* plug-ins/python/pydia-object.c (PyDiaObject_GetAttr): implement
	the handles and connections attributes.

	* plug-ins/python/pydia-layer.c: added functions that use
	ConnectionPoint's.

	* plug-ins/python/pydia-handle.[ch]: wrapper for Handle's.

	* plug-ins/python/pydia-cpoint.[ch]: wrapper for ConnectionPoint's.

	* plug-ins/python/pydia-*.[ch]: starts of python scripting plug-in.
	I am currently wrapping the basic elements in the diagram in python
	objects -- nothing to see or play with yet.

1999-11-30  Alexander Larsson  <alla@lysator.liu.se>

	* AUTHORS:
	* HACKING:
	James Henstridge <james@daa.com.au> is now the maintainer of Dia.

1999-11-29  Alexander Larsson  <alla@lysator.liu.se>

	* configure.in:
	* po/ru.po:
	Added russian translation from Valek Filippov <frob@df.ru>

1999-11-24  James Henstridge  <james@daa.com.au>

	* sheets/UML/*: 
	* sheet/ER/*: moved extra sheet pixmaps back to separate dirs as
	discussed with Alex.  Also added extra makefiles so that make install
	works correctly.

1999-11-23  Alexander Larsson  <alla@lysator.liu.se>

	* app/preferences.[ch]:
	* app/display.c:
	Added snap to grid preference.
	Patch from Michael Leslie <mles@springboardwireless.com>

1999-11-21  Alexander Larsson  <alla@lysator.liu.se>

	* app/load_save.c:
	* lib/dia_xml.c:
	* lib/sheet.c:
	* lib/text.c:
	* objects/custom/shape_info.c:
	All strings returned by libxml must be freed with free, not
	g_free, or there will be problems if you use memory debugging
	in glib.
	
1999-11-21  Alexander Larsson  <alla@lysator.liu.se>

	* app/create_object.[ch]:
	* app/menus.c:
	* app/tool.[ch]:
	* app/commands.[ch]:
	* app/pixmaps.h:
	* app/interface.[ch]:
	Reverted the tool menu patch. It has some 'issues'.
	I liked it though, so it'll probably return.

1999-11-21  Alexander Larsson  <alla@lysator.liu.se>

        Fixed a lot of memory leaks. Thanks to Bruce Mitchener
	<bruce@cybersight.com> for some purify runs and analysis.
	Also a great thank you to Owen Taylor for creating MemProf, a
	free memory leak detector that was used to find and verify a
	lot of these fixes.
	
	* app/diagram.c:
	* app/paginate_psprint.c:
	* app/render_eps.[ch]:
	* app/render_svg.[ch]:
	Free renderers.

	* app/interface.c:
	Don't add a reference to ddisp->shell. Why was this done in
	the first place?

	* app/load_save.c:
	* lib/dia_xml.c:
	* lib/sheet.c:
	* lib/text.c:
	Free all strings returned from xmlGetProp

	* app/modify_tool.c:
	Plug leak.

	* objects/custom/custom.c:
	Use closedir() after opendir().

	* objects/custom/shape_info.c:
	User g_free() instead of "if (tmp) free(tmp)".

	* sheets/ER.sheet:
	Add newline at end of file.
	

1999-11-20  Alexander Larsson  <alla@lysator.liu.se>

        Based on patch from Patrick Reynolds <reynolds@cs.duke.edu>
	Adds tool menu and keyboard shortcuts.

	* app/create_object.[ch]:
	Use tool_set() instead of tool_reset().
	create_create_object_tool() takes extra type argument

	* menus.c:
	Add tools menu.
	
	* tool.[ch]:
	Moved tool_data here, export it.
	Add separate tool type for all create objects tools.
	new functions tool_set().

	* commands.[ch]:
	New callback tool_set_callback.

	* pixmaps.h:
	Moved some pixmaps to interface.c.
	
	* interface.[ch]:
	Remove tool_data array (moved to tool.c).
	Use the tool_data from tool.c.
	Remove modify_tool_button global var.
	
1999-11-20  Alexander Larsson  <alla@lysator.liu.se>

        Patch from Patrick Reynolds <reynolds@cs.duke.edu>
	
	* app/app_procs.c:
	Interprets command-line arguments as files to open even when
	HAVE_POPT is not defined.

	* app/magnify.c:	
	Shift-clicking when zooming zooms out, like the Gimp.

	* app/menus.c:
	Has hotkeys for zoom-100% and snap-to-grid.

1999-11-17  James Henstridge  <james@daa.com.au>

	* app/scroll_tool.c (scroll_motion): fixed shift style scrolling so
	that it is not jumpy.

	* app/Makefile.am (EXTRA_DIST): added extra files to extra dist list.

	* app/scroll_tool.c (scroll_motion): added `grabbing hand' type
	scrolling by pressing the shift key when using the scroll tool.

	* sheets/Makefile.am: fixed makefile so that install actually works
	if the directories $(pkgdatadir)/sheets/UML and $(pkgdatadir)/sheets/ER
	don't exist.
	(SHEETS): install Circuit.sheet

1999-11-15  Alexander Larsson  <alla@lysator.liu.se>
	Patch from Cyrille Chepelov <chepelov@rmcnet.fr>

	* sheets/Circuit.sheet:
	* sheets/ER.sheet:
	* sheets/FS.sheet:
	* sheets/Flowchart.sheet:
	* sheets/UML.sheet:
	* sheets/network.sheet:
	* sheets/sybase.sheet:
	Changed name space

	* sheets/Circuit.sheet:
	added some missing French translations

	* lib/sheet.c:
	killed the temporary sheet namespace

	* objects/custom/custom.c:
	obsolete comment cleaned up

1999-11-12  Alexander Larsson  <alla@lysator.liu.se>

	* configure.in:
	* po/pt.po:
	Added portugese translation from Pedro Morais
	<pmmm@rnl.ist.utl.pt>

1999-11-11  Alexander Larsson  <alla@lysator.liu.se>

        Changed all sheets to be specified in xml.
	All sheet objects removed from the C code.
	Patch from Cyrille Chepelov <chepelov@rmcnet.fr>
	
        * Makefile.am:
        * configure.in:
	Adding shapes dir.
	Updated version to 0.81cvs.
	
        * app/Makefile.am:
	Update run_dia.sh with sheet-dir.
	
	* app/app_procs.c:
	Load all sheets on startup.
	Create sheet directory first time.
	Don't call custom_register_sheets().

	* lib/Makefile.am:
	Add sheetdir define

	* lib/custom.h:
	Remove custom_register_sheets().

	* lib/sheet.[ch]:
	Add sheet loading code.

	* sheet/Circuit.sheet:
	* sheet/ER.sheet:
	* sheet/FS.sheet:
	* sheet/Flowchart.sheet:
	* sheet/UML.sheet:
	* sheet/network.sheet:
	* sheet/sybase.sheet:
	Added sheet files.

	* sheet/ER/weakentity.xpm:
	* sheet/UML/aggregation.xpm
	* sheet/UML/umlclass_template.xpm
	Added sheet pixmaps.
	These are moved from their old places.

	* sheet/.cvsignore:
	Shut up cvs.

	* objects/*/*.c:
	Removed sheet objects and sheet registration.
	
	* objects/ER/Makefile.am:
	* objects/ER/pixmaps/weakentity.xpm:
	* objects/UML/Makefile.am:
	* objects/UML/pixmaps/aggregation.xpm:
	* objects/UML/pixmaps/umlclass_template.xpm:
	Removed alternative pixmaps. (Moved to sheet).

	* objects/custom/Makefile.am:
	* objects/custom/load_sheet.[ch]:
	Removed old sheet loading code.
	
	* objects/custom/custom.c:
	Load all shapes instead of sheets.
	Removed custom_register_sheets().

	* objects/custom/custom_object.c:
	Added debug code.

	* objects/custom/shape_info.[ch]:
	Added shape_info_getbyname().

	* objects/flowchart/Makefile.am:
	* objects/flowchart/collate.shape            
	* objects/flowchart/delay.shape              
	* objects/flowchart/display.shape            
	* objects/flowchart/document.shape           
	* objects/flowchart/extract.shape            
	* objects/flowchart/flowchart.c              
	* objects/flowchart/intstorage.shape         
	* objects/flowchart/magdisk.shape            
	* objects/flowchart/magdrum.shape            
	* objects/flowchart/magtape.shape            
	* objects/flowchart/manualinput.shape        
	* objects/flowchart/manualop.shape           
	* objects/flowchart/merge.shape              
	* objects/flowchart/offlinestore.shape       
	* objects/flowchart/offpageconn.shape        
	* objects/flowchart/or.shape                 
	* objects/flowchart/predefdproc.shape        
	* objects/flowchart/preparation.shape        
	* objects/flowchart/punchedcard.shape        
	* objects/flowchart/punchedtape.shape        
	* objects/flowchart/sort.shape               
	* objects/flowchart/sumjunction.shape        
	* objects/flowchart/terminal.shape           
	* objects/flowchart/transaction.shape        
	* objects/flowchart/transmittape.shape       
	* objects/flowchart/pixmaps/collate.xpm      
	* objects/flowchart/pixmaps/delay.xpm        
	* objects/flowchart/pixmaps/display.xpm      
	* objects/flowchart/pixmaps/document.xpm     
	* objects/flowchart/pixmaps/extract.xpm      
	* objects/flowchart/pixmaps/intstorage.xpm   
	* objects/flowchart/pixmaps/magdisk.xpm      
	* objects/flowchart/pixmaps/magdrum.xpm      
	* objects/flowchart/pixmaps/magtape.xpm      
	* objects/flowchart/pixmaps/manualinput.xpm  
	* objects/flowchart/pixmaps/manualop.xpm     
	* objects/flowchart/pixmaps/merge.xpm        
	* objects/flowchart/pixmaps/offlinestore.xpm 
	* objects/flowchart/pixmaps/offpageconn.xpm  
	* objects/flowchart/pixmaps/or.xpm           
	* objects/flowchart/pixmaps/predefdproc.xpm  
	* objects/flowchart/pixmaps/preparation.xpm  
	* objects/flowchart/pixmaps/punchedcard.xpm  
	* objects/flowchart/pixmaps/punchedtape.xpm  
	* objects/flowchart/pixmaps/sort.xpm         
	* objects/flowchart/pixmaps/sumjunction.xpm  
	* objects/flowchart/pixmaps/terminal.xpm     
	* objects/flowchart/pixmaps/transaction.xpm  
	* objects/flowchart/pixmaps/transmittape.xpm 
	Moved shapes and their pixmaps to shapes/flowchart

	* shapes/Circuit/Makefile.am:
	* shapes/Circuit/index.sheet:
	Removed index.sheet.
	
	* shapes/Makefile.am:
	* shapes/flowchart/Makefile.am:
	* shapes/flowchart/*.shape:
	* shapes/flowchart/*.xpm:
	Added flowchart shapes. (Moved from objects/flowchart)
	

1999-11-07  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* app/app_procs.c: Fixed popt stuff.

1999-11-01  James Henstridge  <james@daa.com.au>

	* shapes/Circuit/[hv]led_de.{shape,xpm}: new circuit shapes from
	Andreas Scherf.

1999-10-31  Alexander Larsson  <alla@lysator.liu.se>

        * dia.spec:
	* configure.in:
	Update version to 0.81.
	
	* NEWS:
	Update with news for 0.81.
	
	* shapes/Circuit/*:
	* shapes/Circuit_eu/*:
	Moved european circuit objects to Circuit sheet.

1999-10-31  Alexander Larsson  <alla@lysator.liu.se>
	
        * lib/diagramdata.[ch]:
	Added layer_set_object_list() function.

	* app/undo.[ch]:
	Added support for undo of reordered objects.
	Fix the undo of delete to keep the right order on undo.
	
	* app/diagram.c:
	changed loop to object_add_updates_list() calls.
	Added undo support to bring to front/back.

	* app/disp_callbacks.c:
	* app/paginate_psprint.c:
	Remove warnings.

1999-10-30  Alexander Larsson  <alla@lysator.liu.se>

	This plugs some leaks. Thanks to
	Bruce Mitchener <bruce@cybersight.com> for running
	Dia through purify for me.
	
        * app/app_procs.c:
	Free displays and diagrams on exit.

	* app/modify_tool.c:
	Free gc when freeing tool.

	* lib/diagramdata.c:
	Free layer name.
	
	* app/display.c:
	Free update and display lists when destroying display.
	
	* lib/diagramdata.c:
	Don't leak layer name.

	* objects/custom/load_sheet.c: 
	* objects/custom/shape_info.c:
	Free loaded xml documents.

1999-10-28  Alexander Larsson  <alla@lysator.liu.se>

	* app/commands.c:
	* app/object_ops.[ch]:
	Add undo handling to alignment ops.
	Based partially on patch by Dan Cohn <dan@internap.com>.

	* objects/standard/image.c (image_move_handle):
	Don't divide by zero for small images.
	Patch by Dan Cohn <dan@internap.com>.

	* objects/UML/class.c (umlclass_destroy): 
	* objects/custom/custom_object.c (custom_destroy):
	Don't free connectionpoints before calling element_destroy
	which unconnects them.

1999-10-26  Alexander Larsson  <alla@lysator.liu.se>

	* objects/custom/custom_object.c: 
	Load and save padding too. Fixes strange load crashes.

	* app/group.c (group_destroy):
	Don't unconnect already freed connectionpoints when
	destroying group. Probably fixes bug reported by
	Elliot Lee <sopwith@redhat.com>.

	* app/render_gdk.c:
	Don't crash on zero-size (broken) bezier curves.
	Different sort of fix. This should work on closed bezier curves
	too.

	* objects/standard/textobj.c:
	Activate default properties dialog for Text objects.

	* app/render_eps.c: 
	* app/load_save.c:
	* app/preferences.c:
	* app/render_svg.c:
	fopen files in binary or text mode.

1999-10-26  Alexander Larsson  <alex@cendio.se>

	* app/render_gdk.c (bezier_add_lines):
	Don't crash on zero-size (broken) bezier curves.
	Fixes a crashing bug.

1999-10-25  James Henstridge  <james@daa.com.au>

	* app/Makefile.am (run_dia.sh): allow dia to find internal shape files
	before it is installed.

	* objects/flowchart/flowchart.c: use relative paths to find shapes.

	* objects/custom/custom.c (custom_object_load): take file names
	relative to $(pkgdatadir)/shape-internal, and check an environment
	variable for an alternative directory.

	* app/...: added copyright messages to the top of my new code.

	* app/paginate_psprint.c: some general clean ups.  Also, give an error
	dialog if we can't open the command or output file for writing.

	* app/diapagelayout.c (dia_page_layout_set_orientation): fixed
	function so it would set orientation to landscape correctly.

	* app/paginate_psprint.c: use the paper settings that come with
	the diagram.  Also implemented landscape printing.

	* app/render_eps.c (new_psprint_renderer): use diagram paper metrics
	in PS header.

	* app/commands.[ch] (file_pagesetup_callback): added callback for
	the page setup dialog.

	* app/menus.c: added page setup menu item.

	* app/pagesetup.[ch]: implementation of the page setup dialog.

	* app/diapagelayout.[ch]: added accessors for the scaling factor.
	
	* app/load_save.c (diagram_load): load paper information from save
	file.
	(diagram_save): save the paper info.

	* lib/diagramdata.c (new_diagram_data): initialise paper info section
	of DiagramData structure.
	(diagram_data_destroy): free the paper name.

	* lib/diagramdata.h: added a paper member to the DiagramData structure
	that holds the page layout info for a diagram.

1999-10-21  Alexander Larsson  <alla@lysator.liu.se>

	* objects/flowchart/box.c:
	* objects/flowchart/ellipse.c:
	* objects/flowchart/diamond.c:
	* objects/flowchart/parallelogram.c:
	Load and save padding too. Fixes strange load crashes.

1999-10-21  Alexander Larsson  <alla@lysator.liu.se>

	* app/app_procs.c (name_is_lib):
	.dll, .sl and .so.0.0.0 are also libraries.

1999-10-20  James Henstridge  <james@daa.com.au>

	* configure.in: added extra makefile.
	
	* shapes/Circuit_eu/*: a new set of european circuit shapes from
	Andreas Scherf <scherfa@fh-trier.de>.  Made a few small modifications
	(added fuses to makefile, fill the area of some of the components).

1999-10-19  Alexander Larsson  <alla@lysator.liu.se>

	* lib/Makefile.am:
	* app/Makefile.am: 
	Add GDK_IMLIB_CFLAGS to includes.
	Changed --export-dynamic to -export-dynamic

	* lib/widgets.c:
	* objects/UML/message.c:
	Removed c++ comment.

	* lib/render_store.[ch]:
	Don't use empty structure. That is not Ansi C.

1999-10-19  James Henstridge  <james@daa.com.au>

	* app/diapagelayout.c (dia_page_layout_init): use DiaUnitSpinner's for
	the margin entries, as they allow interpretation of units.
	(paper_size_change): display the current page dimensions.

	* app/diaunitspinner.[ch]: a widget derived from the standard
	GtkSpinButton that tries to take units into account.  So if you enter
	"1in" into the entry, it will convert it to 2.54cm.

1999-10-18  Alexander Larsson  <alla@lysator.liu.se>

	* app/app_procs.c:
	Removed include of dlfcn.h

1999-10-18  James Henstridge  <james@daa.com.au>

	* app/diapagelayout.c (paper_size_change, orient_changed): set upper
	bound on margin widths.  It is set to the paper width/height.

	* objects/flowchart/diamond.c (diamond_distance_from): fixed distance
	routine for the diamond.  This bug was found and fixed by Daniel Wang
	<danwang@CS.Princeton.EDU>

Sun Oct 17 19:46:36 1999  ape@gandalf.spacetec.no  (Asbjorn Pettersen)

	* app/commands.c: Add <sys/types.h> before <sys/stat.h> to
	remove warning (OS/2 version).

1999-10-17  Alexander Larsson  <alla@lysator.liu.se>

	* README:
	Put a pointer to objects/custom/README.
	
1999-10-17  Alexander Larsson  <alla@lysator.liu.se>

	* dia.spec:
	Updated version to 0.80

	* configure.in:
	Updated version to 0.80cvs

1999-04-08  Alexander Larsson  <alla@lysator.liu.se>

	* Released Dia 0.80
	Tag called DIA_0_80
	
1999-10-17  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* app/Makefile.am
	* lib/Makefile.am
	* objects/UML/Makefile.am
	* objects/ER/Makefile.am
	* objects/network/Makefile.am
	* objects/standard/Makefile.am
	* objects/FS/Makefile.am
	* objects/sybase/Makefile.am
	* objects/flowchart/Makefile.am
	* objects/custom/Makefile.am
	Added -I$(top_srcdir)/intl which is needed for
	--with-included-gettext.

	* POTFILES.in
	Updated.
	
	* po/sv.po
	Updated swedish translation.

1999-10-16  Alexander Larsson  <alla@lysator.liu.se>

	* configure.in:
	Updated version number to 0.80.

	* KNOWN_BUGS:
	New file.

	* TODO:
	Updated. Moved bugs to KNOWN_BUGS.

	* NEWS:
	Updated with 0.80 release notes.
	
1999-10-16  Alexander Larsson  <alla@lysator.liu.se>
	
	* lib/orth_conn.c:
	For backwards compatibility, make sure handle 0 and 1 are the
	first and last handle. Fixes compatibility with 0.41, breaks
	compatibility with cvs version.
	Fixed bug in undo/redo of adding deleting endpoint segments
	when the endpoint was connected.
	Start OrthConn objects with three segments.

1999-10-16  James Henstridge  <james@daa.com.au>

	* objects/custom/custom_object.c (custom_update_data): changed
	resizing behaviour a bit so that shapes don't grow huge when you try
	to resize them to smaller than the size required by the text box.
	Also, now shapes will not grow with fixed aspect ratio when you enter
	text into them unless the shape has the fixed aspect ratio flag set.

1999-10-15  James Henstridge  <james@daa.com.au>

	* objects/flowchart/flowchart.c: add new shapes to flowchart sheet.

	* object/flowchart/pixmaps/...: corresponding pixmaps for new shapes.

	* objects/flowchart/magdrum.shape: 
	* objects/flowchart/offlinestore.shape: 
	* objects/flowchart/punchedtape.shape: 
	* objects/flowchart/transmittape.shape: 
	* objects/flowchart/punchedcard.shape: new shapes.

	* objects/flowchart/flowchart.c: add new shapes to flowchart sheet.

	* object/flowchart/pixmaps/...: corresponding pixmaps for new shapes.

	* objects/flowchart/collate.shape:
	* objects/flowchart/delay.shape:
	* objects/flowchart/extract.shape:
	* objects/flowchart/intstorage.shape:
	* objects/flowchart/magdisk.shape:
	* objects/flowchart/magtape.shape:
	* objects/flowchart/merge.shape:
	* objects/flowchart/or.shape:
	* objects/flowchart/sort.shape:
	* objects/flowchart/sumjunction.shape: new shapes.

1999-10-15  Alexander Larsson  <alla@lysator.liu.se>

	* TODO (BUGS):
	Added bug:
	Entering an erronous command as print command
	crashes dia.

	* app/paginate_psprint.c:
	Save all print dialog values for next time.
	
	* app/Makefile.am:
	Remove custom lib from DIA_LIB_PATH.

1999-10-14  James Henstridge  <james@daa.com.au>

	* objects/flowchart/flowchart.c: add new shapes to flowchart sheet.

	* object/flowchart/pixmaps/...: corresponding pixmaps for new shapes.
	
	* objects/flowchart/offpageconn.shape: 
	* objects/flowchart/manualop.shape: 
	* objects/flowchart/preparation.shape: 
	* objects/flowchart/manualinput.shape: 
	* objects/flowchart/predefdproc.shape: 
	* objects/flowchart/terminal.shape: new shapes in the flowchart sheet.

1999-10-13  James Henstridge  <james@daa.com.au>

	* app/diapagelayout.[ch]: added accessors to paper information.  The
	widget should be just about complete now.

	* app/diapagelayout.[ch]: fleshed out the page setup widget a bit more.
	It actually does something now.

1999-10-12  James Henstridge  <james@daa.com.au>

	* app/pixmaps/portrait.xpm, app/pixmaps/landscape.xpm: support pixmaps
	for the page layout widget.

	* app/diapagelayout.[ch]: start of page layout widget.  Not actually
	built yet as it is not complete.

	* objects/flowchart/flowchart.c: added new shapes to sheet.

	* objects/flowchart/display.shape:
	* objects/flowchart/transaction.shape: new shapes.

	* AUTHORS: added my name to the spec file.

	* dia.spec: include the dia desktop entry to the spec file.

	* Makefile.am: install the dia.desktop file.

	* dia.desktop: added a gnome desktop entry so you can start dia
	from the gnome panel menu.

1999-10-11  James Henstridge  <james@daa.com.au>

	* objects/custom/custom_object.c:
	* objects/custom/shape_info.c: warning fixes.

	* objects/flowchart/document.shape: a shape file for the `document'
	flowchart shape.

	* lib/custom.h: new header with the custom shape prototypes.

	* app/app_procs.c: register custom objects as well.
	(register_objects_in): close shared libraries if they don't load
	correctly, and call g_module_make_resident on libraries that load
	correctly.

	* app/Makefile.am (dia_LDADD): added libcustom_objects.a to link list.

	* objects/custom/custom.c: removed get_version, added custom_ prefix
	to register_objects and register_sheets.

	* objects/custom/Makefile.am: converted to a normal library.

1999-10-10  Alexander Larsson  <alla@lysator.liu.se>

	* app/lineprops_area.c:
	* app/render_svg.c:
	* lib/objchange.c:
	* objects/custom/shape_info.c:
	* objects/flowchart/box.c:
	* objects/flowchart/diamond.c:
	* objects/flowchart/ellipse.c:
	* objects/flowchart/parallelogram.c:
	* objects/network/flash.c:
	* objects/network/scead-plug.c:
	* objects/sybase/client.c:
	Removed -Wall warnings.
	
	* objects/network/bus.c:
	Removed unused functions.

	* objects/FS/flow-ortho.c:
	* objects/FS/flow-poly.c:
	* objects/FS/flow.c:
	* objects/FS/function.c:
	
	Implemented "non-implemented" undo for FS objects.
	Now at least it won't crash.
	
1999-10-10  Alexander Larsson  <alla@lysator.liu.se>

	* objects/network/bus.c:
	Implemented undo.
	Handles are now added and removed using the object menu.
	Default to 6 handles instead of 10.
	Changed name from "Standard - Bus" to "Network - Bus". Kept old
	name for backwards compatibility.

	* objects/network/network.c:
	Changed name from "Standard - Bus" to "Network - Bus". Kept old
	name for backwards compatibility.

	* app/properties.[ch]:
	* app/undo.c:
	Update properties in properties dialog if the shown object
	is part of and ObjectChange (undo or redo).

	* lib/poly_conn.c:
	Remove old known bugs list.

	* objects/UML/class_dialog.c:
	Removed debug printf's.

1999-10-10  James Henstridge  <james@daa.com.au>

	* objects/custom/custom.c (custom_object_load): new function that
	provides a nice entry point to the custom shape code for when it
	gets used by other libraries.

	* configure.in: removed 11 makefiles from AC_OUTPUT list.  This
	speeds builds up a bit.

	* */Makefile.am (EXTRA_DIST): include pixmaps in distribution.
	(SUBDIRS): do not descend into pixmaps subdirs.

	* */pixmaps/Makefile.am: removed -- incorporate into parent makefiles.
	This speeds up build process.

	* objects/custom/custom.c (sheets): made variable static.

	* objects/custom/custom_util.[ch] (custom_get_relative_filename):
	renamed function.

	* objects/custom/load_sheet.[ch] (custom_sheet_load): renamed function.

	* objects/custom/custom.c: look in ~/.shapes instead of
	~/.dia_shapes as the per-user shapes directory.

	* app/preferences.c (prefs_save): save config to ~/.diarc.
	(prefs_load): load configuration from ~/.diarc.  If the file
	does not exist, fallback on the old ~/.diarc location.

	* app/app_procs.c (create_user_dirs): create the ~/.dia directory
	on startup.
	(register_all_objects): look for user specific objects in
	~/.objects rather than ~/.dia_libs.

1999-10-10  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* configure.in:
	* app_procs.c:
	* objects/flowchart/box.c
	* objects/flowchart/ellipse.c
	* objects/flowchart/flowchart.c	
	Use gmodule for dynamic linking. As gmodule is using
	RTLD_GLOBAL i had to change flowchart box and ellipse
	so the typenames doesn't conflict with the standard
	box and ellipse.

	* message.c
	* commands.c
	Use button box to make dialogs look better.

1999-10-09  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/class_dialog.c:
	* objects/UML/class.h:
	Implemented undo for "UML - Class" objects.
	Not 100% tested yet.

	* objects/UML/classicon.c:
	* objects/UML/constraint.c:
	* objects/UML/dependency.c:
	* objects/UML/generalization.c:
	* objects/UML/implements.c:
	* objects/UML/large_package.c:
	* objects/UML/lifeline.c:
	* objects/UML/message.c:
	* objects/UML/object.c:
	* objects/UML/realizes.c:
	* objects/UML/state.c:
	* objects/UML/usecase.c:
	Removed warnings.
	
	* lib/connectionpoint.h:
	Fixed typo.
	
1999-10-09  James Henstridge  <james@daa.com.au>

	* objects/custom/*.[ch]: added copyright notices to custom object
	files.

	* shapes/Circuit/hdiode.shape:
	* shapes/Circuit/hzener.shape: 
	* shapes/Circuit/opamp.shape:
	* shapes/Circuit/vdiode.shape:
	* shapes/Circuit/vzener.shape: made adjustments to make the circuit
	shapes look nice after the custom shape code changes.

	* objects/custom/README: updated docs to cover changes to drawing
	code.

	* objects/custom/custom_object.c (custom_draw): honour the line
	properties when drawing the shape.

	* objects/custom/shape_info.[ch]: added support for setting line
	properties for individual drawing elements in a custom shape.  You
	can set the dash style, dash length, cap style and join style.

1999-10-07  James Henstridge  <james@daa.com.au>

	* objects/custom/shape_info.c (parse_style): added a few extra synonyms
	for foreground and background.

	* objects/custom/custom_object.c (custom_draw): use the new style
	information when drawing the object.

	* objects/custom/shape_info.[ch]: store all shape style info in the
	GraphicStyle structure.  This makes adding support for extra CSS
	attributes easier -- we don't have to keep adding extra arguments to
	a lot of functions.

1999-10-05  James Henstridge  <james@daa.com.au>

	* lib/intl.c (unalias_lang): merged in changes from the i18n code
	swiped from gnome-libs.

1999-10-03  Alexander Larsson  <alla@lysator.liu.se>

	* objects/standard/image.c (get_directory):
	Fix memleak. Found by Kjartan Maraas <kmaraas@online.no>

1999-09-28  Alexander Larsson  <alla@lysator.liu.se>

	* lib/poly_conn.c (polyconn_destroy):
	Fix bug. Access of freed memory.
	Rememeber, you can't free the handles of an object
	before calling object_destroy(), as it unconnects the handles
	therefore referencing them.

1999-09-28  Alexander Larsson  <alla@lysator.liu.se>

	* app/undo.c:
	undo_clear() didn't set stack->depth to zero.
	This made other undo functions crash after this had been called
	on a "full" stack.
	
	* dia.xpm:
	Slightly modified by Chris Love <clove@exactis.com>

1999-09-19  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/class.h: 
	* objects/UML/class_dialog.c:
	Retrun NULL ObjectChange on class property change.
	This means no crashes, but "UML - Class" doesn't support undo yet.
	
1999-09-19  Alexander Larsson  <alla@lysator.liu.se>
	
	* lib/text.c:
	Indentation fix.

	* objects/UML/classicon.c:
	* objects/UML/dependency.c:
	* objects/UML/generalization.c:
	* objects/UML/implements.c:
	* objects/UML/large_package.c:
	* objects/UML/lifeline.c:
	* objects/UML/message.c:
	* objects/UML/object.c:
	* objects/UML/realizes.c:
	* objects/UML/state.c:
	* objects/UML/usecase.c:
	Update to new undo (w. get/set_state).
	Add object menu to add/delete segments.

1999-09-17  Alexander Larsson  <alla@lysator.liu.se>

	* app/menus.c:
 	Add equal distance alignment.

	* app/object_ops.c:
	Add equal distance alignment.
	Fix bug in adjacent alignment.

1999-09-16  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/constraint.c: 
	Update to new undo (w. get/set_state).

1999-09-15  Alexander Larsson  <alla@lysator.liu.se>

	* app/paginate_psprint.c:
	Save (parts, more todo) of the info in the print dialog to the
	next time it's opened.
	Patch from Yo Ric Dude <ricdude@toad.net>

1999-09-14  Alexander Larsson  <alla@lysator.liu.se>

	* configure.in:
	Updated version string to 0.41cvs.

	* objects/UML/assocition.c:
	Update to new undo (w. get/set_state).
	Add object menu to add/delete segments.

	* app/app_procs.c:
	Added function debug_break() and called it after all
	objects and sheets are loaded. Place a breakpoint here if you
	want to debug objects. All symbols should be loaded.

1999-09-12  James Henstridge  <james@daa.com.au>

	* app/menus.c (display_menu_items): added print menu item.
	(filemenu): always add print menu item -- even if gnome-print is
	not installed.

	* app/commands.h, app/commands.c (file_print_callback): the print
	menu item is now available for both gnome-print and non gnome-print
	setups.

	* app/paginate_psprint.c (diagram_print_ps): show a dialog to let you
	print with the non gnome-print driver.

1999-09-11  James Henstridge  <james@daa.com.au>

	* app/paginate_gnomeprint.c (diagram_print_gnome): moved the gnome
	printer dialog code out of commands.c.

	* app/paginate_psprint.c: new file containing the pagination code for
	psprint.

	* app/render_eps.c: made a few modifications so as well as producing
	EPS files, this renderer can be set up to do postscript printing.
	This basically entailed adding an extra function to create a RenderEPS
	renderer which did not bother setting the viewport for the document.
	That was left for the pagination code.

1999-09-10  James Henstridge  <james@daa.com.au>

	* app/render_gnomeprint.c (draw_ellipse, fill_ellipse): since
	gnome-print does not support elliptic arcs at the moment, approximate
	the ellipse with eight bezier curves.  This gives a pretty good
	match to a true ellipse.

1999-09-09  James Henstridge  <james@daa.com.au>

	* app/commands.c (file_gnome_print_callback): added support for
	scaling the diagram.  Also fixed a few other bugs.

	* app/paginate_gnomeprint.c (print_page): added ability to scale
	document.  Fixed up test to see if the page has no objects on it.
	This should prevent some blank pages being printed.  Non square
	objects such as lines could still cause problems.

1999-09-08  James Henstridge  <james@daa.com.au>

	* app/commands.c (file_gnome_print_callback): changed from using the
	standard printer selection dialog to one that also has a paper size
	selector as well.

	* commands.[ch]: added callbacks for the print menu item.  Currently
	it only does A4 output.  I will make it configurable soon.
	
	* app/menus.c: add a print diagram menu item if gnome-print support
	is enabled.
	
	* app/paginate_gnomeprint.c, app/paginate_gnomeprint.h: this is a
	bit higher level than the gnome-print renderer.  It splits the
	diagram into page size chunks and then renders them.  For each
	page, it only renders the objects whose bounding box intersects
	the page, and it sets the clip mask so that the diagram does not
	overlap the margins.
	
	* app/render_gnomeprint.c, app/render_gnomeprint.h: added a renderer
	that uses gnome-print as its back end.
	
	* configure.in: added a check for gnome-print.  It is disabled by
	default because the code is not really working correctly yet.

	* app/menus.c: the delete object menu item was missing from the
	GnomeUIInfo style menus.

1999-09-07  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* configure.in
	Added japanese to ALL_LINGUAS.
	Fix for Linux on Alpha.

1999-09-07  Alexander Larsson  <alla@lysator.liu.se>

	* app/create_object.c (create_object_button_press):
	Always initialize tool->obj. Otherwise we store a null
	in the undo Change.

	* lib/text.c:
	Set linestyle before drawing cursor.
	Fix undo of backwards delete.

1999-09-05  James Henstridge  <james@daa.com.au>

	* dia.spec: updated spec file to distribute $(prefix)/share/dia.

	* app/render_svg.c (draw_image): some fixes so that the appropriate
	style attributes are set.  Before it was setting line styles on
	fill_* functions.  Now it only does this for the draw_* variants.

	* app/Makefile.am (run_dia.sh): set the DIA_SHAPE_PATH environment
	variable so that custom shapes can be loaded.

	* shapes/: new directory for custom shapes.  The Circuit sheet has
	been moved here.

1999-09-02  James Henstridge  <james@daa.com.au>

	* TODO: removed a few todo items that have been implemented.

	* app/interface.c (create_sheets): enabled the popup page menu to the
	notebook.  This can make it easier to select different sheets.

	* object/custom/Circuit/: added diode, zener diode, ground point and
	operational amplifier shapes.
	
	* objects/custom/Makefile.am: added a note about adding DEBUG_CUSTOM
	if you want the output.

	* objects/custom/shape_info.c (parse_path): same here.

	* objects/custom/load_sheet.c (load_with_readdir): don't print so
	much debugging output.  To get the previous level of output, define
	DEBUG_CUSTOM.

	* objects/custom/shape_info.c (parse_svg_node): polygons were being
	recorded as polylines in the ShapeInfo structure.

	* objects/custom/README: some notes on writing new custom shapes.
	
1999-09-01  James Henstridge  <james@daa.com.au>

	* objects/custom/Circuit/hinductor.*:
	* objects/custom/Circuit/vinductor.*: added inductor shapes that
	also test out the bezier curve and SVG path support.
	
	* objects/custom/custom_object.c (custom_draw): added support for
	drawing bezier paths and filled shapes.

	* objects/custom/shape_info.c (parse_path): new function to parse
	SVG path elements.  It does not do quadratic beziers or elliptic
	arcs though.  Only moves, lines and cubic beziers.
	(*): added support for paths.

1999-08-31  James Henstridge  <james@daa.com.au>

	* objects/sybase/ltm.c (render_to_store): use the newer bezier API.

	* app/render_svg.c (draw_bezier, fill_bezier): updated renderer
	interface

	* app/render_eps.c (draw_bezier, fill_bezier): updated renderer
	interface

	* app/render_gdk.c (draw_bezier, fill_bezier): updated renderer
	interface.

	* lib/render_store.[ch]: use newer bezier functions.

	* lib/render.h: changed the bezier drawing functions to use an array
	of BezPoint structures instead of normal Point structures to allow
	lineto's mixed in with the curveto's.
	
	* objects/custom/Circuit/pnp.*: added pnp transistor shape.
	
	* objects/custom/Circuit/Makefile.am (SHAPES): added index.sheet and
	xpm images for different shapes to Makefile.

	* objects/custom/custom_object.c (custom_object_new): set the icon
	for the sheet button if there is one.  Otherwise fall back on the
	default custom object icon.

	* objects/custom/shape_info.c (load_shape_info): read the sheet
	icon name from the shape file.

	* app/interface.c (create_sheet_page): if sheet_obj->pixmap == NULL,
	check the pixmap_file field for the name of a pixmap file to load
	for the tool.

	* lib/sheet.h (SheetObj): added pixmap_file field to structure.  It is
	at the end of the structure, and it isn't used if the pixmap field
	is non NULL, so it should not break binary compatibility.

	* objects/custom/load_sheet.[ch]: moved sheet loading code here.  Also
	added support for the use of an index.sheet file so you can specify
	the ordering of the shapes in the sheet, and also internationalise
	the sheet name and actually be able to give a description.  The old
	readdir based sheet loading code acts as a fallback if an index.sheet
	file can not be found.

	* objects/custom/custom_util.[ch]: new file containing useful routines
	needed by the custom object code.  Currently only contains a simple
	routine for resolving relative paths.

	* objects/custom/custom_object.c (custom_draw): fixed problem with
	drawing rectangles if the shape has been flipped.

1999-08-30  James Henstridge  <james@daa.com.au>

	* objects/custom/custom_object.c (custom_get_object_menu): allow
	flipping of custom shapes.  This uses the miggle click object
	menu.

	* objects/custom/Circuit/npn.shape: fix aspect ratio.

	* objects/custom/custom_object.c (custom_update_data): honour the
	aspect ratio constraints.

	* objects/custom/shape_info.c (load_shape_info): updated aspect ratio
	tag parsing, so you can specify a free, fixed or a range for aspect
	ratios for the shape.

1999-08-29  James Henstridge  <james@daa.com.au>

	* objects/custom/test.xml, objects/custom/Circuit/*.shape: fixed
	up shape namespace tag.

	* objects/custom/shape_info.c (load_shape_info): check xml:lang
	attribute on <description> elements to support i18n for custom
	shape descriptions.
	Also changed the shape namespace for custom shapes to something
	a little more sensible.

	* lib/dummy_dep.h (dummy_dep): added extra dummy dependency.

	* lib/intl.c: new file containing some functions for i18n stuff.

	* app/layer_dialog.c (create_button_box): fixed a warning.

	* objects/custom/custom_object.c: use current line style.  Save dash
	length.

	* objects/flowchart/diamond.c: use current line style.  Save dash
	length.

	* objects/flowchart/parallelogram.c: use current line style.  Save
	dash length.

	* objects/flowchart/ellipse.c: use current line style.  Save dash
	length.

	* objects/flowchart/box.c: use current line style.  Save dash length.

	* objects/standard/ellipse.c: make ellipse use current line style.

	* objects/standard/box.c: use the line style set in the toolbox for
	new boxes, and remember the dash length.

	* app/commands.c (view_toggle_rulers_callback): fix reshowing of
	rulers.

1999-08-24  James Henstridge  <james@daa.com.au>

	* objects/flowchart/ellipse.c (ellipse_update_data): made some changes
	to try to stop ellipse to get infinite width/height when we resize,
	while trying to keep the text inside the ellipse.

	* objects/flowchart/box.c, objects/flowchart/parallelogram.c,
	* objects/flowchart/diamond.c, objects/flowchart/ellipse.c: fixed
	resizing behaviour, so that you can't push objects round the screen
	with the resize handles.

	* app/lineprops_area.c (dia_arrow_chooser_init, dia_line_chooser_init):
	get the OK buttons in the dialogs to take default clicks.

	* objects/custom/custom_object.c: added code so that resizing the
	shape does not end up pushing it round the screen.

1999-08-23  Alexander Larsson  <alla@lysator.liu.se>

        * app/display.[ch]:
	Generate rectangle with the union of the damaged regions.
	This is used to optimize the grid paint and the object rendering.
	display_render_pixmap passes this info to grid_draw() and data_render().

	* app/grid.[ch]:
	grid_draw doesn't draw grid lines outside of damaged rectangle.
	Sets dashlength when drawing non-solid grid.
	
	* lib/diagramdata.[ch]:
	data_render() and layer_render() takes an optional damaged rectangle
	argument. No objects not intersecting this are drawn.

	* app/diagram.c:
	Fix warning.
	Call data_render with NULL update rectangle.
	
1999-08-23  James Henstridge  <james@daa.com.au>

	* objects/custom/custom_object.c (custom_update_data): if the aspect
	ratio is fixed, make sure the shape is not distorted.

	* object/custom/shape_info.h, objects/custom/shape_info.c: notice if
	a <fixaspectratio/> tag is given in the shape file.

	* objects/custom/shape_info.[ch], objects/custom/custom_object.c:
	added support for stroke-width, stroke and fill CSS attributes
	specified in style attributes of the SVG elements.  The line width
	is relative to the user specified line width.  The stroke and fill
	attributes can only be used to swap the foreground/background
	colours.

	* lib/widgets.c (dia_line_style_selector_set_linestyle): set the
	sensitivity on the dash length selector when this function is called.

	* objects/standard/arc.c: same.  Also handle dash length.
	* objects/standard/zigzagline.c: same.
	* objects/standard/polyline.c: same.  Also handle dash length.
	* objects/standard/line.c: use default arrow/line styles.

	* app/interface.c: added callbacks to set the default attributes.

	* lib/attributes.c: added implementations of these functions.

	* lib/attributes.h: added extra prototypes for the new line properties
	area in the toolbox.

	* app/interface.c (create_lineprops_area): added line properties
	area to bottom of toolbox.

	* app/lineprops_area.h: a header exporting a few routines of the
	line properties area widgets.

	* app/lineprops_area.c: new file containing a selector for arrows
	and line styles to go in the main toolbox.

1999-08-22  Alexander Larsson  <alla@lysator.liu.se>

	* HACKING:
	Update Gtk+ 1.0.5 comment to 1.2.0.

	* INSTALL:
	Demand libtool 1.3

	* acconfig.h:
	Add HAVE_LIBPOPT

	* configure.in:
	Make sure we don't propagate -ldl and -lpopt to all LIBS
	by adding new var APP_LIBS that only app/dia links with.
		
	* app/Makefile.am:
	Update run_dia.sh to load custom and flowchart objects.

	* objects/ER/Makefile.am:
	* objects/FS/Makefile.am:
	* objects/UML/Makefile.am:
	* objects/network/Makefile.am:
	* objects/standard/Makefile.am:
	* objects/sybase/Makefile.am:
	Don't build versioned libs.	
	
1999-08-22  James Henstridge  <james@daa.com.au>

	* configure.in: added objects/custom/Circuit/Makefile to AC_OUTPUT
	list.

	* objects/Makefile.am (SUBDIRS): added custom to subdir list -- it
	should actually work a bit now.

	* objects/custom/Circuit/*: a test sheet for the custom shape code.
	It is a small collection of circuit elements.

	* objects/custom/shape_info.c: fixed up loading of polylines and
	polygons.  Before it was removing negative signs :(

	* objects/custom/pixmaps/custom.xpm: drew the custom shape icon.  A
	placeholder was here before.  I still need to work out how to set
	icons for individual custom shapes.
	
	* objects/custom/custom.c: added code to load the shapes into sheets
	properly.  The shape files should be arranged into directories, and
	each directory represents a different sheet in the toolbox.  This
	will make it very easy to distribute a collection of dia shapes as
	a tarball.  I still need to work out internationalisation, and maybe
	also shape ordering in the sheet.

	* objects/custom/custom_object.c: fixed up dialogs for these objects.
	(custom_create): fix for objects without text areas.

	* objects/custom/shape_info.h, objects/custom/custom_object.c: loading
	and saving of custom object works correctly now.

1999-08-21  James Henstridge  <james@daa.com.au>

	* objects/flowchart/ellipse.c: 
	* objects/flowchart/diamond.c: 
	* objects/flowchart/parallelogram.c: 
	* objects/flowchart/box.c: Fixed up a few bugs in these objects when
	copying or loading these object types.  Not all the connection
	points would be initialised correctly.

	* objects/flowchart/Makefile.am (libflowchart_objects_la_LDFLAGS):
	similar here.

	* objects/custom/Makefile.am (libcustom_objects_la_LDFLAGS): do not
	build a versioned library.  It will only ever be dlopen'd, so this
	is not a problem.

	* objects/custom/custom_object.c (custom_distance_from): allow
	selecting the object by clicking on the text.  This fixes problems
	where the text box is outside the graphic.

	* objects/custom/shape_info.c (load_shape_info): fixed up reading
	of connections points.  It should be possible to add connections
	to custom objects now.

	* objects/custom/custom_object.c (custom_update_data): fixed resizing
	due to changes to text.

	* configure.in: added extra makefiles.
	
	* objects/custom/shape_info.[ch]:
	* objects/custom/custom_object.c:
	* objects/custom/custom.c: the starts of custom shape support in dia.
	This is not built by default at the moment, since it is not quite
	complete.  When it is, it will let you create more shapes for dia
	without writing a line of C.  Its implementation includes buzzwords
	such as XML and SVG, so it must be good :)

1999-08-19  Karsten Weiss  <karsten@addx.au.s.shuttle.de>

	* app/app_procs.c (app_exit): Use button labels "Quit" and
	"Cancel" instead of "Yes" and "No".
	Set default action to "Cancel" instead of "Quit".

1999-08-19  James Henstridge  <james@daa.com.au>

	* objects/flowchart/flowchart.c: added ellipse object.
	
	* objects/flowchart/ellipse.c: a new shape for the flowchart toolbox.

1999-08-18  James Henstridge  <james@daa.com.au>d

	* app/color_area.c (color_area_edit): small fix to prevent dia from
	segfaulting when you try to change the default foreground/background.

1999-08-17  Alexander Larsson  <alla@lysator.liu.se>

	* app/diagram.[ch] (diagram_redraw_all):
	Added function that redraws all diagrams.

	* app/preferences.c (prefs_apply):
	Call diagram_redraw_all when prefs are changed.

	* app/render_svg.c:
	Don't use xmlEncodeEntitiesReentrant(). It doesn't exist on
	older libxml's, and the old version works good enought here.
	
1999-08-17  James Henstridge  <james@daa.com.au>

	* lib/widgets.c: changed handlers that were connected to the GtkButton
	"pressed" signal to connect to the "clicked" signal.  This removes the
	problem where dialogs are inactive until you click a mouse button
	after using a colour selector.

	* configure.in: added extra makefiles to AC_OUTPUT list.
	
	* objects/Makefile.am (SUBDIRS): added flowchart module

	* objects/flowchart/*: a collection of shapes for use in flowcharts.

	* app/color_area.c (color_area_events): similar here.

	* app/linewidth_area.c (linewidth_area_events): sometimes a configure
	event is recieved with event->width == 0, which causes a warning if we
	try to create a pixmap of that width.

	* app/preferences.c, app/preferences.h, app/grid.c: added code to
	allow you to configure the colour of the grid, and also lets you
	set the grid to use dotted lines instead of solid ones.
	
	* app/commands.c, app/commands.h, app/diagram.c, app/diagram.h,
	app/menus.c, app/Makefile.am: added menu entry for exporting SVG files.
	
	* app/render_svg.h, app/render_svg.c: an SVG (Scalable Vector Graphics)
	export filter.  It is not quite complete, but for most shapes it
	works as expected.  Fonts still need a bit of work.

1999-08-11  Robert Brady  <rwb197@ecs.soton.ac.uk>

	* configure.in: Added "en_GB" to ALL_LINGUAS.

1999-08-04  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* menus.c
	Added Undo and Redo to GNOME menus.
	
	* objects/ER/attribute.c:
	* objects/ER/entity.c:
	* objects/ER/participation.c:
	* objects/ER/relationship.c:
	Added get/set_state functions.

	* objects/ER/participation.c:
	Added add/delete segment.

	* po/sv.po
	Updated Swedish translation.

1999-07-25  Alexander Larsson  <alla@lysator.liu.se>

        * app/preferences.[hc]:
	Added undo_depth pref.
	
	* app/undo.[ch]:
	Never grow stack larger than pref.undo_depth.
	undo_depth == 0 means unlimited.
	Converted printfs to conditionally compiled DEBUG_PRINTFs.
	
1999-07-25  Alexander Larsson  <alla@lysator.liu.se>

        * app/diagram.c:
	* app/group.c:
	* lib/object.h:
	* lib/render_object.c:
	* objects/ER/attribute.c:
	* objects/ER/entity.c:
	* objects/ER/participation.c:
	* objects/ER/relationship.c:
	* objects/FS/flow-ortho.c:
	* objects/FS/flow-poly.c:
	* objects/FS/flow.c:
	* objects/FS/function.c:
	* objects/UML/actor.c:
	* objects/UML/association.c:
	* objects/UML/class.c:
	* objects/UML/classicon.c:
	* objects/UML/component.c:
	* objects/UML/constraint.c:
	* objects/UML/dependency.c:
	* objects/UML/generalization.c:
	* objects/UML/implements.c:
	* objects/UML/large_package.c:
	* objects/UML/lifeline.c:
	* objects/UML/message.c:
	* objects/UML/note.c:
	* objects/UML/object.c:
	* objects/UML/realizes.c:
	* objects/UML/small_package.c:
	* objects/UML/state.c:
	* objects/UML/usecase.c:
	* objects/network/bus.c:
	* objects/standard/arc.c:
	* objects/standard/box.c:
	* objects/standard/ellipse.c:
	* objects/standard/image.c:
	* objects/standard/line.c:
	* objects/standard/polyline.c:
	* objects/standard/textobj.c:
	* objects/standard/zigzagline.c:
	Removed all traces of is_empty(). It doesn't work in an
	Undo/Redo world.

1999-07-25  Alexander Larsson  <alla@lysator.liu.se>

        * app/diagram.c:
	* app/group.[ch]:
	* app/undo.[ch]:
	Undoable grouping and ungrouping.

	* app/layer_dialog.c:
	* lib/diagramdata.[ch]:
	Undoable layer ops.

	* app/modify_tool.c:
	Undoable unconnect on handle move.

	* lib/orth_conn.[ch]:
	Working undoable add/remove segment.
	Removed endpoint_handles from OrthConn, renamed
	midpoint_handles to handles and put the endpoint
	handles there.

	* objects/standard/zigzagline.c:
	* objects/ER/participation.c:
	* objects/UML/association.c:
	* objects/UML/dependency.c:
	* objects/UML/generalization.c:
	* objects/UML/realizes.c:
	Update for the changes in OrthConn
	
1999-07-23  Karsten Weiss  <karsten@addx.au.s.shuttle.de>

	* configure.in: Added "de" to ALL_LINGUAS.

1999-07-17  Alexander Larsson  <alla@lysator.liu.se>

	* dia.1:
	Fixed typo.

	* app/display.c:
	* po/da.po:
	* po/fr.po:
	* po/hu.po:
	* po/no.po:
	* po/pl.po:
	* po/sv.po:
	Don't have the <Display> etc part of the menu strings
	i18n:ed. Patch from Fabrice.Bellet@imag.fr.

	* app/diagram.c:
	Don't have the <Display> etc part of the menu strings
	i18n:ed. Patch from Fabrice.Bellet@imag.fr.
	Don't remove is_empty() objects, that don't work with undo.

	* lib/objchange.[ch]:
	New files.
	Definition of ObjectChange. This is essentially an Change
	exported to the object libs. It encapsulates a change made
	to an objects internals. It can be applied, reverted and freed.
	There are also utility functions for doing ObjectChanges that
	only get/set the whole state of an object to store the change.
	This cannot be used when the object change deletes or adds a
	object which has references from other objects, eg. Handles which
	might be connected.

	* lib/Makefile.am:
	Added objchange.c and objchange.h.

	* lib/dia_image.c:
	Return NULL when loading fails.

	* lib/diamenu.h:
	Menu callbacks return an ObjectChange.

	* lib/dummy_dep.h:
	Reference objchange.o

	* lib/focus.h:
	Key events return ObjectChange if they modify the object.

	
	* lib/object.h:
	Added object_add_handle_at() function.
	Apply properties returns an ObjectChange.
	Remove ObjectState and the get/set state functions, these
	don't always work. Use the new ObjectChange instead.
	
	* lib/object.c:
	Added object_add_handle_at() function implementation.
	
	* lib/orth_conn.[ch]:
	Use ObjectChange. Not finished yet.
	Removed get/set/free state functions

	* lib/poly_conn.[ch]:
	Use ObjectChange.
	Don't remove segments that are small.
	Removed get/set/free state functions

	* lib/text.[ch]:
	Use ObjectChange.
	Added functions to get/set all text attributes.

	* objects/standard/arc.c:
	* objects/standard/box.c:
	* objects/standard/ellipse.c:
	* objects/standard/image.c:
	* objects/standard/line.c:
	* objects/standard/polyline.c:
	* objects/standard/textobj.c:
	* objects/standard/zigzagline.c:
	Use ObjectChange.
	fixed bug in image_set_state.
	zigzagline.c not finished yet.

	* app/disp_callbacks.c:
	Use ObjectChange that are returned from menu callbacks and
	key_events for undo.

	* app/properties.c:
	Use ObjectChange that are returned from properties apply
	for undo.

	* app/undo.c:
	* app/undo.h:
	New undo type: ObjectChangeChange. This wraps a change to the
	internals of an object (and ObjectChange) in code that does
	app specific stuff (object_add_updates etc.)

1999-07-11  Alexander Larsson  <alla@lysator.liu.se>

	* lib/orth_conn.[ch]:
	Added code for add/delete segment.

	* objects/standard/zigzagline.c:
	Use the new orth_conn code.
	

1999-07-08  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* objects/FS/Makefile.am
	Removed fs.h from sources.

	* Makefile.am
	* dia.1
	Added man page.

1999-07-07  Alexander Larsson  <alla@lysator.liu.se>

	* app/disp_callbacks.c (ddisplay_canvas_events):
	Fix for bug. Every other arrow-key press got lost.
	patch from Mr. Data Esq. <data@r47h102.res.gatech.edu>

	* INSTALL:
	change automake.sh to autogen.sh
	
1999-06-24  Alexander Larsson  <alla@lysator.liu.se>

	* app/diagram.c:
	Don't remove 'empty' objects.
	This violent destruction of objects won't work
	with the new undo framework.

	* app/disp_callbacks.c:
	Save undo info for object menu calls and key_events.

	* app/properties.c:
	Save undo info on properties apply.

	* lib/dia_image.[ch]:
	Add refcounting for images.

	* app/render_eps.c:
	* app/render_gdk.c:
	* lib/render.h:
	DiaImage * -> DiaImage

	* app/undo.[ch]:
	Add undo functions for object state changes.

	* lib/focus.h:
	* lib/text.c:
	change of semntics for focus->key_event.
	Now returns TRUE if the object recieving the event
	was changed.

	* lib/object.h:
	Comment changes.

	* lib/orth_conn.[ch]:
	Don't automatically create and delete segments when
	handles are moved. This is incompatible with undo.
	Added state get, set and free functions.

	* lib/orth_conn.[ch]:
	Added state get, set and free functions.

	* objects/UML/object.c:
	* objects/UML/uml.c:
	Fixed typo "UML - Objet" -> "UML - Object".
	Saved old for backwards compatibility.

	* objects/standard/arc.c:
	* objects/standard/box.c:
	* objects/standard/ellipse.c:
	* objects/standard/image.c:
	* objects/standard/line.c:
	* objects/standard/polyline.c:
	* objects/standard/textobj.c:
	* objects/standard/zigzagline.c:
	Added get/set state functions.
	Textobj has a redo crash-bug.
	Zigzagline needs object menus to add segments.
	

1999-06-20  Alexander Larsson  <alla@lysator.liu.se>

	* app/render_eps.c (set_dashlength):
	Don't generate eps files with zero dash-length.

1999-06-16  Alexander Larsson  <alla@lysator.liu.se>

	* app/commands.c:
	* app/create_object.c:
	* app/undo.[ch]:
	Finished undo for create and paste.
	
	* lib/object.h:
	Started properties undo.

1999-06-14  Alexander Larsson  <alla@lysator.liu.se>

	* TODO:
	Added resizeable groups.

	* app/app_procs.c:
	Removed unused variable.

	* app/commands.c:
	* app/undo.[ch]:
	Undo/redo for cut/delete done.

	* app/create_object.c:
	* app/modify_tool.c:
	* lib/diagramdata.[ch]:
	* app/diagram.[ch]:
	renamed diagram_add_selected -> diagram_select
	renamed diagram_remove_selected -> diagram_unselect
	
	* app/properties.[ch]:
	Added properties_hide_if_shown() function.

1999-06-13  Alexander Larsson  <alla@lysator.liu.se>

	* app/undo.[ch]:
	* app/Makefile.am:
	Undo functions.
	
	* app/commands.[ch]
	* app/modify_tool.[ch]
	* app/object_ops.[ch]
	* app/connectionpoint_ops.c
	* app/menus.c
	Use undo functions.
	WARNING: Not finished. Will break.
	Finished: move object, move handle.

	* app/diagram.[ch]
	Added diagram_selected_break_external() function.
	It removes all connections between selected objects
	and non-selected.
	Add undo stack to Diagram.
	
	* lib/diagramdata.[ch]
	Added layer_remove_objects() function
	
1999-06-11  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* objects/FS/Makefile.am
	* objects/sybase/Makefile.am
	Now uses GNOME_CFLAGS.

	* app/app_procs.c
	Now compiles with GNOME even if popt.h isn't available.

1999-06-10  Alexander Larsson  <alla@lysator.liu.se>

	* configure.in
	* objects/Makefile.am
	* objects/sybase/*
	First version of sybase objects from
	Brian Bruns <camber@umcc.ais.org>

1999-06-10  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* configure.in
	Added fr to ALL_LINGUAS

1999-06-09  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* configure.in
	* app/app_procs.c
	Popt-code is activated if popt is available.

1999-06-08  Alexander Larsson  <alla@lysator.liu.se>

        This is a patch from David Thompson <dcthomp@mail.utexas.edu>
	
	* lib/orth_conn.[ch]:
	Added orthconn_get_middle_handle()

	* lib/text.[ch]:
	Added text_set_cursor_at_end()
	
	* objects/FS/*
	Added first version of functions structure diagrams.
	
1999-05-24  Alexander Larsson  <alla@lysator.liu.se>

	* app/modify_tool.c:
	Include math.h to remove warning.

	* app/commands.c (dialogs_properties_callback):
	Bring up correct properties dialog when selected
	from menu.
	From Dan Cohn <dan@internap.com>

1999-05-20  Alexander Larsson  <alla@lysator.liu.se>

	Patch from Lars R. Clausen 
	
	* app/modify_tool.c:
	Changed abs to fabs.

1999-05-19  Alexander Larsson  <alla@lysator.liu.se>

	* INSTALL: 
	* configure.in:
	Require Gtk+ 1.2.0

1999-05-18  Alexander Larsson  <alla@lysator.liu.se>

	Patches from Dan Cohn <dan@internap.com>
	
	* app/commands.[ch]: 
	* app/display.[ch]: 
	* app/menus.c:
	* app/preferences.[ch]:
	Implements ability to turn on/off connection points in
	current drawing and in global prefs.

1999-05-18  Alexander Larsson  <alla@lysator.liu.se>

	* lib/widgets.c (dia_line_style_selector_init): 
	Fixed warnings.
	
	* lib/diagramdata.c (layer_update_extents):
	Fixed uninitialized variable error.

1999-05-17  Alexander Larsson  <alla@lysator.liu.se>

	* lib/dia_image.c:
	Made some changes to the gdk_imlib visual+colormap setup.

1999-05-17  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>

	* objects/UML/usecase.c: 
       * objects/UML/lifeline.c
	Fine tunning.

	* objects/UML/object.c: 
	* objects/UML/message.c: 
 	Changed font from Courier to Helvetica.

	* lib/widgets.c: 
	* lib/widgets.h:
 	Added dash lenth to the LineStyle widget.
	
	* objects/standard/ellipse.c :
	* objects/standard/zigzagline.c: 
	* objects/standard/line.c: 
	Added dash lenght property.

1999-05-16  Alexander Larsson  <alla@lysator.liu.se>

	* app/render_eps.c:
	First shot at latin1 encoded eps files.
	Works, but the eps files get a bit large.
	
1999-05-16  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/class.[ch]: 
	* objects/UML/uml.[ch]:
	Reverted the line wrap changes.
	Some day this might return, but it has to be selectable and
	default to off for loaded objects, otherwise it breaks file
	format compatibility.
	There was also some complains about how it looked, so a making it
	selectable is good for this too.

1999-05-15  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/class.[ch]:
	Some indentation cleanup.
	Added wrap_lines variable to class.
	I'll fix the line break stuff tomorrow.

1999-05-13  Alexander Larsson  <alla@lysator.liu.se>

	* lib/dummy_dep.h:
	Added ref to poly_conn.o.

	* objects/standard/polyline.c (polyline_draw): 
	* objects/standard/zigzagline.c (zigzagline_draw): 
	* objects/standard/arc.c (arc_draw): 
	* objects/standard/line.c (line_draw):
	Draw lines before arrows. This makes hollow arrows not
	show the line.

1999-05-13  Alexander Larsson  <alla@lysator.liu.se>

	Changes from Kim Peasley <kpeasley@ior.com> 
		
	* objects/UML/class.c:
	Break lines with long operations so classes won't be
	so wide.

	* objects/UML/uml.[ch]:
	Helperfunctions for the above.
	
	* objects/UML/objects.c:
	Fix bug that duplicated the text in the attributes
	textwidget each time the object was selected.
	
1999-05-12  Alexander Larsson  <alla@lysator.liu.se>

	Changes from Lars R. Clausen <lrclause@cs.uiuc.edu>
	
	* app/modify_tool.c:
	* app/modify_tool.h:
	Control-drag is restricted to vertical/horizontal movement
	
	* lib/object.h:
	ModifierKeys argument added to object_move_handle

	* app/connectionpoint_ops.c:
	* app/create_object.c:
	* app/object_ops.c:
	* objects/ER/attribute.c:
	* objects/ER/entity.c:
	* objects/ER/participation.c:
	* objects/ER/relationship.c:
	* objects/UML/actor.c:
	* objects/UML/association.c:
	* objects/UML/class.c:
	* objects/UML/classicon.c:
	* objects/UML/component.c:
	* objects/UML/constraint.c:
	* objects/UML/dependency.c:
	* objects/UML/generalization.c:
	* objects/UML/implements.c:
	* objects/UML/large_package.c:
	* objects/UML/lifeline.c:
	* objects/UML/message.c:
	* objects/UML/note.c:
	* objects/UML/object.c:
	* objects/UML/realizes.c:
	* objects/UML/small_package.c:
	* objects/UML/state.c:
	* objects/UML/usecase.c:
	* objects/network/bus.c:
	* objects/standard/arc.c:
	* objects/standard/box.c:
	* objects/standard/ellipse.c:
	* objects/standard/image.c:
	* objects/standard/line.c:
	* objects/standard/polyline.c:
	* objects/standard/textobj.c:
	* objects/standard/zigzagline.c:
	Changed calls to move_handle to pass the new argument.
	
	* lib/widgets.c:
	* lib/widgets.h:
	Default line width, color etc #define'd
	
	* po/da.po:
	Updates of danish menus

1999-05-08  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* dia.xpm
	* dia_gnome_icon.png
	* dia_gnome_menu_icon.png
	* dia_logo.png
	Graphics by Toussaint FrÃ©dÃ©ric <ftoussin@club-internet.fr>.

	* app/commands.c
	About dialog shows dia_logo.png. Removed the GNOME about dialog.

	* Makefile.am
	Distribute the icons and install logo in pkgdatadir.
	
	* app/Makefile.am
	Added DATADIR-define.
	
1999-04-28  Alexander Larsson  <alla@lysator.liu.se>
	Patches from Enrico Scholz <enrico.scholz@wirtschaft.tu-chemnitz.de>

	* dia.spec:
	Updated version number, made setup quiet, can build from cvs,
	--enable-gnome, now using automake 1.4 DESTDIR feature, install-strip

	* lib/Makefile.am
	* objects/ER/Makefile.am
	* objects/UML/Makefile.am
	* objects/network/Makefile.am
	* objects/standard/Makefile.am
	now builds better with gnome

	* objects/UML/class_dialog.c
	Fixed typo -> po files must be updated too!!
	
1999-04-28  Alexander Larsson  <alla@lysator.liu.se>

	* lib/dummy_dep.h:
	Added reference so that widgets.o gets linked to the app.

1999-04-23  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>

	* objects/UML/classicon.c: 
	Added object mode.

	* objects/UML/actor.c: 
	Changed position of 'snap-to-grid' so connection points are
	in the grid.

1999-04-22  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/classicon.c:
	Changed position of 'snap-to-grid'.
	By Alejandro Aguilar Sierra <asierra@servidor.unam.mx>
	
1999-04-22  Alexander Larsson  <alla@lysator.liu.se>

	* objects/network/antenna.c
	* objects/network/flash.c
	* objects/network/hub.c
	* objects/network/modem.c
	* objects/network/modularswitch.c
	* objects/network/rj45plug.c
	* objects/network/scead-plug.c
	* objects/network/network.c
	* objects/network/Makefile.am
	* objects/network/pixmaps/antenna.xpm
	* objects/network/pixmaps/flash.xpm
	* objects/network/pixmaps/hub.xpm
	* objects/network/pixmaps/modem.xpm
	* objects/network/pixmaps/modularswitch.xpm
	* objects/network/pixmaps/rj45plug.xpm
	* objects/network/pixmaps/sceadplug.xpm
	* objects/network/pixmaps/Makefile.am
	Lots of new network objects from
	Roland Steinbach <roland@support-system.com>.

1999-04-15  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>
 
        * objects/UML/classicon.c: 
        Fixed connection positions, saved type as int (it has 3 states),
        and other small fixes.
	
1999-04-14  Alexander Larsson  <alla@lysator.liu.se>

	* app/preferences.c:
	* app/load_save.c:
	Added preference compress_save. It lets dia save uncompressed
	xml files.

	* objects/UML/class.c:
	Fixed bug with size calculation on methods that had class scope.
	
1999-04-13  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>

	* objects/UML/usecase.c: 
	Added collaboration mode
	Fixed connection points with text > ellipse bug and other 
	small things

	* objects/UML/state.c:
 	Fixed bug of bad position of text after being either end
	or begin, moved and returned to text

1999-04-12  Andreas Jaeger  <aj@arthur.rhein-neckar.de>

        * app/preferences.c: Add prototype declaration for prefs_apply.

1999-04-11  Alexander Larsson  <alla@lysator.liu.se>

	* app/preferences.c:
	Added 'ok' button.
	Apply don't hide window.

	* app/properties.c:
	Add 'ok' button.

	* objects/UML/object.c:
	* objdcts/UML/state.c:
	Some data was not copied on copy.

	This patch is from
	Ben Hochstedler <benh@eeyore.moneng.mei.com>

1999-04-09  Alexander Larsson  <alla@lysator.liu.se>

	* app/Makefile.am:
	Changed link order between X and libxml.
	Some people had problems with an old libz in their
	x11 directory.	

1999-04-09  Kjartan Maraas  <kmaraas@online.no>

	* po/no.po: updated translation.
	
1999-04-08  Lars R. Clausen <lrclause@cs.uiuc.edu>

	* lib/message.c (message_error):
	Fixed small error.

	* app/commands.[ch]:
	* app/diagram.[ch]:
	Added begining of xfig importing

1999-04-08  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>
 
	* objects/UML/pixmaps/state.xpm: 
 	* objects/UML/state.c: 
 	New UML object state machine.

	* objects/UML/uml.c:
	* objects/UML/Makefile.am:
	* objects/UML/pixmaps/Makefile.am:
	Added the state object.
	
1999-04-08  Alejandro Aguilar Sierra  <ale@bucefalo>
 
	* objects/UML/usecase.c: 
	Added dialog to allow move text outside the ellipse.
 
1999-04-08  Alexander Larsson  <alla@lysator.liu.se>

	* Released Dia 0.41
	Tag called DIA_0_41

	* NEWS:
	Updates for 0.41.
	
1999-04-08  Alexander Larsson  <alla@lysator.liu.se>

	* configure.in:
	Updated version number to 0.41

	* po/*.po:
	Update po-files

1999-04-04  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* app/app_procs.c
	Changed errormessage for --export-to-ps. Removed call to 
	g_log_set_always_fatal().

	* app/diagram.c
	* app/disp_callbacks.c
	* app/load_save.c
	(i18n) Removed gettext from some debugmessages.

	* app/menus.c
	Small fix in GNOME-menus. Added warning that will help track
	problems with translations.

	* po/sv.po
	(i18n) Updated swedish translation.

1999-04-02  Alexander Larsson  <alla@lysator.liu.se>

	* po/da.po:
	New updates

1999-04-01  Alexander Larsson  <alla@lysator.liu.se>

	* po/da.po:
	* po/no.po:
	Some fixes.
	
1999-04-01  Alexander Larsson  <alla@lysator.liu.se>

	* po/da.po:
	(i18n) Updated the danish translation.
	From Lars R. Clausen.

1999-04-01  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* app/menus.c
	(i18n) The popup menu is translated now.

	* po/sv.po
	(i18n) Updated swedish translation.

1999-03-29  Alexander Larsson  <alla@lysator.liu.se>

	* Released Dia 0.40
	Tag called DIA_0_40

	* NEWS:
	Updated for new release
	
1999-03-29  Alexander Larsson  <alla@lysator.liu.se>

	* objects/network/bus.c:
	Added initialization of properties dialog to NULL.

	* app/commands.c (edit_cut_callback):
	Update menu sensitivity when cut object.

	* app/modify_tool.c (click_select_object):
	* app/modify_tool.c (modify_button_release): 
	Call diagram_update_menu_sensitivity() when
	selecting objects to update stuff that depends
	on selected/not selected.

1999-03-29  Alexander Larsson  <alla@lysator.liu.se>

	* Makefile.am:
	Change order of subdir so that libintl.a builds.
	Now passed make distcheck.

1999-03-28  Alexander Larsson  <alla@lysator.liu.se>

	* lib/font.c (init_x11_font):
	Stupid bug fixed.

1999-03-28  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>

	* objects/UML/pixmaps/classicon.xpm: 
	* objects/UML/classicon.c:
	* objects/UML/uml.c:
	Added the class stereotype icon objects.

	* app/commands.c:
	Changed default ps extension from .ps to .eps.
	
1999-03-28  Alexander Larsson  <alla@lysator.liu.se>

	* lib/Makefile.am:
	Added diamenu.h and intl.h

	* lib/font.c:
	Stupid typo fix.
	
	* objects/UML/pixmaps/Makefile.am:
	Added message.xpm

	* objects/standard/pixmaps/Makefile.am:
	Added image.xpm

1999-03-28  Alexander Larsson  <alla@lysator.liu.se>

	* lib/font.c:
	Use a scalable font before fixed when real font not found.

	* app/commands.c:
	Removed warning.

	* objects/standard/image.c:
	Better handling of loading/saving of images.

	* INSTALL:
	Added some text about cvs, fonts and rewrote some parts.

	* TODO:
	Updated with new stuff.
	
	* configure.in:
	Bump up version number to 0.40.
	
1999-03-28  Alexander Larsson  <alla@lysator.liu.se>

	* app/display.c:
	Moved diagram_add_ddisplay() call into new_display().
	Fixed new_display to not use uninitialized variables
	causing loaded files to show up as black (or garbage).
	
	* app/commands.c:
	* app/app_procs.c:
	Removed unneeded calls to diagram_add_ddisplay().
	
1999-03-28  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/lifeline.c:
	Fixed bug in copy.
	Patch from Andreas Jaeger <aj@arthur.rhein-neckar.de>.

	* objects/UML/message.c:
	Fixed bug loading messages with null-text.
	Patch from Andreas Jaeger <aj@arthur.rhein-neckar.de>.

1999-03-27  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* po/sv.po
	Updated swedish translation.

	* app/menus.c
	(GNOME) Removed help-browser from help menu. Fixed typo.

	* app/interface.c
	(GNOME) Accelerators in diagrams should work now. 

1999-03-25  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* app/app_procs.c
	* app/commands.c
	* app/defaults.c
	* app/disp_callbacks.c
	* app/display.c
	* app/interface.c
	* app/menus.c
	* app/preferences.c
	* app/render_eps.c
	* lib/diagramdata.c
	* lib/font.c
	* lib/message.c
	* lib/widgets.c
	* objects/ER/*.c
	* objects/UML/*.c
	* objects/network/*.c
	* objects/standard/*.c
	* po/update_pofiles_in.sh
	* po/POFILES.in
	More i18n. All strings (expect rare debug messages) can be
	translated now. Moved intl.h from app to lib. Updated
	update_pofiles_in.sh to check all .c-files.

1999-03-23  Alexander Larsson  <alla@lysator.liu.se>

	* app/disp_callbacks.c (ddisplay_canvas_events):
	Don't drop keys while num-lock, scroll-lock etc is on.

1999-03-22  Alexander Larsson  <alla@lysator.liu.se>

	* app/render_eps.c (draw_image):
	Fixed exporting of images.
	Still not perfect, but not outright buggy.
	
1999-03-22  Alexander Larsson  <alla@lysator.liu.se>

	* configure.in:
	* po/hu.po:
	Added hungarian translation. By Shooby Ban <bansz@szif.hu>.

	* app/Makefile.am:
	Added $* to the dia call in run_dia.sh

1999-03-22  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>
	
	* lib/color.[ch]:
	Added color_equals() call.

	* objects/standard/arc.c:
	* objects/standard/line.c:
	Don't save unneccesary data.
	
	* objects/standard/box.c:
	* objects/standard/ellipse.c:
	* objects/standard/image.c:
	* objects/standard/polyline.c:
	* objects/standard/zigzagline.c:
	Share properties dialog.
	Don't save unneccesary data.
	
1999-03-22  Seth Alves  <alves@hungry.com>

	* app/menus.c:
	* app/diagram.c:
	* app/display.c:
	small changes so that gnome menus aren't broken
	
1999-03-22  Alexander Larsson  <alla@lysator.liu.se>

	* po/da.po:
	Added danish translation from lrclause@cs.uiuc.edu.

	* po/POFILES.in:
	Updated file.

	* po/update_pofiles_in.sh:
	Added script that updates POFILES.in.
	This should probably be run automatically from somewhere.

1999-03-19  Alexander Larsson  <alla@lysator.liu.se>

	* app/diagram.[ch]:
	Added function diagram_update_menu_sensitivity() which
	sets the sensitivity of some menu items. This function
	is called at each diagram state change (from diagram_modified()).
	This is needed 	because otherwise the keyboard accelerators
	don't work correctly.

	* app/display.[ch]:
	Changed display_set_menu_sensitivity() to display_update_menu_state().
	Moved lots of code to diagram_update_menu_sensitivity() in
	diagram.c. Optimized to only look up menu-items from path:s once.
	
	* app/disp_callbacks.c:
	* app/interface.c:
	When we get a GDK_FOCUS_CHANGE, update menu sensitivity.
	Need to set GDK_FOCUS_CHANGE_MASK.
	
	* app/create_object.c:
	Call diagram_modified when an object has been created and
	selected so that the menu sensitivity is updated. 

	* app/menus.[ch]:
	removed menus_set_sensitive() and menus_set_state(). Exported
	renamed function menus_get_item_from_path().

1999-03-15  Alexander Larsson  <alla@lysator.liu.se>

	* app/disp_callbacks.c:
	Show (empty) object menus on object that has none.
	Show title on object menus.

	* app/display.c:
	Set zoom factor correctly when opening new displays.
	Better setting of scrollbars.

	* app/grid.c:
	* app/menus.h:
	Some reformating cleanup.

	* lib/diamenu.h:
	Added title to object menus.

	* objects/*/*.c:
	Added object menu method (NULL-valued) to all objects.

	* objects/standard/polyline.c:
	Added title to object menu.

1999-03-14  Alexander Larsson  <alla@lysator.liu.se>

	* app/preferences.[ch]:
	New files. Implements the preferences dialog and
	loading/saving of ~/.diarc.

	* app/Makefile.am:
	Added preferences.[ch].

	* app/app_procs.c:
	Load preferences on startup.

	* app/commands.[ch]:
	Added file_preferences_callback to show the preferences dialog.

	* app/create_object.c:
	Update extents when creating object.
	Use the reset_tools_after_create preferences setting.

	* app/display.c:
	Use preferences when creating new display.

	* app/menus.c:
	Add preferences to menu.

	* app/defaults.c:
	* app/layer_dialog.c:
	* app/properties.c:
	Don't allow shrinking of dialog.
	Add i18n of some strings.

1999-03-11  Kjartan Maraas  <kmaraas@fib.hl.no>
        * po/no.po:
	Norwegian translation added.
	
1999-03-11  Alexander Larsson  <alla@lysator.liu.se>

	* objects/standard/line.c: 
	* objects/standard/arc.c: 
	* objects/standard/polyline.c: 
	* objects/standard/zigzagline.c:
	Loading of arrow data fixed.

1999-03-09  Alexander Larsson  <alla@lysator.liu.se>

	* app/commands.c:
	Update extents when saving and exporting to postscript.
	Fixes a bug with postscript bounding-box being wrong.

	* app/defaults.c:
	Changed border width from 5 to 2.

	* app/group.c:
	Move grouped objects by the move-point of the first object.
	Fixes bug that made all objects in the group be off-grid
	when moving the group, even though all objects was on-grid.

	* app/layer_dialog.c:
	Update extents when changing layer.

1999-03-08  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>
 
       * objects/UML/uml.c: 
       * objects/UML/component.c: 
       * objects/UML/pixmaps/component.xpm: 
       Added the UML component object
	
1999-03-04  Seth Alves  <alves@hungry.com>

	* objects/UML/generalization.c (generalization_create): avoid
	math on uninitialized genlz->text_width (NaN causes sigfpe)
	
	* objects/UML/realizes.c (realizes_create): same

	* objects/UML/dependency.c (dependency_create): same

1999-03-01  Seth Alves  <alves@hungry.com>

	* app/display.c (ddisplay_active): don't fly a warning panel
	if ddisplay_active is called when no views are open.

	* app/commands.c (set_default_file_selection_directory): set
	file selector's default directory if there is already
	a document open.

1999-02-28  Alexander Larsson  <alla@lysator.liu.se>

	* INSTALL:
	New info about imlib requirements.

	* Configure.in:
	Added lib/pixmaps/Makefile to created makefiles.

	* app/app_procs.c:
	* app/commands.c:
	Change from obsoleted to newer gtk calls.
	
	* load_save.c:
	Pass filename of the diagram when loading and saving.
	This creates better oportunities to handle filename saving.

	* lib/object.h:
	Pass filenames to load and save methods.
	
	* lib/dia_image.[ch]:
	Added dia_image_get_broken() call that returns a image which
	is used for 'broken' images.
	
	* lib/pixmaps/.cvsignore:
	* lib/pixmaps/Makefile.am:
	* lib/pixmaps/broken.xpm:
	New files for the broken image bitmap.

	* lib/widgets.c:
	Fixed bug with double destroyed filedialog.

	* objects/*/*.c:
	Updated load and save prototypes to use the new filename argument.

	* objects/image.c:
	Render broken image instead of line when got no image.
	Use the new filename in load and save to save (if possible)
	relative pathnames and to better try to find loaded images.

1999-02-28  Alexander Larsson  <alla@lysator.liu.se>

	* TODO:
	Some updates to the todo file.
	
	* app/menus.c:
	* app/display.c:
	Place over/place over => sent to back/bring to front.
	Added some keyboard shortcuts to menus.
	
1999-02-28  Alexander Larsson  <alla@lysator.liu.se>

	* lib/dia_xml.c:
	Changed string saving/loading to a new method. This should
	be much better att handling &,<,> and whitespaces.
	Loading strings of the old kind is still supported for backwards
	compatibility.

	* samples/ER-demo.dia:
	* samples/UML-demo.dia:
	Updated to use the new strings.
	
	* app/load_save.c:
	statusbar modified update fix.

1999-02-27  Seth Alves  <alves@hungry.com>

	* app/app_procs.c (app_init): added a --export-to-ps option
	which will cause dia to load a dia file and save it as ps
	and then exit.  this is a little bogus, because it still
	pops up a window.  this option only shows up if --enable-gnome
	is used

	* app/display.c (display_set_menu_sensitivity): no Edit/Delete
	menu when built with --enable-gnome

	* app/interface.c (create_display_shell): build status bar
	even if --enable-gnome is used

	* app/menus.c: menu fixes for --enable-gnome

	* app/commands.c (file_open_dialog_ok_callback): fixed up
	menus when --enable-gnome is used
	(file_export_to_eps_callback): set a default file name
	when dialog is created

1999-02-27  Alexander Larsson  <alex@c125.ryd.student.liu.se>

	* objects/UML/association.c (association_create):
	Fixed usage of not initialized variable.
	Pointed out by Seth Alves <alves@hungry.com>.

1999-02-24  Alexander Larsson  <alex@c125.ryd.student.liu.se>

	* configure.in:
	Fixed detection of gnome-xml.
	From Valtteri Vuorikoski <vuori@k.notcom.org>.
	
	* app/app_procs.c:
	Fixed error detection on dlsym calls. 
	From Valtteri Vuorikoski <vuori@k.notcom.org>.

1999-02-23  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/message.c (fill_in_dialog):
	Fixed warnings.

1999-02-22  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* objects/standard/zigzagline.c:
	* objects/standard/polyline.c:
	* objects/standard/line.c:
	* objects/standard/arc.c:
	* lib/widgets.h:
	* lib/arrows.h:
	* lib/widgets.c:
	Support for sizeable arrows. 

	* objects/standard/box.c:
	* objects/standard/ellipse.c:
	* objects/standard/image.c:
	Changed creation handle to lower-right.
	Transparent box/ellipse.
	
	* objects/standard/image.c:
	Better layout of properties boxes.

1999-02-20  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>

	* objects/UML/message.c (fill_in_dialog): 
	Fixed dialog fill in. Common dialog for all messages.

	* objects/UML/object.c: 
	Added multiple instance. Dialog related bugs fixed.
	Common dialog for all instances. Completed copy and destroy.

	* objects/UML/lifeline.c (lifeline_load): 
	Conn initialization bug fixed and few bad loading prevention flags.
	Common dialog for all lifeline objects.
	
1999-02-15  Alexander Larsson  <alla@lysator.liu.se>

	* lib/dia_image.[ch]:
	More work on the DiaImage abstraction.
	
	* app/app_procs.c:
	* app/render_eps.c:
	* app/render_gdk.c:
	* objects/standard/image.c:
	Use the new DiaImage calls.

1999-02-15  Alexander Larsson  <alla@lysator.liu.se>

	* app/menus.c:
	* app/display.c:
	Reversed the meaning of align horizontal/vertical.

1999-02-15  Alexander Larsson  <alla@lysator.liu.se>

	* app/load_save.c (diagram_load):
	Statusbar update fix.

1999-02-15  Alexander Larsson  <alla@lysator.liu.se>

	* app/interface.c (create_display_shell):
	Fixed status bar size.
	
1999-02-15  Alexander Larsson  <alla@lysator.liu.se>

	* lib/dia_image.[ch]:
	Added extern declaration for dia_image_release.
	Removed dia_image_draw, as it's not neseccary.

1999-02-14  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>
	
	* app/object_ops.c: 
	* app/menus.c: 
	Added equal distance alignment both vertical and horizontal.
	
	* objects/UML/object.c: 
	Added a couple of attributes to load/read that were missing.

	* objects/UML/lifeline.c: 
	Better handling of handles. Fixed another bug I forgot to add
	to my last patch.
	
1999-02-13  Alexander Larsson  <alla@lysator.liu.se>

	Patch from Lars Clausen <lrclause@shasta.cs.uiuc.edu>
	
	* lib/dia_image.[ch]:
	* lib/Makefile.am:
	New files. DiaImage wraps the GdkImlibImage.

	* lib/render.h:
	* app/render_eps.c:
	* app/render_gdk.c:
	* lib/render_store.[ch]:
	* objects/standard/image.c:
	Use the new DiaImagetype.

	* lib/widgets.c:
	Removed unused variable to eliminate  warning.

1999-02-11  Alexander Larsson  <alla@lysator.liu.se>

	* objects/standard/box.c:
	Added rounded corners on the box object.

	* lib/widgets.[ch]:
	Updated the DiaFileSelector widget.
	
1999-02-09  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>

	* objects/UML/object.c (objet_draw): 
	Completed underlining of all object name lines. 

	* objects/UML/message.c (fill_in_dialog): 
	Fixed a bug that filled incorrectly the message's dialog.

	* objects/UML/lifeline.c (lifeline_load): 
	Some cleanning and fixed a couple of bugs that caused
	crashes after reading diagrams with lifelines.

	* lib/text.c: 
	Added flags to prevent crash with void strings

1999-02-07  Matthias KÃ¶ster <Matthias.Koester@Informatik.Uni-Oldenburg.DE>
	* app/display.[ch]:
	Added statusbar to the display widget. Currently shows the zoom
	factor and modified flag of the viewed diagram. The statusbar is
	updated upon calls to ddisplay_zoom and ddisplay_update_statusbar.
	This caused the following additions:
	
	* app/diagram.[ch]:
	Added function diagram_set_modified. Calls
	ddisplay_update_statusbar for all displays showing the modified diagram.
	Changed diagram_modified to call diagram_set_modified.
	
	* app/interface.c:
	Added the creation of the statusbar.
	
	* app/load_save.c:
	diagram_save now calls diagram_set_modified instead of setting
	dia->modified. Needed to force call to display_update_statusbar
	
	* app/commands.c:
	Changed the way view_show_all works. Now calls ddisplay_zoom
	instead of directly setting the zoom_factor, so the zoom factor is
	correctly shown in the statusbar.

	* app/magnify.c:
	Fixed rubberband zoom to use ddisplay_zoom().
	
1999-02-07  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* app/app_procs.c
	Rudimentary GNOME session management.
	
	* app/disp_callbacks.c
	* app/interface.c
	* app/menus.c
	* app/menus.h
	GNOME menus. Problems: 
	Callbacks doesn't get user_data.
	Weird warnings when creating popup menus.
	menus_set_sensitive(), menus_set_state() doesn't work.

1999-02-05  Lars Clausen  <lrclause@shasta.cs.uiuc.edu>

	* configure.in:
	Add AM_PATH_GDK_IMLIB() call.

	* app/Makefile.am:
	Add gdk_imlib to linking flags.

	* app/app_procs.c:
	Init gdk_imlib.
	Print library-loading error messages on stdout too.

	* app/interface.c:
	Add standard image to toolbox.
	
	* app/render_eps.c: 
	Set a more reasonable dot length.  Fixed
	missing initialization of dot length.
	Added draw_image methods.

	* app/render_gdk.c (new_gdk_renderer): 
	Dot a bit wider.  Looks good in normal mode now.

	* objects/standard/image.c:
	* objects/standard/pixmaps/image.xpm:
	New files. Standard object for images.
	
	* app/render_eps.c (set_linestyle):
	* app/render_gdk.c (set_linestyle):
	* lib/widgets.c (dia_line_style_selector_init): 
	* lib/render.h: 
	New line style DOTTED.

	* lib/render.h:
	* lib/render_store.c:
	Change DrawImage call to use gdk_imlib.

	* lib/widgets.[ch]:
	Added widgets for selecting files.
	Added dotted to the linestyle selector.

1999-02-06  Alexander Larsson  <alla@lysator.liu.se>

	* objects/network/printer.c:
	* objects/network/network.c:
	* objects/network/pixmaps/printer.xpm:
	* objects/network/.cvsignore:
	* objects/network/Makefile.am:
	* objects/network/pixmaps/Makefile.am:
	New printer object in network.
	From Martin Hawlisch <hawlisch@roxi.rz.fh-mannheim.de>

	* TODO:
	Added known XML bug.
	
1999-02-06  Alexander Larsson  <alla@lysator.liu.se>

	* app/load_save.c:
	* lib/dia_xml.c:
	Reverted back from #include <gnome-xml/tree.h> to
	#include <tree.h> as this is fixed by the xml-config program.
	The former way broke for some people.
	Reported by blizzard@redhat.com.

	* objects/UML/lifeline.c:
	* objects/UML/message.c:
	* objects/UML/object.c:
	Removed some warnings.
	
1999-02-04  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>

	* objects/UML/lifeline.c: 
	Fixed connection points over the life line when the focus of
	control is not drawn.

	* objects/UML/message.c: 
	Now a recursive message can be freely resized using the handles.

1999-02-02  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>

	* objects/UML/lifeline.c:
 	Added connection points.
	Added properties dialog with the option to draw/hide focus of control
	box and destruction mark.

	* objects/UML/object.c: 
	Added properties dialog and stereotype, explicit state and attributes. 
	It's also possible to mark the object as active.

	* objects/UML/pixmaps/object.xpm: 
	Cosmetic change.

	* objects/UML/message.c:
	Added "recursive" message type (was not necessary to use OrthConn).

1999-02-02  Alexander Larsson  <alla@lysator.liu.se>

	* objects/standard/arc.c:
	Removed old debug code. Fixes a visual bug. From lrclause@cs.uiuc.edu.

1999-02-01  Alexander Larsson  <alla@lysator.liu.se>

	Patch from Lars R. Clausen <lrclause@cs.uiuc.edu>
	
	* app/load_save.c:
	* lib/dia_xml.c:
	Update xml includes to gnome-xml/*.h.

	* objects/standard/arc.c:
	Only one property dialog per type.
	Fix arrows directions.

	* objects/standard/box.c:
	* objects/standard/ellipse.c:
	* objects/standard/textobj.c
	Added default properties dialog.
	

1999-01-31  Alejandro Aguilar Sierra  <asierra@servidor.unam.mx>

	* objects/UML/Makefile.am: 
	* objects/UML/uml.c:
	* objects/UML/lifeline.c: 
	* objects/UML/object.c: 
	* objects/UML/message.c:
	* objects/UML/pixmaps/lifeline.xpm: 
	* objects/UML/pixmaps/object.xpm: 
	* objects/UML/pixmaps/message.xpm:
	Added 3 new UML objects for dynamic modeling. To avoid internal 
	conflicts, the name "objet" is used for object "object".	

	* lib/arrows.[ch]: 
	Added ARROW_HALF_HEAD arrow type to allow drawing asynchronous
	UML messages.
	
1999-01-30  Alexander Larsson  <alla@lysator.liu.se>

	* app/display.[ch]:
	* app/modify_tool.c:
	Added autoscrolling while doing rubber-band select.
	This patch from Matthias KÃ¶ster
	(Matthias.Koester@Informatik.Uni-Oldenburg.DE)
	

1999-01-28  Alexander Larsson  <alla@lysator.liu.se>

	* app/defaults.[ch]:
	New files, deals with default properties dialog.

	* lib/diamenu.h:
	New file. Contains definitions for the new object menu.

	* lib/poly_conn.[ch]:
	New file. Base class for poly-line like objects.

	* objects/standard/polyline.c:
	* objects/standard/pixmaps/polyline.xpm:
	New files. Polyline object.

	* app/app_procs.c:
	Fixed bug with infinite loop when registering sheets.
	
	* app/commands.c:
	Removed unneccesary stuff.

	* app/disp_callbacks.c:
	Support for object menus.

	* app/interface.c:
	Added polyline to toolbox.
	Added call to tool_options_dialog_show() when double clicking on
	tool.

	* app/tool.[ch]:
	New function tool_options_dialog_show() for tool properties.

	* lib/arrows.[ch]:
	Added ARROW_NONE.

	* lib/object.h:
	Added ObjectType methods for handling object default dialogs.
	Added Object method for handling object_menu.
	Added unused methods to ObjectTypeOps for future binary
	compatibility.

	* lib/widgets.[ch]:
	Added DiaArrowTypeSelector widget.

	* objects/standard/arc.c:
	* objects/standard/zigzagline.c:
	Added support for default properties.

	* objects/standard/line.c:
	Added support for default properties.
	Just use one properties dialog for all line objects. NOTE: This
	seems to have a bug. We're working on it.

	* standard/standard.c:
	Add the polyline object.

1999-01-27  Alexander Larsson  <alla@lysator.liu.se>

	* app/modify_tool.c:
	Commented out buggy transitive select function. It wasn't really
	meant to go into cvs.
	

1999-01-25  Fredrik Hallenberg  <hallon@lysator.liu.se>

	* autogen.sh:
	* acconfig.h:
	* configure.in:
	* Makefile.am:
	* app/Makefile.am:
	* po/POTFILES.in:
	* app/intl.h
	i18n-support.

	* po/sv.po:
	Swedish translation. Not completed.
	
	* configure.in:
	* acconfig.h:
	Added possibility to enable GNOME specific code with configure.

	* configure.in:
	Added possibility to set debug level with configure.

	* commands.[hc]:
	Added about dialog.

	* app_procs.c
	* commands.c
	* interface.c
	* menus.c
	Added some GNOME specific code. Not ready for use.

1999-01-24  Alexander Larsson  <alla@lysator.liu.se>

	* INSTALL:
	Added text about needing gtk 1.1.13 and gnome-xml.
	
	* NEWS:
	Described changes since last version (0.20).

	Released version 0.30, tagged DIA_0_30.

1999-01-22  Alexander Larsson  <alla@lysator.liu.se>

	* app/magnify.c (magnify_button_release):
	Fixed a problem when zooming in on a very small box would
	not release the grabbed pointer-focus.

1999-01-21  Alexander Larsson  <alla@lysator.liu.se>

	* app/load_save.c (diagram_load):
	Be somewhat more robust when loading files that
	are not diagrams.
	
1999-01-21  Alexander Larsson  <alla@lysator.liu.se>

	* app/app_procs.c:
	* objects/ER/er.c:
	* objects/UML/uml.c:
	* objects/network/network.c:
	* objects/standard/standard.c:
	Added versioning of object libraries.

	* app/create_object.c:
	Don't change tool when an object is created.
	
	* objects/network/network.c:

	* TODO:
	Update

1999-01-19  Alexander Larsson  <alla@lysator.liu.se>

	* configure.in:
	Updated gtk requirement to Gtk+ 1.1.13.

	* app/display.c:
	Always add one screenful of scrolling space on
	each side of a diagram window.

1999-01-19  Jeff Garzik  <jgarzik@pobox.com>

	* autogen.sh:
	Tell automake to auto-install missing files.

	* app/menus.c:
	Renamed deprecated Gtk+ function.

1999-01-16  Alexander Larsson  <alla@lysator.liu.se>

	* Makefile.am:
	* configure.in:
	* samples/Makefile.am:
	* samples/ER-demo.dia:
	* samples/UML-demo.dia:
	Added samples directory.
	Added samples for ER and UML.
	
	* app/commands.c:
	* app/disp_callbacks.c:
	* app/menus.c:
	Zoom is done by sqrt(2) instead of 2.
	Lots of more zoom options in the menu.

	* objects/ER/relationship.c:
	Relationships have 8 connectionpoints instead of 4.

	* objects/UML/class.c:
	UML class name font a bit smaller.
	Fixed stupid bug in the copy operation.
	
	* app/display.c:
	Displays are opened at 500x400 instead of 256x256.

	* app/load_save.c:
	Fixup of internal error message.

	* app/color_area.c:
	* app/diagram.c:
	* app/modify_tool.c:
	* lib/object.c:
	Removed debug printf's.
	
	* TODO (BUGS):
	Added new known bug.

1999-01-16  Alexander Larsson  <alla@lysator.liu.se>

	* app/interface.c:
	* app/menus.c:
	Fixed so accelerator groups work in all windows.
	Updated to new gtk function names.

	* TODO (BUGS):
	Removed fixed bug.

	* app/display.c:
	Updated to new gtk function names.
	Set sensitivity of the align menu items.	

	* objects/ER/pixmaps/Makefile.am:
	* objects/UML/pixmaps/Makefile.am:
	* objects/network/pixmaps/Makefile.am:
	Fix so that make dist works.

	* app/app_procs.c:
	* app/color_area.c:
	* app/commands.c:
	* app/diagram.c:
	* app/grid.c:
	* app/layer_dialog.c:
	* app/load_save.c:
	* app/object_ops.c:
	* app/properties.c:
	* lib/diagramdata.[ch]:	
	* lib/message.c:
	* lib/objects/ER/attribute.c:
	* lib/objects/ER/entity.c:
	* lib/objects/ER/participation.c:
	* lib/objects/ER/relationship.c:
	* lib/objects/ER/.c:
	* objects/UML/actor.c:
	* objects/UML/association.c:
	* objects/UML/class_dialog.c:
	* objects/UML/dependency.c:
	* objects/UML/generalization.c:
	* objects/UML/large_package.c:
	* objects/UML/realizes.c:
	* objects/UML/.c:
	* objects/UML/.c:
	Updated to new gtk function names.
	Removed warnings.

1999-01-15  Alexander Larsson  <alla@lysator.liu.se>

	* TODO:
	Update TODO.

	* app/app_procs.c:
	Fixed loading of diagrams specified as arguments.

	* objects/ER/attribute.c:
	* objects/ER/entity.c:
	* objects/ER/er.c:
	* objects/ER/participation.c:
	* objects/ER/relationship.c:
	Updated the ER objects.
	

1999-01-14  Alexander Larsson  <alla@lysator.liu.se>

	* configure.in:
	* app/Makefile.am:
	* objects/Makefile.am:
	* objects/ER/attribute.c:
	* objects/ER/entity.c:
	* objects/ER/er.c:
	* objects/ER/participation.c:
	* objects/ER/relationship.c:
	* objects/ER/pixmaps/Makefile.am:
	* objects/ER/pixmaps/attribute.xpm:
	* objects/ER/pixmaps/entity.xpm:
	* objects/ER/pixmaps/participation.xpm:
	* objects/ER/pixmaps/relationship.xpm:
	* objects/ER/pixmaps/weakentity.xpm:
	First commit of entity relationship objects.
	These were done by hallon@lysator.liu.se.
	There are still stuff to do on these.
	
1999-01-14  Alexander Larsson  <alla@lysator.liu.se>

	* TODO:
	Updates.

	* app/diagram.[ch]:
	Change diagram_remove_all_selected to take new argument
	delete_empty. Empty objects are deleted only if it is TRUE.
	Removed call to close_eps_renderer. This is now done in end_render
	in the eps renderer.

	* app/create_object.c:
	* app/layer_dialog.c:
	Update calls to diagram_remove_all_selected.

	* app/commands.c:
	Update calls to diagram_remove_all_selected.
	Some code reformating.
	Changed order of adding updates i align_h and align_v.

	* app/modify_tool.c:
	Update calls to diagram_remove_all_selected.
	Added pointer grab when doing rubber-band selection, this fixes
	the bug when draging the box over to another window.

	* app/connectionpoint_ops.[ch]:
	diagram_update_connections_object changed to take an argument
	update_nonmoved. This lets connections that has not moved, but
	the stuff they're connected to has been moved work.
	Update calls to the new diagram_update_connections_object.

	* app/properties.c:
	Update calls to the new diagram_update_connections_object.
	Update extents when properties are applied.
	
	* app/disp_callbacks.c:
	Added support for zooming with the '+' and '-' keys.

	* app/menus.c:
	Removed old keyboard shortcuts for zoom.

	* lib/render.h:
	Added calls begin_render and end_render to renderer.
	These can be used for setup and cleanup.

	* lib/diagramdata.c:
	Added calls to begin_render and end_render in data_render.

	* app/render_gdk.c:
	Added begin_render and end_render.

	* app/render_eps.[ch]:
	Added begin_render and end_render.
	Moved close_eps_renderer code to end_render.
	Various fixes to the generated eps code. This fixes importing
	generated eps into LYX.
	
1999-01-12  Alexander Larsson  <alla@lysator.liu.se>

	* TODO:
	Update of todo.
	
	* app/menus.c:
	Menus for alignment updated.

	* app/object_ops.[ch]:
	Functions for object alignment updated.

	* app/commands.[ch]:
	Object alignment callbacks updated.
	New diagrams are called Untitled-<nr>.

	* app/layer_dialog.c:
	Active layer selected when showing layers from new
	diagram.

	* app/load_save.c:
	Compress xml files when saving.
	Use xml namespace 'dia'.

	* lib/object.h:
	Minor comment update.

	* objects/UML/class_dialog.c:
	Cleanup of the gkt_list_item moving code.
	Fixed bug with update of operation when moving parameters.

1999-01-10  Alexander Larsson  <alla@lysator.liu.se>

	* app/layer_dialog.[ch]:
	Fixed the rest of the layers dialog.

	* app/dialog.c:
	Added call to redo layer dialogs diagram list when changing
	diagram name.

	* lib/diagramdata.[ch]:
	Added data_raise_layer and data_lower_layer functions for
	raising/lowering layers. Added data_add_layer_at for adding a
	layer at a specified index.

1999-01-05  Alexander Larsson  <alla@lysator.liu.se>

	This is the asierra-990105 patch done by asierra@servidor.unam.mx.
		
	* app/app_procs.c:
	Added support for reading diagrams from the command line.

1998-12-21  Alexander Larsson  <alla@lysator.liu.se>

	This is the asierra-981220 patch done by asierra@servidor.unam.mx.
		
	* app/commands.[ch]:
	Added objects_align_callback().

	* app/menus.c:
	Added align objects to menu.

	* app/object_ops.[ch]:
	Add object_list_align().
	
1998-12-17  Alexander Larsson  <alla@lysator.liu.se>
	* app/layer_dialog.[ch]:
	New files. Handles the layers dialog. Needs a bugfix for glib to
	work. Sent patch to gtk-list.
	
	* app/pixmaps/new.xpm:
	* app/pixmaps/eye.xbm:
	* app/pixmaps/lower.xpm:
	* app/pixmaps/raise.xpm:
	* app/pixmaps/delete.xpm:
	New files. Images for the layer dialog buttons.
	
	* lib/diagramdata.h
	* lib/diagramdata.c
	New files for the DiagramData and Layer structures and functions.
	
	* app/app_procs.c:
	Added call to create_layer_dialog() on startup.
	
	* app/commands.[ch]:
	New callbacks for showing the properties and layout dialog.
	Changes for the new DiagramData structure.

	* app/connectionpoint_ops.c:
	* app/cut_n_paste.c:
	* app/diagram.[ch]:
	* app/display.[ch]:
	* app/group.c:
	* app/modify_tool.c:
	* app/object_ops.[ch]:
	* app/render_eps.c:
	* lib/object.[ch]:
	Changes for the new DiagramData structure.

	* app/interface.c:
	* app/properties.c:
	Set correct wmclasses.

	* app/load_save.c:
	Fix load and save of layers.

	* diagram.dtd:
	Update DTD for layers.
	
	* app/menus.c:
	New menus for dialogs.

	
	* TODO:
	Some updates.
	
1998-12-06  Alexander Larsson  <alla@lysator.liu.se>

	* TODO:
	Removed the gtk 1.1.5 stuff.

	* configure.in:
	Updated gtk check to version 1.1.5.
	Updated version from 0.20 to 0.30

	* app/commands.[ch]:
	Updated some callbacks to be of type GtkItemFactoryCallback1.
	Not all are done yet, but it works anyway.

	* app/display.h:
	Removed Gtk 1.0.0 GtkAcceleratorTable references.
	
	* app/interface.c:
	* app/menus.[ch]:
	Update to Gtk 1.1.x functions.
	Use ItemFactory instead of MenuFactory.
	
	* app/render_gdk.c:
	Removed Gtk 1.0.0 references.

	* objects/UML/class_dialog.c:
	Scrolled window updates for Gtk 1.1.5.
	
	* lib/dia_xml.c:
	Removed ugly fix for gnome-xml bug. Make sure you get the
	newest version of gnome-xml from CVS.
	
1998-12-05  Alexander Larsson  <alla@lysator.liu.se>

	* TODO:
	Removed the xml load/save line.

	* lib/files.[ch]:
	Removed files.
	
	* lib/Makefile.am:
	Removed building of files.c

	* app/load_save.c:
	* lib/connection.c:
	* lib/element.c:
	* lib/object.c:
	* lib/orth_conn.c:
	* lib/render_object.c:
	* objects/UML/actor.c:
	* objects/UML/association.c:
	* objects/UML/class.c:
	* objects/UML/constraint.c:
	* objects/UML/dependency.c:
	* objects/UML/generalization.c:
	* objects/UML/implements.c:
	* objects/UML/large_package.c:
	* objects/UML/note.c:
	* objects/UML/realizes.c:
	* objects/UML/small_package.c:
	* objects/UML/uml.c:
	* objects/UML/usecase.c:
	* objects/network/bus.c:
	* objects/standard/arc.c:
	* objects/standard/box.c:
	* objects/standard/ellipse.c:
	* objects/standard/line.c:
	* objects/standard/textobj.c:
	* objects/standard/zigzagline.c:
	Removed all includes of files.h

	
1998-12-05  Alexander Larsson  <alla@lysator.liu.se>

	* dialog.dtd:
	Made the val property of string be implied.
	This makes it possible to save strings that
	are NULL. Just leave out val.

	* objects/lib/dia_xml.c:
	Fixed string so that it is possible to save strings
	that are NULL. Also made an ugly workaround of a
	bug in gnome-xml which removes empty properties.
	
	* objects/lib/orth_conn.c:
	Fixed a bug in saving. Forgot to step through the
	directions.
	
	* objects/UML/association.c: 
	* objects/UML/class.c: 
	* objects/UML/constraint.c: 
	* objects/UML/dependency.c: 
	* objects/UML/generalization.c: 
	* objects/UML/implements.c: 
	* objects/UML/large_package.c: 
	* objects/UML/note.c: 
	* objects/UML/small_package.c:
	* objects/UML/realizes.c:
	* objects/UML/usecase.c: 
	* objects/UML/actor.c: 
	Fixed UML objects to save as xml.
	The last two were done by asierra@servidor.unam.mx (asierra-981204)
	
	* objects/UML/uml.[ch]:
	Updated *_write() and *_read() functions to use xml.

	* objects/network/bus.c: 
	* objects/network/computer.c: 
	* objects/network/disc.c: 
	* objects/network/monitor.c:
	Updated network diagrams to use xml.

1998-12-02  Alexander Larsson  <alla@lysator.liu.se>

	* dialog.dtd:
	New file. DTD that describes the xml file format
	dia uses.

	* lib/dia_xml.[ch]:
	New files. Support for saving object to xml files.

	* configure.in:
	* app/Makefile.am:
	* lib/Makefile.am:
	Added check for and usage of gnome-xml library.

	* app/load_save.c:
	Major chages. Now saves/loads diagrams as xml.

	* lib/object.[ch]:
	* lib/element.[ch]:
	* lib/connection.[ch]:
	* lib/orth_conn.[ch]:
	* lib/render_object.[ch]:
	* lib/text.[ch]:
	Updated object support load/save functions for xml:

	* object/standard/arc.c:
	* object/standard/box.c:
	* object/standard/ellipse.c:
	* object/standard/line.c:
	* object/standard/textobj.c:
	* object/standard/zigzagline.c:
	Updated all standard objects to use xml.
	
	NOTE NOTE NOTE
	Only the standard objects are converted right now, don't
	save or load uml or network diagrams yet. Also, since this
	is new code it is deemed a bit unstable.
	
	* TODO
	Added a know bug.

1998-12-01  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/class.c:
	Changed classname font to Helvetica.
	Added more space above the classname

	* objects/UML/usecase.c:
	Correct placements of connectionpoints on ellipse.
	Better algorithm for deciding aspect ration on
	ellipse.

	These changes were made by Alejandro Aguilar Sierra
	<asierra@servidor.unam.mx>. (asierra-981201)

1998-11-30  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/actor.c:
	Changed the extents and alignment of the element
	and the text.

	* objects/UML/.cvsignore:
	Added usecase.lo and actor.lo.

1998-11-30  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/actor.c:
	* objects/UML/usecase.c:
	* objects/UML/pixmaps/actor.xpm:
	* objects/UML/pixmaps/case.xpm:
	New files. Implements usecase and actor UML objects.
	These objects are done by Alejandro Aguilar Sierra
	<asierra@servidor.unam.mx>.
	
	* objects/UML/Makefile.am:
	* objects/UML/pixmaps/Makefile.am:
	Added usecase and actor to makefile.
	
	* AUTHORS:
	Added Alejandro and Jerome to autors list.
	
1998-11-25  Alexander Larsson  <alla@lysator.liu.se>

	* objects/UML/class.c (umlclass_load):
	Fixed typo. Reported by Jerome.Abela@solsoft.fr

1998-11-24  Alexander Larsson  <alla@lysator.liu.se>

	* app/properties.c:
	Update connections when doing apply in the properties window.

	* objects/UML/uml.[ch]:
	* objects/UML/class.[ch]:
	* objects/UML/class_dialog.c:
	Added connection points on both sides of attributes and
	operations in UML classes.
	Based on idea from Jerome.Abela@solsoft.fr
	
1998-11-24  Alexander Larsson  <alla@lysator.liu.se>

	* README:
	Some new documentation about handles and connectionpoints.
	
	* lib/object.[ch]:
	Added functions object_add_connectionpoint and
	object_remove_connectionpoint for handling a dynamic
	number of connectionpoints.

	* objects/UML/class.c:
	Only reserve space for stereotype when it is shown.

	These changes are from Jerome Abela <Jerome.Abela@solsoft.fr>

1998-11-08  Alexander Larsson  <alla@lysator.liu.se>

	* app/connectionpoint_ops.c:
	* app/commands.c:
	* app/disp_callbacks.c:
	* app/display.[ch]:
	* app/grid.c:
	* app/handle_ops.c:
	* app/magnify.c:
	* app/modify_tool.c:
	* app/render_gdk.[ch]:
	* lib/render.h:
	Huge cleanup of internal rendering system.
	Moved a lot of data (pixmap, width, height & gc) into the GdkRenderer.
	This gives a few new methods for Interactive Renderers for setting
	clipping regions and drawing pixel based lines and rects.
	Updated the rest of the code to use the new stuff.
	
	* app/render_eps.c:
	Fixed warning.

	* lib/widgets.c:
	* objects/standard/zigzagline.c
	Fixed unused variable warnings.

	* lib/font.c:
	Fixedbug with stringwidth where width==0.

	* TODO:
	Added known bug.

1998-11-02  Alexander Larsson  <alla@lysator.liu.se>

	* lib/widgets.[ch]:
	Added suppot for setting the font of a
	DiaFontSelector widget.
	Also fixed some typos in the header.

	* lib/object.h: 
	Added a comment about the GetPRoperties method call.
	You have to make sure to update widget state when
	this method is called. (Not all objects do this yet,
	to be fixed.)

	* TODO:
	Some small updates

1998-11-01  Alexander Larsson  <alla@lysator.liu.se>

	* lib/font.c
	Fixed problem with height of ascent and descent for fonts.
	It didn't use the whole height (==ascent+descent) when calculatine
	ascent_ratio and descent_ratio.

	* objects/standard/textobj.c:
	* objects/standard/box.c:
	* objects/standard/ellipse.c:
	* objects/standard/line.c:
	* objects/standard/arc.c:
	Updated and added property dialogs for these objects.
	Also added line width/color/style to those objects
	that didn't have it.
	This change breaks fileformat compatibility for these objects.
	
	* objects/standard/zigzagline.c:
	Changed zigzagline to be based on OrthConn, much nicer.
	Also added line style and color to properties.
	This change breaks fileformat compatibility for zigzagline.

	* lib/message.c:
	Fixed bug in message(). Forgot a pair of '&'.

1998-10-29  Alexander Larsson  <alla@lysator.liu.se>

	* lib/widgets.[ch]:
	Added DiaColorSelector widget.
	This is a colored button that pops up a color selection
	dialog when pressed.

1998-10-28  Alexander Larsson  <alla@lysator.liu.se>

	* lib/widgets.[ch]:
	* lib/Makefile.am:
	New files, added widgets for selecting fonts, alignment
	and line-style. Will be used later.

1998-10-12  Alexander Larsson  <alla@lysator.liu.se>

	* app/Makefile.am:
	* lib/Makefile.am:
	* objects/UML/Makefile.am:
	* objects/network/Makefile.am:
	* objects/standard/Makefile.am:
	Changed "CFLAGS = -Wall -g" to "CFLAGS = @CFLAGS@"
	in all Makefile.am.

1998-10-03  Alexander Larsson  <alla@lysator.liu.se>

	* app/handle_ops.c (handle_draw):
	connected HANDLE_MINOR_CONTROL also becomes red.

1998-10-02  Alexander Larsson  <alla@lysator.liu.se>

	* Makefile.am:
	removed -ldl from linking. This is added if needed by configure.

	* app/app_procs.c:
	Open dlls with RTLD_LAZY if it is defined.
	Some cleanups: char *error -> const char *error
	Added fprintf()'s to where we exited because of errors.

	* lib/files.c:
	Include <sys/types.h>

1998-10-01  Alexander Larsson  <alla@lysator.liu.se>

	* acconfig.h:
	* configure.in:
	* app/app_procs.c:
	Detect dlopen better.
	Detect wether dlopen needs an underscore in the identifier.
	This code was mostly borrowed from guile.

	* lib/sheet.[ch]:
	* app/app_procs.c:
	* objects/standard/standard.c:
	* objects/network/network.c:
	* objects/UML/uml.c:
	* most objects:
	Changed the way sheets reference objects to use just the
	name. Changed module loading to a two stage model:
	First register_objects() is called for all modules.
	Then register_sheets() is called. This means that
	sheets can safely include objects from other modules.
	

1998-09-30  Alexander Larsson  <alla@lysator.liu.se>

	* objects/network/bus.c:
	* objects/network/network.c:
	* objects/network/Makefile.am:
	New file bus.c. Added new object: Ethernet bus.

	* objects/standard/box.c:
	Added call to gtk_spin_button_set_numeric for linewidth spinner
	in property dialog.

1998-09-30  Alexander Larsson  <alla@lysator.liu.se>

	* app/connectionpoint_ops.c:
	* app/create_object.c:
	* app/group.c:
	* app/handle_ops.c:
	* app/modify_tool.c:
	* lib/connection.c:
	* lib/element.c:
	* lib/handle.h:
	* lib/object.c:
	* lib/orth_conn.c:
	* loads of objects:
	Changed handle->connectable to handle->connect_type.
	Now handles can be HANDLE_CONNECTABLE_NOBREAK, which means
	that their connections don't break when moving objects.

	* app/diagram.c:
	Always select the last handle in an object that has
	the closest distance.
	
	* lib/geometry.[ch]:
	Added rectangle_add_point function.
	

1998-09-27  Alexander Larsson  <alla@lysator.liu.se>

	* app/properties.[ch]: New files. Handles the new properties
	dialog.

	* app/modify_tool.c: Changed to use new properties dialog.

	* app/object_ops.[ch]: Removed object_changed_callback, as it's
	not needed anymore. This is now handled differently in
	properties.c

	* lib/object.[ch]:
	Changed the properties ops for objects. Removed typedefs
	ChangedObjectTime and ObjectChangedFunc needed for the old way.
	Added object_return_null function.
	
	* app/group.c:
	* lib/render_object.c:
	* objects/*/*.c:
	Changed objects to use the new properties dialog.
	

1998-09-14  Nuno Ferreira  <nmrf@rnl.ist.utl.pt>

	* */Makefile.am (INCLUDES): Changes to work with srcdir !=
	builddir.

	* autogen.sh: New file. Copied from gtk and added a call to
	libtoolize. Anyone knows why this isn't done in gtk?

	* Removed autogenerated files.

1998-09-12  Alexander Larsson  <alla@lysator.liu.se>

	* Added call setlocale(LC_NUMERIC, "C") so that formating of
	  floating-point numbers in postscript output will be correct.
	* Did some cleanup of generated postscript files. 
